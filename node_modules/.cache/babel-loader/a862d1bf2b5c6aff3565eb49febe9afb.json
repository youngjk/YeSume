{"ast":null,"code":"const openPage = require('../openPage');\n\nconst scrapSection = require('../scrapSection');\n\nconst template = require('./companyScraperTemplate');\n\nconst logger = require('../logger')(__filename);\n\nmodule.exports = async (browser, cookies, url, waitTimeToScrapMs = 500, puppeteerAuthenticate = undefined) => {\n  logger.info(`starting scraping url: ${url}`);\n  let company = {};\n  let page;\n\n  if (url.includes('legacySchoolId=')) {\n    page = await openPage({\n      browser,\n      cookies,\n      url,\n      puppeteerAuthenticate\n    });\n    const aboutSelector = 'a[data-control-name=page_member_main_nav_about_tab]';\n    company.url = page.url();\n    await page.$eval(aboutSelector, async about => await about.click());\n    await page.waitForNavigation();\n  } else {\n    company.url = url;\n    url = url + '/about';\n    page = await openPage({\n      browser,\n      cookies,\n      url,\n      puppeteerAuthenticate\n    });\n  }\n\n  company.about = (await scrapSection(page, template.about))[0];\n  company.profile = (await scrapSection(page, template.profile))[0];\n  await page.close();\n  logger.info(`finished scraping url: ${url}`);\n  return company;\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/node_modules/scrapedin/src/company/company.js"],"names":["openPage","require","scrapSection","template","logger","__filename","module","exports","browser","cookies","url","waitTimeToScrapMs","puppeteerAuthenticate","undefined","info","company","page","includes","aboutSelector","$eval","about","click","waitForNavigation","profile","close"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAA5B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAMG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAAP,CAAqBI,UAArB,CAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiB,OAAOC,OAAP,EAAgBC,OAAhB,EAAyBC,GAAzB,EAA8BC,iBAAiB,GAAG,GAAlD,EAAuDC,qBAAqB,GAAGC,SAA/E,KAA6F;AAC5GT,EAAAA,MAAM,CAACU,IAAP,CAAa,0BAAyBJ,GAAI,EAA1C;AAEA,MAAIK,OAAO,GAAG,EAAd;AAEA,MAAIC,IAAJ;;AACA,MAAGN,GAAG,CAACO,QAAJ,CAAa,iBAAb,CAAH,EAAmC;AAC/BD,IAAAA,IAAI,GAAG,MAAMhB,QAAQ,CAAC;AAAEQ,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,GAApB;AAAyBE,MAAAA;AAAzB,KAAD,CAArB;AAEA,UAAMM,aAAa,GAAG,qDAAtB;AAEAH,IAAAA,OAAO,CAACL,GAAR,GAAcM,IAAI,CAACN,GAAL,EAAd;AAEA,UAAMM,IAAI,CAACG,KAAL,CAAWD,aAAX,EAA0B,MAAME,KAAN,IAAe,MAAMA,KAAK,CAACC,KAAN,EAA/C,CAAN;AACA,UAAML,IAAI,CAACM,iBAAL,EAAN;AACH,GATD,MASM;AACFP,IAAAA,OAAO,CAACL,GAAR,GAAcA,GAAd;AACAA,IAAAA,GAAG,GAAGA,GAAG,GAAG,QAAZ;AACAM,IAAAA,IAAI,GAAG,MAAMhB,QAAQ,CAAC;AAAEQ,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,GAApB;AAAyBE,MAAAA;AAAzB,KAAD,CAArB;AACH;;AACDG,EAAAA,OAAO,CAACK,KAAR,GAAgB,CAAC,MAAMlB,YAAY,CAACc,IAAD,EAAOb,QAAQ,CAACiB,KAAhB,CAAnB,EAA2C,CAA3C,CAAhB;AACAL,EAAAA,OAAO,CAACQ,OAAR,GAAkB,CAAC,MAAMrB,YAAY,CAACc,IAAD,EAAOb,QAAQ,CAACoB,OAAhB,CAAnB,EAA6C,CAA7C,CAAlB;AAEA,QAAMP,IAAI,CAACQ,KAAL,EAAN;AACApB,EAAAA,MAAM,CAACU,IAAP,CAAa,0BAAyBJ,GAAI,EAA1C;AAEA,SAAOK,OAAP;AAED,CA5BD","sourcesContent":["const openPage = require('../openPage')\nconst scrapSection = require('../scrapSection')\nconst template = require('./companyScraperTemplate')\n\nconst logger = require('../logger')(__filename)\n\nmodule.exports = async (browser, cookies, url, waitTimeToScrapMs = 500, puppeteerAuthenticate = undefined) => {\n  logger.info(`starting scraping url: ${url}`);\n\n  let company = {};\n\n  let page;\n  if(url.includes('legacySchoolId=')){\n      page = await openPage({ browser, cookies, url, puppeteerAuthenticate });\n\n      const aboutSelector = 'a[data-control-name=page_member_main_nav_about_tab]';\n\n      company.url = page.url();\n      \n      await page.$eval(aboutSelector, async about => await about.click());\n      await page.waitForNavigation();\n  } else{\n      company.url = url;\n      url = url + '/about';\n      page = await openPage({ browser, cookies, url, puppeteerAuthenticate });\n  }\n  company.about = (await scrapSection(page, template.about))[0];\n  company.profile = (await scrapSection(page, template.profile))[0];\n\n  await page.close();\n  logger.info(`finished scraping url: ${url}`);\n  \n  return company\n    \n}\n"]},"metadata":{},"sourceType":"script"}