{"ast":null,"code":"/* eslint no-undefined: 0 */\n'use strict';\n\nvar format = require('./format');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar jsonStringify = require('fast-safe-stringify');\n/*\n * function simple (info)\n * Returns a new instance of the simple format TransformStream\n * which writes a simple representation of logs.\n *\n *    const { level, message, splat, ...rest } = info;\n *\n *    ${level}: ${message}                            if rest is empty\n *    ${level}: ${message} ${JSON.stringify(rest)}    otherwise\n */\n\n\nmodule.exports = format(function (info) {\n  var stringifiedRest = jsonStringify(Object.assign({}, info, {\n    level: undefined,\n    message: undefined,\n    splat: undefined\n  }));\n  var padding = info.padding && info.padding[info.level] || '';\n\n  if (stringifiedRest !== '{}') {\n    info[MESSAGE] = info.level + ':' + padding + ' ' + info.message + ' ' + stringifiedRest;\n  } else {\n    info[MESSAGE] = info.level + ':' + padding + ' ' + info.message;\n  }\n\n  return info;\n});","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/logform/dist/simple.js"],"names":["format","require","_require","MESSAGE","jsonStringify","module","exports","info","stringifiedRest","Object","assign","level","undefined","message","splat","padding"],"mappings":"AAAA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIE,OAAO,GAAGD,QAAQ,CAACC,OADvB;;AAGA,IAAIC,aAAa,GAAGH,OAAO,CAAC,qBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAI,MAAM,CAACC,OAAP,GAAiBN,MAAM,CAAC,UAAUO,IAAV,EAAgB;AACtC,MAAIC,eAAe,GAAGJ,aAAa,CAACK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,EAAwB;AAC1DI,IAAAA,KAAK,EAAEC,SADmD;AAE1DC,IAAAA,OAAO,EAAED,SAFiD;AAG1DE,IAAAA,KAAK,EAAEF;AAHmD,GAAxB,CAAD,CAAnC;AAMA,MAAIG,OAAO,GAAGR,IAAI,CAACQ,OAAL,IAAgBR,IAAI,CAACQ,OAAL,CAAaR,IAAI,CAACI,KAAlB,CAAhB,IAA4C,EAA1D;;AACA,MAAIH,eAAe,KAAK,IAAxB,EAA8B;AAC5BD,IAAAA,IAAI,CAACJ,OAAD,CAAJ,GAAgBI,IAAI,CAACI,KAAL,GAAa,GAAb,GAAmBI,OAAnB,GAA6B,GAA7B,GAAmCR,IAAI,CAACM,OAAxC,GAAkD,GAAlD,GAAwDL,eAAxE;AACD,GAFD,MAEO;AACLD,IAAAA,IAAI,CAACJ,OAAD,CAAJ,GAAgBI,IAAI,CAACI,KAAL,GAAa,GAAb,GAAmBI,OAAnB,GAA6B,GAA7B,GAAmCR,IAAI,CAACM,OAAxD;AACD;;AAED,SAAON,IAAP;AACD,CAfsB,CAAvB","sourcesContent":["/* eslint no-undefined: 0 */\n'use strict';\n\nvar format = require('./format');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar jsonStringify = require('fast-safe-stringify');\n\n/*\n * function simple (info)\n * Returns a new instance of the simple format TransformStream\n * which writes a simple representation of logs.\n *\n *    const { level, message, splat, ...rest } = info;\n *\n *    ${level}: ${message}                            if rest is empty\n *    ${level}: ${message} ${JSON.stringify(rest)}    otherwise\n */\nmodule.exports = format(function (info) {\n  var stringifiedRest = jsonStringify(Object.assign({}, info, {\n    level: undefined,\n    message: undefined,\n    splat: undefined\n  }));\n\n  var padding = info.padding && info.padding[info.level] || '';\n  if (stringifiedRest !== '{}') {\n    info[MESSAGE] = info.level + ':' + padding + ' ' + info.message + ' ' + stringifiedRest;\n  } else {\n    info[MESSAGE] = info.level + ':' + padding + ' ' + info.message;\n  }\n\n  return info;\n});"]},"metadata":{},"sourceType":"module"}