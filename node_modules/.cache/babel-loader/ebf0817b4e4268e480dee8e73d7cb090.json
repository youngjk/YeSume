{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar colors = require('colors/safe');\n\nvar _require = require('triple-beam'),\n    LEVEL = _require.LEVEL; //\n// Fix colors not appearing in non-tty environments\n//\n\n\ncolors.enabled = true;\n/**\n * @property {RegExp} hasSpace\n * Simple regex to check for presence of spaces.\n */\n\nvar hasSpace = /\\s+/;\n/*\n * Colorizer format. Wraps the `level` and/or `message` properties\n * of the `info` objects with ANSI color codes based on a few options.\n */\n\nvar Colorizer = function () {\n  function Colorizer() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Colorizer);\n\n    if (opts.colors) {\n      this.addColors(opts.colors);\n    }\n\n    this.options = opts;\n  }\n  /*\n   * Adds the colors Object to the set of allColors\n   * known by the Colorizer\n   *\n   * @param {Object} colors Set of color mappings to add.\n   */\n\n\n  _createClass(Colorizer, [{\n    key: 'addColors',\n\n    /*\n     * Adds the colors Object to the set of allColors\n     * known by the Colorizer\n     *\n     * @param {Object} colors Set of color mappings to add.\n     */\n    value: function addColors(clrs) {\n      return Colorizer.addColors(clrs);\n    }\n    /*\n     * function colorize (lookup, level, message)\n     * Performs multi-step colorization using colors/safe\n     */\n\n  }, {\n    key: 'colorize',\n    value: function colorize(lookup, level, message) {\n      if (typeof message === 'undefined') {\n        message = level;\n      } //\n      // If the color for the level is just a string\n      // then attempt to colorize the message with it.\n      //\n\n\n      if (!Array.isArray(Colorizer.allColors[lookup])) {\n        return colors[Colorizer.allColors[lookup]](message);\n      } //\n      // If it is an Array then iterate over that Array, applying\n      // the colors function for each item.\n      //\n\n\n      for (var i = 0, len = Colorizer.allColors[lookup].length; i < len; i++) {\n        message = colors[Colorizer.allColors[lookup][i]](message);\n      }\n\n      return message;\n    }\n    /*\n     * function transform (info, opts)\n     * Attempts to colorize the { level, message } of the given\n     * `logform` info object.\n     */\n\n  }, {\n    key: 'transform',\n    value: function transform(info, opts) {\n      if (opts.level || opts.all || !opts.message) {\n        info.level = this.colorize(info[LEVEL], info.level);\n      }\n\n      if (opts.all || opts.message) {\n        info.message = this.colorize(info[LEVEL], info.level, info.message);\n      }\n\n      return info;\n    }\n  }], [{\n    key: 'addColors',\n    value: function addColors(clrs) {\n      var nextColors = Object.keys(clrs).reduce(function (acc, level) {\n        acc[level] = hasSpace.test(clrs[level]) ? clrs[level].split(hasSpace) : clrs[level];\n        return acc;\n      }, {});\n      Colorizer.allColors = Object.assign({}, Colorizer.allColors || {}, nextColors);\n      return Colorizer.allColors;\n    }\n  }]);\n\n  return Colorizer;\n}();\n/*\n * function colorize (info)\n * Returns a new instance of the colorize Format that applies\n * level colors to `info` objects. This was previously exposed\n * as { colorize: true } to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = function (opts) {\n  return new Colorizer(opts);\n}; //\n// Attach the Colorizer for registration purposes\n//\n\n\nmodule.exports.Colorizer = module.exports.Format = Colorizer;","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/node_modules/logform/dist/colorize.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","colors","require","_require","LEVEL","enabled","hasSpace","Colorizer","opts","arguments","undefined","addColors","options","value","clrs","colorize","lookup","level","message","Array","isArray","allColors","len","transform","info","all","nextColors","keys","reduce","acc","test","split","assign","module","exports","Format"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar colors = require('colors/safe');\n\nvar _require = require('triple-beam'),\n    LEVEL = _require.LEVEL;\n\n//\n// Fix colors not appearing in non-tty environments\n//\n\n\ncolors.enabled = true;\n\n/**\n * @property {RegExp} hasSpace\n * Simple regex to check for presence of spaces.\n */\nvar hasSpace = /\\s+/;\n\n/*\n * Colorizer format. Wraps the `level` and/or `message` properties\n * of the `info` objects with ANSI color codes based on a few options.\n */\n\nvar Colorizer = function () {\n  function Colorizer() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Colorizer);\n\n    if (opts.colors) {\n      this.addColors(opts.colors);\n    }\n\n    this.options = opts;\n  }\n\n  /*\n   * Adds the colors Object to the set of allColors\n   * known by the Colorizer\n   *\n   * @param {Object} colors Set of color mappings to add.\n   */\n\n\n  _createClass(Colorizer, [{\n    key: 'addColors',\n\n\n    /*\n     * Adds the colors Object to the set of allColors\n     * known by the Colorizer\n     *\n     * @param {Object} colors Set of color mappings to add.\n     */\n    value: function addColors(clrs) {\n      return Colorizer.addColors(clrs);\n    }\n\n    /*\n     * function colorize (lookup, level, message)\n     * Performs multi-step colorization using colors/safe\n     */\n\n  }, {\n    key: 'colorize',\n    value: function colorize(lookup, level, message) {\n      if (typeof message === 'undefined') {\n        message = level;\n      }\n\n      //\n      // If the color for the level is just a string\n      // then attempt to colorize the message with it.\n      //\n      if (!Array.isArray(Colorizer.allColors[lookup])) {\n        return colors[Colorizer.allColors[lookup]](message);\n      }\n\n      //\n      // If it is an Array then iterate over that Array, applying\n      // the colors function for each item.\n      //\n      for (var i = 0, len = Colorizer.allColors[lookup].length; i < len; i++) {\n        message = colors[Colorizer.allColors[lookup][i]](message);\n      }\n\n      return message;\n    }\n\n    /*\n     * function transform (info, opts)\n     * Attempts to colorize the { level, message } of the given\n     * `logform` info object.\n     */\n\n  }, {\n    key: 'transform',\n    value: function transform(info, opts) {\n      if (opts.level || opts.all || !opts.message) {\n        info.level = this.colorize(info[LEVEL], info.level);\n      }\n\n      if (opts.all || opts.message) {\n        info.message = this.colorize(info[LEVEL], info.level, info.message);\n      }\n\n      return info;\n    }\n  }], [{\n    key: 'addColors',\n    value: function addColors(clrs) {\n      var nextColors = Object.keys(clrs).reduce(function (acc, level) {\n        acc[level] = hasSpace.test(clrs[level]) ? clrs[level].split(hasSpace) : clrs[level];\n\n        return acc;\n      }, {});\n\n      Colorizer.allColors = Object.assign({}, Colorizer.allColors || {}, nextColors);\n      return Colorizer.allColors;\n    }\n  }]);\n\n  return Colorizer;\n}();\n\n/*\n * function colorize (info)\n * Returns a new instance of the colorize Format that applies\n * level colors to `info` objects. This was previously exposed\n * as { colorize: true } to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = function (opts) {\n  return new Colorizer(opts);\n};\n\n//\n// Attach the Colorizer for registration purposes\n//\nmodule.exports.Colorizer = module.exports.Format = Colorizer;"]},"metadata":{},"sourceType":"script"}