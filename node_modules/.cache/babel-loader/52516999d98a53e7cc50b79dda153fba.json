{"ast":null,"code":"const path = require('path');\n\nconst pkg = require('./package');\n\nconst winston = require('winston');\n\nconst logger = winston.createLogger({\n  format: winston.format.combine(winston.format.splat(), winston.format.simple(), winston.format.timestamp(), winston.format.colorize(), winston.format.printf(info => `${pkg.name}: ${info.timestamp} ${info.level}: ${info.message}`)),\n  transports: [new winston.transports.Console()]\n});\n\nconst loggerWrapper = absoluteFilePath => {\n  const file = path.relative(__dirname, absoluteFilePath); // Because this file is in the source code root folder, the above will make all paths relative to it: just the info needed for the log.\n\n  return {\n    info: message => logger.info(`[${file}] ${message}`),\n    warn: message => logger.warn(`[${file}] ${message}`),\n    error: (message, error) => logger.error(`[${file}] ${message}${error && error.stack ? error.stack : error || ''}`),\n    stopLogging: () => {\n      logger.silent = true;\n    }\n  };\n};\n\nmodule.exports = loggerWrapper;","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/scrapedin/src/logger.js"],"names":["path","require","pkg","winston","logger","createLogger","format","combine","splat","simple","timestamp","colorize","printf","info","name","level","message","transports","Console","loggerWrapper","absoluteFilePath","file","relative","__dirname","warn","error","stack","stopLogging","silent","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMG,MAAM,GAAGD,OAAO,CAACE,YAAR,CAAqB;AAClCC,EAAAA,MAAM,EAAEH,OAAO,CAACG,MAAR,CAAeC,OAAf,CACNJ,OAAO,CAACG,MAAR,CAAeE,KAAf,EADM,EAENL,OAAO,CAACG,MAAR,CAAeG,MAAf,EAFM,EAGNN,OAAO,CAACG,MAAR,CAAeI,SAAf,EAHM,EAINP,OAAO,CAACG,MAAR,CAAeK,QAAf,EAJM,EAKNR,OAAO,CAACG,MAAR,CAAeM,MAAf,CAAsBC,IAAI,IAAK,GAAEX,GAAG,CAACY,IAAK,KAAID,IAAI,CAACH,SAAU,IAAGG,IAAI,CAACE,KAAM,KAAIF,IAAI,CAACG,OAAQ,EAA5F,CALM,CAD0B;AAQlCC,EAAAA,UAAU,EAAE,CAAC,IAAId,OAAO,CAACc,UAAR,CAAmBC,OAAvB,EAAD;AARsB,CAArB,CAAf;;AAWA,MAAMC,aAAa,GAAIC,gBAAD,IAAsB;AAC1C,QAAMC,IAAI,GAAGrB,IAAI,CAACsB,QAAL,CAAcC,SAAd,EAAyBH,gBAAzB,CAAb,CAD0C,CAE1C;;AAEA,SAAO;AACLP,IAAAA,IAAI,EAAGG,OAAD,IAAaZ,MAAM,CAACS,IAAP,CAAa,IAAGQ,IAAK,KAAIL,OAAQ,EAAjC,CADd;AAELQ,IAAAA,IAAI,EAAGR,OAAD,IAAaZ,MAAM,CAACoB,IAAP,CAAa,IAAGH,IAAK,KAAIL,OAAQ,EAAjC,CAFd;AAGLS,IAAAA,KAAK,EAAE,CAACT,OAAD,EAAUS,KAAV,KAAoBrB,MAAM,CAACqB,KAAP,CAAc,IAAGJ,IAAK,KAAIL,OAAQ,GAAES,KAAK,IAAIA,KAAK,CAACC,KAAf,GAAuBD,KAAK,CAACC,KAA7B,GAAsCD,KAAK,IAAI,EAAI,EAAvF,CAHtB;AAILE,IAAAA,WAAW,EAAE,MAAM;AACjBvB,MAAAA,MAAM,CAACwB,MAAP,GAAgB,IAAhB;AACD;AANI,GAAP;AAQD,CAZD;;AAcAC,MAAM,CAACC,OAAP,GAAiBX,aAAjB","sourcesContent":["const path = require('path')\nconst pkg = require('./package')\nconst winston = require('winston')\nconst logger = winston.createLogger({\n  format: winston.format.combine(\n    winston.format.splat(),\n    winston.format.simple(),\n    winston.format.timestamp(),\n    winston.format.colorize(),\n    winston.format.printf(info => `${pkg.name}: ${info.timestamp} ${info.level}: ${info.message}`)\n  ),\n  transports: [new winston.transports.Console()]\n})\n\nconst loggerWrapper = (absoluteFilePath) => {\n  const file = path.relative(__dirname, absoluteFilePath)\n  // Because this file is in the source code root folder, the above will make all paths relative to it: just the info needed for the log.\n\n  return {\n    info: (message) => logger.info(`[${file}] ${message}`),\n    warn: (message) => logger.warn(`[${file}] ${message}`),\n    error: (message, error) => logger.error(`[${file}] ${message}${error && error.stack ? error.stack : (error || '')}`),\n    stopLogging: () => {\n      logger.silent = true\n    }\n  }\n}\n\nmodule.exports = loggerWrapper\n"]},"metadata":{},"sourceType":"module"}