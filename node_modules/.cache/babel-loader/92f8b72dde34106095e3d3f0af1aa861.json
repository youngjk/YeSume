{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/Projects/yesume/src/components/Mobile_slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MobileSlider = ({\n  slides\n}) => {\n  _s();\n\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  }; // Check if the props is an array or have contents inside\n\n\n  if (Array.isArray(slides) || length <= 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile-slider-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MobileSlider, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");\n\n_c = MobileSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileSlider\");","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/components/Mobile_slider.js"],"names":["React","useState","MobileSlider","slides","current","setCurrent","length","nextSlide","prevSlide","Array","isArray"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMK,MAAM,GAAGH,MAAM,CAACG,MAAtB;;AAEA,QAAMC,SAAS,GAAG,MAAK;AACrBF,IAAAA,UAAU,CAACD,OAAO,KAAKE,MAAM,GAAG,CAArB,GAAyB,CAAzB,GAA6BF,OAAO,GAAG,CAAxC,CAAV;AACD,GAFD;;AAIA,QAAMI,SAAS,GAAG,MAAM;AACtBH,IAAAA,UAAU,CAACD,OAAO,KAAK,CAAZ,GAAgBE,MAAM,GAAG,CAAzB,GAA6BF,OAAO,GAAG,CAAxC,CAAV;AACD,GAFD,CARwC,CAYxC;;;AACA,MAAGK,KAAK,CAACC,OAAN,CAAcP,MAAd,KAAyBG,MAAM,IAAI,CAAtC,EAAwC;AACtC,WAAO,IAAP;AACD;;AAED,sBACA;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADA;AAID,CArBM;;GAAMJ,Y;;KAAAA,Y","sourcesContent":["import React, {useState} from 'react';\n\nexport const MobileSlider = ({slides}) => {\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n  \n  const nextSlide = () =>{\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  }\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  }\n\n  // Check if the props is an array or have contents inside\n  if(Array.isArray(slides) || length <= 0){\n    return null;\n  }\n\n  return (\n  <div className=\"mobile-slider-container\">\n  </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}