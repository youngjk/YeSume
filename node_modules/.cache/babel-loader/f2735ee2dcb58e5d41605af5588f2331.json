{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {\n  assert\n} = require('./helper');\n\nclass Dialog {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {string} type\n   * @param {string} message\n   * @param {(string|undefined)} defaultValue\n   */\n  constructor(client, type, message, defaultValue = '') {\n    this._client = client;\n    this._type = type;\n    this._message = message;\n    this._handled = false;\n    this._defaultValue = defaultValue;\n  }\n  /**\n   * @return {string}\n   */\n\n\n  type() {\n    return this._type;\n  }\n  /**\n   * @return {string}\n   */\n\n\n  message() {\n    return this._message;\n  }\n  /**\n   * @return {string}\n   */\n\n\n  defaultValue() {\n    return this._defaultValue;\n  }\n  /**\n   * @param {string=} promptText\n   */\n\n\n  async accept(promptText) {\n    assert(!this._handled, 'Cannot accept dialog which is already handled!');\n    this._handled = true;\n    await this._client.send('Page.handleJavaScriptDialog', {\n      accept: true,\n      promptText: promptText\n    });\n  }\n\n  async dismiss() {\n    assert(!this._handled, 'Cannot dismiss dialog which is already handled!');\n    this._handled = true;\n    await this._client.send('Page.handleJavaScriptDialog', {\n      accept: false\n    });\n  }\n\n}\n\nDialog.Type = {\n  Alert: 'alert',\n  BeforeUnload: 'beforeunload',\n  Confirm: 'confirm',\n  Prompt: 'prompt'\n};\nmodule.exports = {\n  Dialog\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/puppeteer/lib/Dialog.js"],"names":["assert","require","Dialog","constructor","client","type","message","defaultValue","_client","_type","_message","_handled","_defaultValue","accept","promptText","send","dismiss","Type","Alert","BeforeUnload","Confirm","Prompt","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM;AAACA,EAAAA;AAAD,IAAWC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,MAAN,CAAa;AACX;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,MAAD,EAASC,IAAT,EAAeC,OAAf,EAAwBC,YAAY,GAAG,EAAvC,EAA2C;AACpD,SAAKC,OAAL,GAAeJ,MAAf;AACA,SAAKK,KAAL,GAAaJ,IAAb;AACA,SAAKK,QAAL,GAAgBJ,OAAhB;AACA,SAAKK,QAAL,GAAgB,KAAhB;AACA,SAAKC,aAAL,GAAqBL,YAArB;AACD;AAED;AACF;AACA;;;AACEF,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKI,KAAZ;AACD;AAED;AACF;AACA;;;AACEH,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKI,QAAZ;AACD;AAED;AACF;AACA;;;AACEH,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKK,aAAZ;AACD;AAED;AACF;AACA;;;AACc,QAANC,MAAM,CAACC,UAAD,EAAa;AACvBd,IAAAA,MAAM,CAAC,CAAC,KAAKW,QAAP,EAAiB,gDAAjB,CAAN;AACA,SAAKA,QAAL,GAAgB,IAAhB;AACA,UAAM,KAAKH,OAAL,CAAaO,IAAb,CAAkB,6BAAlB,EAAiD;AACrDF,MAAAA,MAAM,EAAE,IAD6C;AAErDC,MAAAA,UAAU,EAAEA;AAFyC,KAAjD,CAAN;AAID;;AAEY,QAAPE,OAAO,GAAG;AACdhB,IAAAA,MAAM,CAAC,CAAC,KAAKW,QAAP,EAAiB,iDAAjB,CAAN;AACA,SAAKA,QAAL,GAAgB,IAAhB;AACA,UAAM,KAAKH,OAAL,CAAaO,IAAb,CAAkB,6BAAlB,EAAiD;AACrDF,MAAAA,MAAM,EAAE;AAD6C,KAAjD,CAAN;AAGD;;AAtDU;;AAyDbX,MAAM,CAACe,IAAP,GAAc;AACZC,EAAAA,KAAK,EAAE,OADK;AAEZC,EAAAA,YAAY,EAAE,cAFF;AAGZC,EAAAA,OAAO,EAAE,SAHG;AAIZC,EAAAA,MAAM,EAAE;AAJI,CAAd;AAOAC,MAAM,CAACC,OAAP,GAAiB;AAACrB,EAAAA;AAAD,CAAjB","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {assert} = require('./helper');\n\nclass Dialog {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {string} type\n   * @param {string} message\n   * @param {(string|undefined)} defaultValue\n   */\n  constructor(client, type, message, defaultValue = '') {\n    this._client = client;\n    this._type = type;\n    this._message = message;\n    this._handled = false;\n    this._defaultValue = defaultValue;\n  }\n\n  /**\n   * @return {string}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @return {string}\n   */\n  message() {\n    return this._message;\n  }\n\n  /**\n   * @return {string}\n   */\n  defaultValue() {\n    return this._defaultValue;\n  }\n\n  /**\n   * @param {string=} promptText\n   */\n  async accept(promptText) {\n    assert(!this._handled, 'Cannot accept dialog which is already handled!');\n    this._handled = true;\n    await this._client.send('Page.handleJavaScriptDialog', {\n      accept: true,\n      promptText: promptText\n    });\n  }\n\n  async dismiss() {\n    assert(!this._handled, 'Cannot dismiss dialog which is already handled!');\n    this._handled = true;\n    await this._client.send('Page.handleJavaScriptDialog', {\n      accept: false\n    });\n  }\n}\n\nDialog.Type = {\n  Alert: 'alert',\n  BeforeUnload: 'beforeunload',\n  Confirm: 'confirm',\n  Prompt: 'prompt'\n};\n\nmodule.exports = {Dialog};\n"]},"metadata":{},"sourceType":"module"}