{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {\n  helper,\n  assert\n} = require('./helper');\n\nconst {\n  Target\n} = require('./Target');\n\nconst EventEmitter = require('events');\n\nconst {\n  TaskQueue\n} = require('./TaskQueue');\n\nconst {\n  Events\n} = require('./Events');\n\nclass Browser extends EventEmitter {\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Array<string>} contextIds\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {?Puppeteer.ChildProcess} process\n   * @param {function()=} closeCallback\n   */\n  static async create(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback) {\n    const browser = new Browser(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback);\n    await connection.send('Target.setDiscoverTargets', {\n      discover: true\n    });\n    return browser;\n  }\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Array<string>} contextIds\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {?Puppeteer.ChildProcess} process\n   * @param {(function():Promise)=} closeCallback\n   */\n\n\n  constructor(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback) {\n    super();\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._process = process;\n    this._screenshotTaskQueue = new TaskQueue();\n    this._connection = connection;\n    this._closeCallback = closeCallback || new Function();\n    this._defaultContext = new BrowserContext(this._connection, this, null);\n    /** @type {Map<string, BrowserContext>} */\n\n    this._contexts = new Map();\n\n    for (const contextId of contextIds) this._contexts.set(contextId, new BrowserContext(this._connection, this, contextId));\n    /** @type {Map<string, Target>} */\n\n\n    this._targets = new Map();\n\n    this._connection.on(Events.Connection.Disconnected, () => this.emit(Events.Browser.Disconnected));\n\n    this._connection.on('Target.targetCreated', this._targetCreated.bind(this));\n\n    this._connection.on('Target.targetDestroyed', this._targetDestroyed.bind(this));\n\n    this._connection.on('Target.targetInfoChanged', this._targetInfoChanged.bind(this));\n  }\n  /**\n   * @return {?Puppeteer.ChildProcess}\n   */\n\n\n  process() {\n    return this._process;\n  }\n  /**\n   * @return {!Promise<!BrowserContext>}\n   */\n\n\n  async createIncognitoBrowserContext() {\n    const {\n      browserContextId\n    } = await this._connection.send('Target.createBrowserContext');\n    const context = new BrowserContext(this._connection, this, browserContextId);\n\n    this._contexts.set(browserContextId, context);\n\n    return context;\n  }\n  /**\n   * @return {!Array<!BrowserContext>}\n   */\n\n\n  browserContexts() {\n    return [this._defaultContext, ...Array.from(this._contexts.values())];\n  }\n  /**\n   * @return {!BrowserContext}\n   */\n\n\n  defaultBrowserContext() {\n    return this._defaultContext;\n  }\n  /**\n   * @param {?string} contextId\n   */\n\n\n  async _disposeContext(contextId) {\n    await this._connection.send('Target.disposeBrowserContext', {\n      browserContextId: contextId || undefined\n    });\n\n    this._contexts.delete(contextId);\n  }\n  /**\n   * @param {!Protocol.Target.targetCreatedPayload} event\n   */\n\n\n  async _targetCreated(event) {\n    const targetInfo = event.targetInfo;\n    const {\n      browserContextId\n    } = targetInfo;\n    const context = browserContextId && this._contexts.has(browserContextId) ? this._contexts.get(browserContextId) : this._defaultContext;\n    const target = new Target(targetInfo, context, () => this._connection.createSession(targetInfo), this._ignoreHTTPSErrors, this._defaultViewport, this._screenshotTaskQueue);\n    assert(!this._targets.has(event.targetInfo.targetId), 'Target should not exist before targetCreated');\n\n    this._targets.set(event.targetInfo.targetId, target);\n\n    if (await target._initializedPromise) {\n      this.emit(Events.Browser.TargetCreated, target);\n      context.emit(Events.BrowserContext.TargetCreated, target);\n    }\n  }\n  /**\n   * @param {{targetId: string}} event\n   */\n\n\n  async _targetDestroyed(event) {\n    const target = this._targets.get(event.targetId);\n\n    target._initializedCallback(false);\n\n    this._targets.delete(event.targetId);\n\n    target._closedCallback();\n\n    if (await target._initializedPromise) {\n      this.emit(Events.Browser.TargetDestroyed, target);\n      target.browserContext().emit(Events.BrowserContext.TargetDestroyed, target);\n    }\n  }\n  /**\n   * @param {!Protocol.Target.targetInfoChangedPayload} event\n   */\n\n\n  _targetInfoChanged(event) {\n    const target = this._targets.get(event.targetInfo.targetId);\n\n    assert(target, 'target should exist before targetInfoChanged');\n    const previousURL = target.url();\n    const wasInitialized = target._isInitialized;\n\n    target._targetInfoChanged(event.targetInfo);\n\n    if (wasInitialized && previousURL !== target.url()) {\n      this.emit(Events.Browser.TargetChanged, target);\n      target.browserContext().emit(Events.BrowserContext.TargetChanged, target);\n    }\n  }\n  /**\n   * @return {string}\n   */\n\n\n  wsEndpoint() {\n    return this._connection.url();\n  }\n  /**\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n\n\n  async newPage() {\n    return this._defaultContext.newPage();\n  }\n  /**\n   * @param {?string} contextId\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n\n\n  async _createPageInContext(contextId) {\n    const {\n      targetId\n    } = await this._connection.send('Target.createTarget', {\n      url: 'about:blank',\n      browserContextId: contextId || undefined\n    });\n    const target = await this._targets.get(targetId);\n    assert(await target._initializedPromise, 'Failed to create target for page');\n    const page = await target.page();\n    return page;\n  }\n  /**\n   * @return {!Array<!Target>}\n   */\n\n\n  targets() {\n    return Array.from(this._targets.values()).filter(target => target._isInitialized);\n  }\n  /**\n   * @return {!Target}\n   */\n\n\n  target() {\n    return this.targets().find(target => target.type() === 'browser');\n  }\n  /**\n   * @param {function(!Target):boolean} predicate\n   * @param {{timeout?: number}=} options\n   * @return {!Promise<!Target>}\n   */\n\n\n  async waitForTarget(predicate, options = {}) {\n    const {\n      timeout = 30000\n    } = options;\n    const existingTarget = this.targets().find(predicate);\n    if (existingTarget) return existingTarget;\n    let resolve;\n    const targetPromise = new Promise(x => resolve = x);\n    this.on(Events.Browser.TargetCreated, check);\n    this.on(Events.Browser.TargetChanged, check);\n\n    try {\n      if (!timeout) return await targetPromise;\n      return await helper.waitWithTimeout(targetPromise, 'target', timeout);\n    } finally {\n      this.removeListener(Events.Browser.TargetCreated, check);\n      this.removeListener(Events.Browser.TargetChanged, check);\n    }\n    /**\n     * @param {!Target} target\n     */\n\n\n    function check(target) {\n      if (predicate(target)) resolve(target);\n    }\n  }\n  /**\n   * @return {!Promise<!Array<!Puppeteer.Page>>}\n   */\n\n\n  async pages() {\n    const contextPages = await Promise.all(this.browserContexts().map(context => context.pages())); // Flatten array.\n\n    return contextPages.reduce((acc, x) => acc.concat(x), []);\n  }\n  /**\n   * @return {!Promise<string>}\n   */\n\n\n  async version() {\n    const version = await this._getVersion();\n    return version.product;\n  }\n  /**\n   * @return {!Promise<string>}\n   */\n\n\n  async userAgent() {\n    const version = await this._getVersion();\n    return version.userAgent;\n  }\n\n  async close() {\n    await this._closeCallback.call(null);\n    this.disconnect();\n  }\n\n  disconnect() {\n    this._connection.dispose();\n  }\n  /**\n   * @return {!Promise<!Object>}\n   */\n\n\n  _getVersion() {\n    return this._connection.send('Browser.getVersion');\n  }\n\n}\n\nclass BrowserContext extends EventEmitter {\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Browser} browser\n   * @param {?string} contextId\n   */\n  constructor(connection, browser, contextId) {\n    super();\n    this._connection = connection;\n    this._browser = browser;\n    this._id = contextId;\n  }\n  /**\n   * @return {!Array<!Target>} target\n   */\n\n\n  targets() {\n    return this._browser.targets().filter(target => target.browserContext() === this);\n  }\n  /**\n   * @param {function(!Target):boolean} predicate\n   * @param {{timeout?: number}=} options\n   * @return {!Promise<!Target>}\n   */\n\n\n  waitForTarget(predicate, options) {\n    return this._browser.waitForTarget(target => target.browserContext() === this && predicate(target), options);\n  }\n  /**\n   * @return {!Promise<!Array<!Puppeteer.Page>>}\n   */\n\n\n  async pages() {\n    const pages = await Promise.all(this.targets().filter(target => target.type() === 'page').map(target => target.page()));\n    return pages.filter(page => !!page);\n  }\n  /**\n   * @return {boolean}\n   */\n\n\n  isIncognito() {\n    return !!this._id;\n  }\n  /**\n   * @param {string} origin\n   * @param {!Array<string>} permissions\n   */\n\n\n  async overridePermissions(origin, permissions) {\n    const webPermissionToProtocol = new Map([['geolocation', 'geolocation'], ['midi', 'midi'], ['notifications', 'notifications'], ['push', 'push'], ['camera', 'videoCapture'], ['microphone', 'audioCapture'], ['background-sync', 'backgroundSync'], ['ambient-light-sensor', 'sensors'], ['accelerometer', 'sensors'], ['gyroscope', 'sensors'], ['magnetometer', 'sensors'], ['accessibility-events', 'accessibilityEvents'], ['clipboard-read', 'clipboardRead'], ['clipboard-write', 'clipboardWrite'], ['payment-handler', 'paymentHandler'], // chrome-specific permissions we have.\n    ['midi-sysex', 'midiSysex']]);\n    permissions = permissions.map(permission => {\n      const protocolPermission = webPermissionToProtocol.get(permission);\n      if (!protocolPermission) throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    await this._connection.send('Browser.grantPermissions', {\n      origin,\n      browserContextId: this._id || undefined,\n      permissions\n    });\n  }\n\n  async clearPermissionOverrides() {\n    await this._connection.send('Browser.resetPermissions', {\n      browserContextId: this._id || undefined\n    });\n  }\n  /**\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n\n\n  newPage() {\n    return this._browser._createPageInContext(this._id);\n  }\n  /**\n   * @return {!Browser}\n   */\n\n\n  browser() {\n    return this._browser;\n  }\n\n  async close() {\n    assert(this._id, 'Non-incognito profiles cannot be closed!');\n    await this._browser._disposeContext(this._id);\n  }\n\n}\n\nmodule.exports = {\n  Browser,\n  BrowserContext\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/node_modules/puppeteer/lib/Browser.js"],"names":["helper","assert","require","Target","EventEmitter","TaskQueue","Events","Browser","create","connection","contextIds","ignoreHTTPSErrors","defaultViewport","process","closeCallback","browser","send","discover","constructor","_ignoreHTTPSErrors","_defaultViewport","_process","_screenshotTaskQueue","_connection","_closeCallback","Function","_defaultContext","BrowserContext","_contexts","Map","contextId","set","_targets","on","Connection","Disconnected","emit","_targetCreated","bind","_targetDestroyed","_targetInfoChanged","createIncognitoBrowserContext","browserContextId","context","browserContexts","Array","from","values","defaultBrowserContext","_disposeContext","undefined","delete","event","targetInfo","has","get","target","createSession","targetId","_initializedPromise","TargetCreated","_initializedCallback","_closedCallback","TargetDestroyed","browserContext","previousURL","url","wasInitialized","_isInitialized","TargetChanged","wsEndpoint","newPage","_createPageInContext","page","targets","filter","find","type","waitForTarget","predicate","options","timeout","existingTarget","resolve","targetPromise","Promise","x","check","waitWithTimeout","removeListener","pages","contextPages","all","map","reduce","acc","concat","version","_getVersion","product","userAgent","close","call","disconnect","dispose","_browser","_id","isIncognito","overridePermissions","origin","permissions","webPermissionToProtocol","permission","protocolPermission","Error","clearPermissionOverrides","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { helper, assert } = require('./helper');\nconst {Target} = require('./Target');\nconst EventEmitter = require('events');\nconst {TaskQueue} = require('./TaskQueue');\nconst {Events} = require('./Events');\n\nclass Browser extends EventEmitter {\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Array<string>} contextIds\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {?Puppeteer.ChildProcess} process\n   * @param {function()=} closeCallback\n   */\n  static async create(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback) {\n    const browser = new Browser(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback);\n    await connection.send('Target.setDiscoverTargets', {discover: true});\n    return browser;\n  }\n\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Array<string>} contextIds\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {?Puppeteer.ChildProcess} process\n   * @param {(function():Promise)=} closeCallback\n   */\n  constructor(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback) {\n    super();\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._process = process;\n    this._screenshotTaskQueue = new TaskQueue();\n    this._connection = connection;\n    this._closeCallback = closeCallback || new Function();\n\n    this._defaultContext = new BrowserContext(this._connection, this, null);\n    /** @type {Map<string, BrowserContext>} */\n    this._contexts = new Map();\n    for (const contextId of contextIds)\n      this._contexts.set(contextId, new BrowserContext(this._connection, this, contextId));\n\n    /** @type {Map<string, Target>} */\n    this._targets = new Map();\n    this._connection.on(Events.Connection.Disconnected, () => this.emit(Events.Browser.Disconnected));\n    this._connection.on('Target.targetCreated', this._targetCreated.bind(this));\n    this._connection.on('Target.targetDestroyed', this._targetDestroyed.bind(this));\n    this._connection.on('Target.targetInfoChanged', this._targetInfoChanged.bind(this));\n  }\n\n  /**\n   * @return {?Puppeteer.ChildProcess}\n   */\n  process() {\n    return this._process;\n  }\n\n  /**\n   * @return {!Promise<!BrowserContext>}\n   */\n  async createIncognitoBrowserContext() {\n    const {browserContextId} = await this._connection.send('Target.createBrowserContext');\n    const context = new BrowserContext(this._connection, this, browserContextId);\n    this._contexts.set(browserContextId, context);\n    return context;\n  }\n\n  /**\n   * @return {!Array<!BrowserContext>}\n   */\n  browserContexts() {\n    return [this._defaultContext, ...Array.from(this._contexts.values())];\n  }\n\n  /**\n   * @return {!BrowserContext}\n   */\n  defaultBrowserContext() {\n    return this._defaultContext;\n  }\n\n  /**\n   * @param {?string} contextId\n   */\n  async _disposeContext(contextId) {\n    await this._connection.send('Target.disposeBrowserContext', {browserContextId: contextId || undefined});\n    this._contexts.delete(contextId);\n  }\n\n  /**\n   * @param {!Protocol.Target.targetCreatedPayload} event\n   */\n  async _targetCreated(event) {\n    const targetInfo = event.targetInfo;\n    const {browserContextId} = targetInfo;\n    const context = (browserContextId && this._contexts.has(browserContextId)) ? this._contexts.get(browserContextId) : this._defaultContext;\n\n    const target = new Target(targetInfo, context, () => this._connection.createSession(targetInfo), this._ignoreHTTPSErrors, this._defaultViewport, this._screenshotTaskQueue);\n    assert(!this._targets.has(event.targetInfo.targetId), 'Target should not exist before targetCreated');\n    this._targets.set(event.targetInfo.targetId, target);\n\n    if (await target._initializedPromise) {\n      this.emit(Events.Browser.TargetCreated, target);\n      context.emit(Events.BrowserContext.TargetCreated, target);\n    }\n  }\n\n  /**\n   * @param {{targetId: string}} event\n   */\n  async _targetDestroyed(event) {\n    const target = this._targets.get(event.targetId);\n    target._initializedCallback(false);\n    this._targets.delete(event.targetId);\n    target._closedCallback();\n    if (await target._initializedPromise) {\n      this.emit(Events.Browser.TargetDestroyed, target);\n      target.browserContext().emit(Events.BrowserContext.TargetDestroyed, target);\n    }\n  }\n\n  /**\n   * @param {!Protocol.Target.targetInfoChangedPayload} event\n   */\n  _targetInfoChanged(event) {\n    const target = this._targets.get(event.targetInfo.targetId);\n    assert(target, 'target should exist before targetInfoChanged');\n    const previousURL = target.url();\n    const wasInitialized = target._isInitialized;\n    target._targetInfoChanged(event.targetInfo);\n    if (wasInitialized && previousURL !== target.url()) {\n      this.emit(Events.Browser.TargetChanged, target);\n      target.browserContext().emit(Events.BrowserContext.TargetChanged, target);\n    }\n  }\n\n  /**\n   * @return {string}\n   */\n  wsEndpoint() {\n    return this._connection.url();\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  async newPage() {\n    return this._defaultContext.newPage();\n  }\n\n  /**\n   * @param {?string} contextId\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  async _createPageInContext(contextId) {\n    const {targetId} = await this._connection.send('Target.createTarget', {url: 'about:blank', browserContextId: contextId || undefined});\n    const target = await this._targets.get(targetId);\n    assert(await target._initializedPromise, 'Failed to create target for page');\n    const page = await target.page();\n    return page;\n  }\n\n  /**\n   * @return {!Array<!Target>}\n   */\n  targets() {\n    return Array.from(this._targets.values()).filter(target => target._isInitialized);\n  }\n\n  /**\n   * @return {!Target}\n   */\n  target() {\n    return this.targets().find(target => target.type() === 'browser');\n  }\n\n  /**\n   * @param {function(!Target):boolean} predicate\n   * @param {{timeout?: number}=} options\n   * @return {!Promise<!Target>}\n   */\n  async waitForTarget(predicate, options = {}) {\n    const {\n      timeout = 30000\n    } = options;\n    const existingTarget = this.targets().find(predicate);\n    if (existingTarget)\n      return existingTarget;\n    let resolve;\n    const targetPromise = new Promise(x => resolve = x);\n    this.on(Events.Browser.TargetCreated, check);\n    this.on(Events.Browser.TargetChanged, check);\n    try {\n      if (!timeout)\n        return await targetPromise;\n      return await helper.waitWithTimeout(targetPromise, 'target', timeout);\n    } finally {\n      this.removeListener(Events.Browser.TargetCreated, check);\n      this.removeListener(Events.Browser.TargetChanged, check);\n    }\n\n    /**\n     * @param {!Target} target\n     */\n    function check(target) {\n      if (predicate(target))\n        resolve(target);\n    }\n  }\n\n  /**\n   * @return {!Promise<!Array<!Puppeteer.Page>>}\n   */\n  async pages() {\n    const contextPages = await Promise.all(this.browserContexts().map(context => context.pages()));\n    // Flatten array.\n    return contextPages.reduce((acc, x) => acc.concat(x), []);\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async version() {\n    const version = await this._getVersion();\n    return version.product;\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async userAgent() {\n    const version = await this._getVersion();\n    return version.userAgent;\n  }\n\n  async close() {\n    await this._closeCallback.call(null);\n    this.disconnect();\n  }\n\n  disconnect() {\n    this._connection.dispose();\n  }\n\n  /**\n   * @return {!Promise<!Object>}\n   */\n  _getVersion() {\n    return this._connection.send('Browser.getVersion');\n  }\n}\n\nclass BrowserContext extends EventEmitter {\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Browser} browser\n   * @param {?string} contextId\n   */\n  constructor(connection, browser, contextId) {\n    super();\n    this._connection = connection;\n    this._browser = browser;\n    this._id = contextId;\n  }\n\n  /**\n   * @return {!Array<!Target>} target\n   */\n  targets() {\n    return this._browser.targets().filter(target => target.browserContext() === this);\n  }\n\n  /**\n   * @param {function(!Target):boolean} predicate\n   * @param {{timeout?: number}=} options\n   * @return {!Promise<!Target>}\n   */\n  waitForTarget(predicate, options) {\n    return this._browser.waitForTarget(target => target.browserContext() === this && predicate(target), options);\n  }\n\n  /**\n   * @return {!Promise<!Array<!Puppeteer.Page>>}\n   */\n  async pages() {\n    const pages = await Promise.all(\n        this.targets()\n            .filter(target => target.type() === 'page')\n            .map(target => target.page())\n    );\n    return pages.filter(page => !!page);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isIncognito() {\n    return !!this._id;\n  }\n\n  /**\n   * @param {string} origin\n   * @param {!Array<string>} permissions\n   */\n  async overridePermissions(origin, permissions) {\n    const webPermissionToProtocol = new Map([\n      ['geolocation', 'geolocation'],\n      ['midi', 'midi'],\n      ['notifications', 'notifications'],\n      ['push', 'push'],\n      ['camera', 'videoCapture'],\n      ['microphone', 'audioCapture'],\n      ['background-sync', 'backgroundSync'],\n      ['ambient-light-sensor', 'sensors'],\n      ['accelerometer', 'sensors'],\n      ['gyroscope', 'sensors'],\n      ['magnetometer', 'sensors'],\n      ['accessibility-events', 'accessibilityEvents'],\n      ['clipboard-read', 'clipboardRead'],\n      ['clipboard-write', 'clipboardWrite'],\n      ['payment-handler', 'paymentHandler'],\n      // chrome-specific permissions we have.\n      ['midi-sysex', 'midiSysex'],\n    ]);\n    permissions = permissions.map(permission => {\n      const protocolPermission = webPermissionToProtocol.get(permission);\n      if (!protocolPermission)\n        throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    await this._connection.send('Browser.grantPermissions', {origin, browserContextId: this._id || undefined, permissions});\n  }\n\n  async clearPermissionOverrides() {\n    await this._connection.send('Browser.resetPermissions', {browserContextId: this._id || undefined});\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  newPage() {\n    return this._browser._createPageInContext(this._id);\n  }\n\n  /**\n   * @return {!Browser}\n   */\n  browser() {\n    return this._browser;\n  }\n\n  async close() {\n    assert(this._id, 'Non-incognito profiles cannot be closed!');\n    await this._browser._disposeContext(this._id);\n  }\n}\n\nmodule.exports = {Browser, BrowserContext};\n"]},"metadata":{},"sourceType":"script"}