{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet asyncawait = true;\n\ntry {\n  new Function('async function test(){await 1}');\n} catch (error) {\n  asyncawait = false;\n}\n\nif (asyncawait) {\n  const {\n    helper\n  } = require('./lib/helper');\n\n  const api = require('./lib/api');\n\n  for (const className in api) {\n    // Puppeteer-web excludes certain classes from bundle, e.g. BrowserFetcher.\n    if (typeof api[className] === 'function') helper.installAsyncStackHooks(api[className]);\n  }\n} // If node does not support async await, use the compiled version.\n\n\nconst Puppeteer = asyncawait ? require('./lib/Puppeteer') : require('./node6/lib/Puppeteer');\n\nconst packageJson = require('./package.json');\n\nconst preferredRevision = packageJson.puppeteer.chromium_revision;\nconst isPuppeteerCore = packageJson.name === 'puppeteer-core';\nmodule.exports = new Puppeteer(__dirname, preferredRevision, isPuppeteerCore);","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/node_modules/puppeteer/index.js"],"names":["asyncawait","Function","error","helper","require","api","className","installAsyncStackHooks","Puppeteer","packageJson","preferredRevision","puppeteer","chromium_revision","isPuppeteerCore","name","module","exports","__dirname"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,UAAU,GAAG,IAAjB;;AACA,IAAI;AACF,MAAIC,QAAJ,CAAa,gCAAb;AACD,CAFD,CAEE,OAAOC,KAAP,EAAc;AACdF,EAAAA,UAAU,GAAG,KAAb;AACD;;AAED,IAAIA,UAAJ,EAAgB;AACd,QAAM;AAACG,IAAAA;AAAD,MAAWC,OAAO,CAAC,cAAD,CAAxB;;AACA,QAAMC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AACA,OAAK,MAAME,SAAX,IAAwBD,GAAxB,EAA6B;AAC3B;AACA,QAAI,OAAOA,GAAG,CAACC,SAAD,CAAV,KAA0B,UAA9B,EACEH,MAAM,CAACI,sBAAP,CAA8BF,GAAG,CAACC,SAAD,CAAjC;AACH;AACF,C,CAED;;;AACA,MAAME,SAAS,GAAGR,UAAU,GAAGI,OAAO,CAAC,iBAAD,CAAV,GAAgCA,OAAO,CAAC,uBAAD,CAAnE;;AACA,MAAMK,WAAW,GAAGL,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAMM,iBAAiB,GAAGD,WAAW,CAACE,SAAZ,CAAsBC,iBAAhD;AACA,MAAMC,eAAe,GAAGJ,WAAW,CAACK,IAAZ,KAAqB,gBAA7C;AAEAC,MAAM,CAACC,OAAP,GAAiB,IAAIR,SAAJ,CAAcS,SAAd,EAAyBP,iBAAzB,EAA4CG,eAA5C,CAAjB","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet asyncawait = true;\ntry {\n  new Function('async function test(){await 1}');\n} catch (error) {\n  asyncawait = false;\n}\n\nif (asyncawait) {\n  const {helper} = require('./lib/helper');\n  const api = require('./lib/api');\n  for (const className in api) {\n    // Puppeteer-web excludes certain classes from bundle, e.g. BrowserFetcher.\n    if (typeof api[className] === 'function')\n      helper.installAsyncStackHooks(api[className]);\n  }\n}\n\n// If node does not support async await, use the compiled version.\nconst Puppeteer = asyncawait ? require('./lib/Puppeteer') : require('./node6/lib/Puppeteer');\nconst packageJson = require('./package.json');\nconst preferredRevision = packageJson.puppeteer.chromium_revision;\nconst isPuppeteerCore = packageJson.name === 'puppeteer-core';\n\nmodule.exports = new Puppeteer(__dirname, preferredRevision, isPuppeteerCore);\n"]},"metadata":{},"sourceType":"script"}