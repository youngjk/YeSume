{"ast":null,"code":"'use strict';\n\nvar env = require('env-variable');\n/**\n * Checks if a given namespace is allowed by the environment variables.\n *\n * @param {String} name namespace that should be included.\n * @param {Array} variables\n * @returns {Boolean}\n * @api public\n */\n\n\nmodule.exports = function enabled(name, variables) {\n  var envy = env(),\n      variable,\n      i = 0;\n  variables = variables || ['diagnostics', 'debug'];\n\n  for (; i < variables.length; i++) {\n    if (variable = envy[variables[i]]) break;\n  }\n\n  if (!variable) return false;\n  variables = variable.split(/[\\s,]+/);\n  i = 0;\n\n  for (; i < variables.length; i++) {\n    variable = variables[i].replace('*', '.*?');\n\n    if ('-' === variable.charAt(0)) {\n      if (new RegExp('^' + variable.substr(1) + '$').test(name)) {\n        return false;\n      }\n\n      continue;\n    }\n\n    if (new RegExp('^' + variable + '$').test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/enabled/index.js"],"names":["env","require","module","exports","enabled","name","variables","envy","variable","i","length","split","replace","charAt","RegExp","substr","test"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,SAAvB,EAAkC;AACjD,MAAIC,IAAI,GAAGP,GAAG,EAAd;AAAA,MACIQ,QADJ;AAAA,MAEIC,CAAC,GAAG,CAFR;AAIAH,EAAAA,SAAS,GAAGA,SAAS,IAAI,CAAC,aAAD,EAAgB,OAAhB,CAAzB;;AAEA,SAAOG,CAAC,GAAGH,SAAS,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,QAAKD,QAAQ,GAAGD,IAAI,CAACD,SAAS,CAACG,CAAD,CAAV,CAApB,EAAqC;AACtC;;AAED,MAAI,CAACD,QAAL,EAAe,OAAO,KAAP;AAEfF,EAAAA,SAAS,GAAGE,QAAQ,CAACG,KAAT,CAAe,QAAf,CAAZ;AACAF,EAAAA,CAAC,GAAG,CAAJ;;AAEA,SAAOA,CAAC,GAAGH,SAAS,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChCD,IAAAA,QAAQ,GAAGF,SAAS,CAACG,CAAD,CAAT,CAAaG,OAAb,CAAqB,GAArB,EAA0B,KAA1B,CAAX;;AAEA,QAAI,QAAQJ,QAAQ,CAACK,MAAT,CAAgB,CAAhB,CAAZ,EAAgC;AAC9B,UAAK,IAAIC,MAAJ,CAAW,MAAKN,QAAQ,CAACO,MAAT,CAAgB,CAAhB,CAAL,GAAyB,GAApC,CAAD,CAA2CC,IAA3C,CAAgDX,IAAhD,CAAJ,EAA2D;AACzD,eAAO,KAAP;AACD;;AAED;AACD;;AAED,QAAK,IAAIS,MAAJ,CAAW,MAAKN,QAAL,GAAe,GAA1B,CAAD,CAAiCQ,IAAjC,CAAsCX,IAAtC,CAAJ,EAAiD;AAC/C,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD,CAjCD","sourcesContent":["'use strict';\n\nvar env = require('env-variable');\n\n/**\n * Checks if a given namespace is allowed by the environment variables.\n *\n * @param {String} name namespace that should be included.\n * @param {Array} variables\n * @returns {Boolean}\n * @api public\n */\nmodule.exports = function enabled(name, variables) {\n  var envy = env()\n    , variable\n    , i = 0;\n\n  variables = variables || ['diagnostics', 'debug'];\n\n  for (; i < variables.length; i++) {\n    if ((variable = envy[variables[i]])) break;\n  }\n\n  if (!variable) return false;\n\n  variables = variable.split(/[\\s,]+/);\n  i = 0;\n\n  for (; i < variables.length; i++) {\n    variable = variables[i].replace('*', '.*?');\n\n    if ('-' === variable.charAt(0)) {\n      if ((new RegExp('^'+ variable.substr(1) +'$')).test(name)) {\n        return false;\n      }\n\n      continue;\n    }\n\n    if ((new RegExp('^'+ variable +'$')).test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n"]},"metadata":{},"sourceType":"module"}