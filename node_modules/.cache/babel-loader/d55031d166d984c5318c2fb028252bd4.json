{"ast":null,"code":"'use strict';\n/**\n * Wrap callbacks to prevent double execution.\n *\n * @param {Function} fn Function that should only be called once.\n * @returns {Function} A wrapped callback which prevents execution.\n * @api public\n */\n\nmodule.exports = function one(fn) {\n  var called = 0,\n      value;\n  /**\n   * The function that prevents double execution.\n   *\n   * @api private\n   */\n\n  function onetime() {\n    if (called) return value;\n    called = 1;\n    value = fn.apply(this, arguments);\n    fn = null;\n    return value;\n  } //\n  // To make debugging more easy we want to use the name of the supplied\n  // function. So when you look at the functions that are assigned to event\n  // listeners you don't see a load of `onetime` functions but actually the\n  // names of the functions that this module will call.\n  //\n\n\n  onetime.displayName = fn.displayName || fn.name || onetime.displayName || onetime.name;\n  return onetime;\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/one-time/index.js"],"names":["module","exports","one","fn","called","value","onetime","apply","arguments","displayName","name"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAaC,EAAb,EAAiB;AAChC,MAAIC,MAAM,GAAG,CAAb;AAAA,MACIC,KADJ;AAGA;AACF;AACA;AACA;AACA;;AACE,WAASC,OAAT,GAAmB;AACjB,QAAIF,MAAJ,EAAY,OAAOC,KAAP;AAEZD,IAAAA,MAAM,GAAG,CAAT;AACAC,IAAAA,KAAK,GAAGF,EAAE,CAACI,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAR;AACAL,IAAAA,EAAE,GAAG,IAAL;AAEA,WAAOE,KAAP;AACD,GAjB+B,CAmBhC;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,OAAO,CAACG,WAAR,GAAsBN,EAAE,CAACM,WAAH,IAAkBN,EAAE,CAACO,IAArB,IAA6BJ,OAAO,CAACG,WAArC,IAAoDH,OAAO,CAACI,IAAlF;AACA,SAAOJ,OAAP;AACD,CA3BD","sourcesContent":["'use strict';\n\n/**\n * Wrap callbacks to prevent double execution.\n *\n * @param {Function} fn Function that should only be called once.\n * @returns {Function} A wrapped callback which prevents execution.\n * @api public\n */\nmodule.exports = function one(fn) {\n  var called = 0\n    , value;\n\n  /**\n   * The function that prevents double execution.\n   *\n   * @api private\n   */\n  function onetime() {\n    if (called) return value;\n\n    called = 1;\n    value = fn.apply(this, arguments);\n    fn = null;\n\n    return value;\n  }\n\n  //\n  // To make debugging more easy we want to use the name of the supplied\n  // function. So when you look at the functions that are assigned to event\n  // listeners you don't see a load of `onetime` functions but actually the\n  // names of the functions that this module will call.\n  //\n  onetime.displayName = fn.displayName || fn.name || onetime.displayName || onetime.name;\n  return onetime;\n};\n"]},"metadata":{},"sourceType":"module"}