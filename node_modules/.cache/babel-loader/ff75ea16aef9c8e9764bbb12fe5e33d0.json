{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Launcher = require('./Launcher');\n\nconst BrowserFetcher = require('./BrowserFetcher');\n\nmodule.exports = class {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._launcher = new Launcher(projectRoot, preferredRevision, isPuppeteerCore);\n  }\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Puppeteer.Browser>}\n   */\n\n\n  launch(options) {\n    return this._launcher.launch(options);\n  }\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint?: string, browserURL?: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Puppeteer.Browser>}\n   */\n\n\n  connect(options) {\n    return this._launcher.connect(options);\n  }\n  /**\n   * @return {string}\n   */\n\n\n  executablePath() {\n    return this._launcher.executablePath();\n  }\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n\n\n  defaultArgs(options) {\n    return this._launcher.defaultArgs(options);\n  }\n  /**\n   * @param {!BrowserFetcher.Options=} options\n   * @return {!BrowserFetcher}\n   */\n\n\n  createBrowserFetcher(options) {\n    return new BrowserFetcher(this._projectRoot, options);\n  }\n\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/puppeteer/lib/Puppeteer.js"],"names":["Launcher","require","BrowserFetcher","module","exports","constructor","projectRoot","preferredRevision","isPuppeteerCore","_projectRoot","_launcher","launch","options","connect","executablePath","defaultArgs","createBrowserFetcher"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA9B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,MAAM;AACrB;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,WAAD,EAAcC,iBAAd,EAAiCC,eAAjC,EAAkD;AAC3D,SAAKC,YAAL,GAAoBH,WAApB;AACA,SAAKI,SAAL,GAAiB,IAAIV,QAAJ,CAAaM,WAAb,EAA0BC,iBAA1B,EAA6CC,eAA7C,CAAjB;AACD;AAED;AACF;AACA;AACA;;;AACEG,EAAAA,MAAM,CAACC,OAAD,EAAU;AACd,WAAO,KAAKF,SAAL,CAAeC,MAAf,CAAsBC,OAAtB,CAAP;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,OAAO,CAACD,OAAD,EAAU;AACf,WAAO,KAAKF,SAAL,CAAeG,OAAf,CAAuBD,OAAvB,CAAP;AACD;AAED;AACF;AACA;;;AACEE,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKJ,SAAL,CAAeI,cAAf,EAAP;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,WAAW,CAACH,OAAD,EAAU;AACnB,WAAO,KAAKF,SAAL,CAAeK,WAAf,CAA2BH,OAA3B,CAAP;AACD;AAED;AACF;AACA;AACA;;;AACEI,EAAAA,oBAAoB,CAACJ,OAAD,EAAU;AAC5B,WAAO,IAAIV,cAAJ,CAAmB,KAAKO,YAAxB,EAAsCG,OAAtC,CAAP;AACD;;AAhDoB,CAAvB","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst Launcher = require('./Launcher');\nconst BrowserFetcher = require('./BrowserFetcher');\n\nmodule.exports = class {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._launcher = new Launcher(projectRoot, preferredRevision, isPuppeteerCore);\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Puppeteer.Browser>}\n   */\n  launch(options) {\n    return this._launcher.launch(options);\n  }\n\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint?: string, browserURL?: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Puppeteer.Browser>}\n   */\n  connect(options) {\n    return this._launcher.connect(options);\n  }\n\n  /**\n   * @return {string}\n   */\n  executablePath() {\n    return this._launcher.executablePath();\n  }\n\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n  defaultArgs(options) {\n    return this._launcher.defaultArgs(options);\n  }\n\n  /**\n   * @param {!BrowserFetcher.Options=} options\n   * @return {!BrowserFetcher}\n   */\n  createBrowserFetcher(options) {\n    return new BrowserFetcher(this._projectRoot, options);\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}