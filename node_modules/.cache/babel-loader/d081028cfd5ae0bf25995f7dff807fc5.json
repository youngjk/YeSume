{"ast":null,"code":"const agents = ['Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36' // \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\",\n// \"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\",\n// \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:34.0) Gecko/20100101 Firefox/34.0\",\n// \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\",\n// \"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\",\n// \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\",\n// \"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\",\n// \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\"\n];\n\nmodule.exports = async ({\n  browser,\n  cookies,\n  url,\n  puppeteerAuthenticate\n}) => {\n  const page = await browser.newPage();\n\n  if (cookies) {\n    await page.setCookie(...cookies);\n  }\n\n  await page.setUserAgent(agents[Math.floor(Math.random() * agents.length)]);\n  await page.setExtraHTTPHeaders({\n    'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8'\n  });\n  await page.setViewport({\n    width: 1920,\n    height: 1080\n  });\n\n  if (puppeteerAuthenticate) {\n    await page.authenticate(puppeteerAuthenticate);\n  }\n\n  await page.goto(url);\n  return page;\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/scrapedin/src/openPage.js"],"names":["agents","module","exports","browser","cookies","url","puppeteerAuthenticate","page","newPage","setCookie","setUserAgent","Math","floor","random","length","setExtraHTTPHeaders","setViewport","width","height","authenticate","goto"],"mappings":"AAAA,MAAMA,MAAM,GAAG,CACb,0GADa,CAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATa,CAAf;;AAYAC,MAAM,CAACC,OAAP,GAAiB,OAAO;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,GAApB;AAAyBC,EAAAA;AAAzB,CAAP,KAA4D;AAC3E,QAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACK,OAAR,EAAnB;;AAEA,MAAIJ,OAAJ,EAAa;AACX,UAAMG,IAAI,CAACE,SAAL,CAAe,GAAGL,OAAlB,CAAN;AACD;;AACD,QAAMG,IAAI,CAACG,YAAL,CAAkBV,MAAM,CAACW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,MAAM,CAACc,MAAlC,CAAD,CAAxB,CAAN;AACA,QAAMP,IAAI,CAACQ,mBAAL,CAAyB;AAAE,uBAAmB;AAArB,GAAzB,CAAN;AACA,QAAMR,IAAI,CAACS,WAAL,CAAiB;AACrBC,IAAAA,KAAK,EAAE,IADc;AAErBC,IAAAA,MAAM,EAAE;AAFa,GAAjB,CAAN;;AAKA,MAAIZ,qBAAJ,EAA2B;AACzB,UAAMC,IAAI,CAACY,YAAL,CAAkBb,qBAAlB,CAAN;AACD;;AAED,QAAMC,IAAI,CAACa,IAAL,CAAUf,GAAV,CAAN;AAEA,SAAOE,IAAP;AACD,CApBD","sourcesContent":["const agents = [\n  'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36'\n  // \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\",\n  // \"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\",\n  // \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:34.0) Gecko/20100101 Firefox/34.0\",\n  // \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\",\n  // \"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\",\n  // \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\",\n  // \"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\",\n  // \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36\"\n]\n\nmodule.exports = async ({ browser, cookies, url, puppeteerAuthenticate }) => {\n  const page = await browser.newPage()\n\n  if (cookies) {\n    await page.setCookie(...cookies)\n  }\n  await page.setUserAgent(agents[Math.floor(Math.random() * agents.length)])\n  await page.setExtraHTTPHeaders({ 'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8' })\n  await page.setViewport({\n    width: 1920,\n    height: 1080\n  })\n\n  if (puppeteerAuthenticate) {\n    await page.authenticate(puppeteerAuthenticate)\n  }\n\n  await page.goto(url)\n\n  return page\n}\n"]},"metadata":{},"sourceType":"module"}