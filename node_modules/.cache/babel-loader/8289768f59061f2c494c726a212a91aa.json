{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst EventEmitter = require('events');\n\nconst {\n  helper,\n  assert\n} = require('./helper');\n\nconst {\n  Events\n} = require('./Events');\n\nconst {\n  ExecutionContext,\n  EVALUATION_SCRIPT_URL\n} = require('./ExecutionContext');\n\nconst {\n  LifecycleWatcher\n} = require('./LifecycleWatcher');\n\nconst {\n  DOMWorld\n} = require('./DOMWorld');\n\nconst UTILITY_WORLD_NAME = '__puppeteer_utility_world__';\n\nclass FrameManager extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Page.FrameTree} frameTree\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.NetworkManager} networkManager\n   * @param {!Puppeteer.TimeoutSettings} timeoutSettings\n   */\n  constructor(client, frameTree, page, networkManager, timeoutSettings) {\n    super();\n    this._client = client;\n    this._page = page;\n    this._networkManager = networkManager;\n    this._timeoutSettings = timeoutSettings;\n    /** @type {!Map<string, !Frame>} */\n\n    this._frames = new Map();\n    /** @type {!Map<number, !ExecutionContext>} */\n\n    this._contextIdToContext = new Map();\n    /** @type {!Set<string>} */\n\n    this._isolatedWorlds = new Set();\n\n    this._client.on('Page.frameAttached', event => this._onFrameAttached(event.frameId, event.parentFrameId));\n\n    this._client.on('Page.frameNavigated', event => this._onFrameNavigated(event.frame));\n\n    this._client.on('Page.navigatedWithinDocument', event => this._onFrameNavigatedWithinDocument(event.frameId, event.url));\n\n    this._client.on('Page.frameDetached', event => this._onFrameDetached(event.frameId));\n\n    this._client.on('Page.frameStoppedLoading', event => this._onFrameStoppedLoading(event.frameId));\n\n    this._client.on('Runtime.executionContextCreated', event => this._onExecutionContextCreated(event.context));\n\n    this._client.on('Runtime.executionContextDestroyed', event => this._onExecutionContextDestroyed(event.executionContextId));\n\n    this._client.on('Runtime.executionContextsCleared', event => this._onExecutionContextsCleared());\n\n    this._client.on('Page.lifecycleEvent', event => this._onLifecycleEvent(event));\n\n    this._handleFrameTree(frameTree);\n  }\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n\n\n  async navigateFrame(frame, url, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      referer = this._networkManager.extraHTTPHeaders()['referer'],\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout()\n    } = options;\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    let ensureNewDocumentNavigation = false;\n    let error = await Promise.race([navigate(this._client, url, referer, frame._id), watcher.timeoutOrTerminationPromise()]);\n\n    if (!error) {\n      error = await Promise.race([watcher.timeoutOrTerminationPromise(), ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise()]);\n    }\n\n    watcher.dispose();\n    if (error) throw error;\n    return watcher.navigationResponse();\n    /**\n     * @param {!Puppeteer.CDPSession} client\n     * @param {string} url\n     * @param {string} referrer\n     * @param {string} frameId\n     * @return {!Promise<?Error>}\n     */\n\n    async function navigate(client, url, referrer, frameId) {\n      try {\n        const response = await client.send('Page.navigate', {\n          url,\n          referrer,\n          frameId\n        });\n        ensureNewDocumentNavigation = !!response.loaderId;\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        return error;\n      }\n    }\n  }\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n\n\n  async waitForFrameNavigation(frame, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout()\n    } = options;\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    const error = await Promise.race([watcher.timeoutOrTerminationPromise(), watcher.sameDocumentNavigationPromise(), watcher.newDocumentNavigationPromise()]);\n    watcher.dispose();\n    if (error) throw error;\n    return watcher.navigationResponse();\n  }\n  /**\n   * @param {!Protocol.Page.lifecycleEventPayload} event\n   */\n\n\n  _onLifecycleEvent(event) {\n    const frame = this._frames.get(event.frameId);\n\n    if (!frame) return;\n\n    frame._onLifecycleEvent(event.loaderId, event.name);\n\n    this.emit(Events.FrameManager.LifecycleEvent, frame);\n  }\n  /**\n   * @param {string} frameId\n   */\n\n\n  _onFrameStoppedLoading(frameId) {\n    const frame = this._frames.get(frameId);\n\n    if (!frame) return;\n\n    frame._onLoadingStopped();\n\n    this.emit(Events.FrameManager.LifecycleEvent, frame);\n  }\n  /**\n   * @param {!Protocol.Page.FrameTree} frameTree\n   */\n\n\n  _handleFrameTree(frameTree) {\n    if (frameTree.frame.parentId) this._onFrameAttached(frameTree.frame.id, frameTree.frame.parentId);\n\n    this._onFrameNavigated(frameTree.frame);\n\n    if (!frameTree.childFrames) return;\n\n    for (const child of frameTree.childFrames) this._handleFrameTree(child);\n  }\n  /**\n   * @return {!Puppeteer.Page}\n   */\n\n\n  page() {\n    return this._page;\n  }\n  /**\n   * @return {!Frame}\n   */\n\n\n  mainFrame() {\n    return this._mainFrame;\n  }\n  /**\n   * @return {!Array<!Frame>}\n   */\n\n\n  frames() {\n    return Array.from(this._frames.values());\n  }\n  /**\n   * @param {!string} frameId\n   * @return {?Frame}\n   */\n\n\n  frame(frameId) {\n    return this._frames.get(frameId) || null;\n  }\n  /**\n   * @param {string} frameId\n   * @param {?string} parentFrameId\n   */\n\n\n  _onFrameAttached(frameId, parentFrameId) {\n    if (this._frames.has(frameId)) return;\n    assert(parentFrameId);\n\n    const parentFrame = this._frames.get(parentFrameId);\n\n    const frame = new Frame(this, this._client, parentFrame, frameId);\n\n    this._frames.set(frame._id, frame);\n\n    this.emit(Events.FrameManager.FrameAttached, frame);\n  }\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n\n\n  _onFrameNavigated(framePayload) {\n    const isMainFrame = !framePayload.parentId;\n    let frame = isMainFrame ? this._mainFrame : this._frames.get(framePayload.id);\n    assert(isMainFrame || frame, 'We either navigate top level or have old version of the navigated frame'); // Detach all child frames first.\n\n    if (frame) {\n      for (const child of frame.childFrames()) this._removeFramesRecursively(child);\n    } // Update or create main frame.\n\n\n    if (isMainFrame) {\n      if (frame) {\n        // Update frame id to retain frame identity on cross-process navigation.\n        this._frames.delete(frame._id);\n\n        frame._id = framePayload.id;\n      } else {\n        // Initial main frame navigation.\n        frame = new Frame(this, this._client, null, framePayload.id);\n      }\n\n      this._frames.set(framePayload.id, frame);\n\n      this._mainFrame = frame;\n    } // Update frame payload.\n\n\n    frame._navigated(framePayload);\n\n    this.emit(Events.FrameManager.FrameNavigated, frame);\n  }\n\n  async ensureSecondaryDOMWorld() {\n    await this._ensureIsolatedWorld(UTILITY_WORLD_NAME);\n  }\n  /**\n   * @param {string} name\n   */\n\n\n  async _ensureIsolatedWorld(name) {\n    if (this._isolatedWorlds.has(name)) return;\n\n    this._isolatedWorlds.add(name);\n\n    await this._client.send('Page.addScriptToEvaluateOnNewDocument', {\n      source: `//# sourceURL=${EVALUATION_SCRIPT_URL}`,\n      worldName: name\n    }), await Promise.all(this.frames().map(frame => this._client.send('Page.createIsolatedWorld', {\n      frameId: frame._id,\n      grantUniveralAccess: true,\n      worldName: name\n    })));\n  }\n  /**\n   * @param {string} frameId\n   * @param {string} url\n   */\n\n\n  _onFrameNavigatedWithinDocument(frameId, url) {\n    const frame = this._frames.get(frameId);\n\n    if (!frame) return;\n\n    frame._navigatedWithinDocument(url);\n\n    this.emit(Events.FrameManager.FrameNavigatedWithinDocument, frame);\n    this.emit(Events.FrameManager.FrameNavigated, frame);\n  }\n  /**\n   * @param {string} frameId\n   */\n\n\n  _onFrameDetached(frameId) {\n    const frame = this._frames.get(frameId);\n\n    if (frame) this._removeFramesRecursively(frame);\n  }\n\n  _onExecutionContextCreated(contextPayload) {\n    const frameId = contextPayload.auxData ? contextPayload.auxData.frameId : null;\n    const frame = this._frames.get(frameId) || null;\n    let world = null;\n\n    if (frame) {\n      if (contextPayload.auxData && !!contextPayload.auxData['isDefault']) world = frame._mainWorld;else if (contextPayload.name === UTILITY_WORLD_NAME) world = frame._secondaryWorld;\n    }\n\n    if (contextPayload.auxData && contextPayload.auxData['type'] === 'isolated') this._isolatedWorlds.add(contextPayload.name);\n    /** @type {!ExecutionContext} */\n\n    const context = new ExecutionContext(this._client, contextPayload, world);\n    if (world) world._setContext(context);\n\n    this._contextIdToContext.set(contextPayload.id, context);\n  }\n  /**\n   * @param {number} executionContextId\n   */\n\n\n  _onExecutionContextDestroyed(executionContextId) {\n    const context = this._contextIdToContext.get(executionContextId);\n\n    if (!context) return;\n\n    this._contextIdToContext.delete(executionContextId);\n\n    if (context._world) context._world._setContext(null);\n  }\n\n  _onExecutionContextsCleared() {\n    for (const context of this._contextIdToContext.values()) {\n      if (context._world) context._world._setContext(null);\n    }\n\n    this._contextIdToContext.clear();\n  }\n  /**\n   * @param {number} contextId\n   * @return {!ExecutionContext}\n   */\n\n\n  executionContextById(contextId) {\n    const context = this._contextIdToContext.get(contextId);\n\n    assert(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n  /**\n   * @param {!Frame} frame\n   */\n\n\n  _removeFramesRecursively(frame) {\n    for (const child of frame.childFrames()) this._removeFramesRecursively(child);\n\n    frame._detach();\n\n    this._frames.delete(frame._id);\n\n    this.emit(Events.FrameManager.FrameDetached, frame);\n  }\n\n}\n/**\n * @unrestricted\n */\n\n\nclass Frame {\n  /**\n   * @param {!FrameManager} frameManager\n   * @param {!Puppeteer.CDPSession} client\n   * @param {?Frame} parentFrame\n   * @param {string} frameId\n   */\n  constructor(frameManager, client, parentFrame, frameId) {\n    this._frameManager = frameManager;\n    this._client = client;\n    this._parentFrame = parentFrame;\n    this._url = '';\n    this._id = frameId;\n    this._detached = false;\n    this._loaderId = '';\n    /** @type {!Set<string>} */\n\n    this._lifecycleEvents = new Set();\n    this._mainWorld = new DOMWorld(frameManager, this, frameManager._timeoutSettings);\n    this._secondaryWorld = new DOMWorld(frameManager, this, frameManager._timeoutSettings);\n    /** @type {!Set<!Frame>} */\n\n    this._childFrames = new Set();\n    if (this._parentFrame) this._parentFrame._childFrames.add(this);\n  }\n  /**\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n\n\n  async goto(url, options) {\n    return await this._frameManager.navigateFrame(this, url, options);\n  }\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n\n\n  async waitForNavigation(options) {\n    return await this._frameManager.waitForFrameNavigation(this, options);\n  }\n  /**\n   * @return {!Promise<!ExecutionContext>}\n   */\n\n\n  executionContext() {\n    return this._mainWorld.executionContext();\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n\n\n  async evaluateHandle(pageFunction, ...args) {\n    return this._mainWorld.evaluateHandle(pageFunction, ...args);\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n\n\n  async evaluate(pageFunction, ...args) {\n    return this._mainWorld.evaluate(pageFunction, ...args);\n  }\n  /**\n   * @param {string} selector\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n\n\n  async $(selector) {\n    return this._mainWorld.$(selector);\n  }\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n\n\n  async $x(expression) {\n    return this._mainWorld.$x(expression);\n  }\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async $eval(selector, pageFunction, ...args) {\n    return this._mainWorld.$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async $$eval(selector, pageFunction, ...args) {\n    return this._mainWorld.$$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n\n\n  async $$(selector) {\n    return this._mainWorld.$$(selector);\n  }\n  /**\n   * @return {!Promise<String>}\n   */\n\n\n  async content() {\n    return this._secondaryWorld.content();\n  }\n  /**\n   * @param {string} html\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   */\n\n\n  async setContent(html, options = {}) {\n    return this._secondaryWorld.setContent(html, options);\n  }\n  /**\n   * @return {string}\n   */\n\n\n  name() {\n    return this._name || '';\n  }\n  /**\n   * @return {string}\n   */\n\n\n  url() {\n    return this._url;\n  }\n  /**\n   * @return {?Frame}\n   */\n\n\n  parentFrame() {\n    return this._parentFrame;\n  }\n  /**\n   * @return {!Array.<!Frame>}\n   */\n\n\n  childFrames() {\n    return Array.from(this._childFrames);\n  }\n  /**\n   * @return {boolean}\n   */\n\n\n  isDetached() {\n    return this._detached;\n  }\n  /**\n   * @param {!{url?: string, path?: string, content?: string, type?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n\n\n  async addScriptTag(options) {\n    return this._mainWorld.addScriptTag(options);\n  }\n  /**\n   * @param {!{url?: string, path?: string, content?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n\n\n  async addStyleTag(options) {\n    return this._mainWorld.addStyleTag(options);\n  }\n  /**\n   * @param {string} selector\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n\n\n  async click(selector, options) {\n    return this._secondaryWorld.click(selector, options);\n  }\n  /**\n   * @param {string} selector\n   */\n\n\n  async focus(selector) {\n    return this._secondaryWorld.focus(selector);\n  }\n  /**\n   * @param {string} selector\n   */\n\n\n  async hover(selector) {\n    return this._secondaryWorld.hover(selector);\n  }\n  /**\n  * @param {string} selector\n  * @param {!Array<string>} values\n  * @return {!Promise<!Array<string>>}\n  */\n\n\n  select(selector, ...values) {\n    return this._secondaryWorld.select(selector, ...values);\n  }\n  /**\n   * @param {string} selector\n   */\n\n\n  async tap(selector) {\n    return this._secondaryWorld.tap(selector);\n  }\n  /**\n   * @param {string} selector\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n\n\n  async type(selector, text, options) {\n    return this._mainWorld.type(selector, text, options);\n  }\n  /**\n   * @param {(string|number|Function)} selectorOrFunctionOrTimeout\n   * @param {!Object=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<?Puppeteer.JSHandle>}\n   */\n\n\n  waitFor(selectorOrFunctionOrTimeout, options = {}, ...args) {\n    const xPathPattern = '//';\n\n    if (helper.isString(selectorOrFunctionOrTimeout)) {\n      const string =\n      /** @type {string} */\n      selectorOrFunctionOrTimeout;\n      if (string.startsWith(xPathPattern)) return this.waitForXPath(string, options);\n      return this.waitForSelector(string, options);\n    }\n\n    if (helper.isNumber(selectorOrFunctionOrTimeout)) return new Promise(fulfill => setTimeout(fulfill,\n    /** @type {number} */\n    selectorOrFunctionOrTimeout));\n    if (typeof selectorOrFunctionOrTimeout === 'function') return this.waitForFunction(selectorOrFunctionOrTimeout, options, ...args);\n    return Promise.reject(new Error('Unsupported target type: ' + typeof selectorOrFunctionOrTimeout));\n  }\n  /**\n   * @param {string} selector\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n\n\n  async waitForSelector(selector, options) {\n    const handle = await this._secondaryWorld.waitForSelector(selector, options);\n    if (!handle) return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n  /**\n   * @param {string} xpath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n\n\n  async waitForXPath(xpath, options) {\n    const handle = await this._secondaryWorld.waitForXPath(xpath, options);\n    if (!handle) return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!{polling?: string|number, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n\n\n  waitForFunction(pageFunction, options = {}, ...args) {\n    return this._mainWorld.waitForFunction(pageFunction, options, ...args);\n  }\n  /**\n   * @return {!Promise<string>}\n   */\n\n\n  async title() {\n    return this._secondaryWorld.title();\n  }\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n\n\n  _navigated(framePayload) {\n    this._name = framePayload.name; // TODO(lushnikov): remove this once requestInterception has loaderId exposed.\n\n    this._navigationURL = framePayload.url;\n    this._url = framePayload.url;\n  }\n  /**\n   * @param {string} url\n   */\n\n\n  _navigatedWithinDocument(url) {\n    this._url = url;\n  }\n  /**\n   * @param {string} loaderId\n   * @param {string} name\n   */\n\n\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n\n      this._lifecycleEvents.clear();\n    }\n\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n\n    this._lifecycleEvents.add('load');\n  }\n\n  _detach() {\n    this._detached = true;\n\n    this._mainWorld._detach();\n\n    this._secondaryWorld._detach();\n\n    if (this._parentFrame) this._parentFrame._childFrames.delete(this);\n    this._parentFrame = null;\n  }\n\n}\n\nfunction assertNoLegacyNavigationOptions(options) {\n  assert(options['networkIdleTimeout'] === undefined, 'ERROR: networkIdleTimeout option is no longer supported.');\n  assert(options['networkIdleInflight'] === undefined, 'ERROR: networkIdleInflight option is no longer supported.');\n  assert(options.waitUntil !== 'networkidle', 'ERROR: \"networkidle\" option is no longer supported. Use \"networkidle2\" instead');\n}\n\nmodule.exports = {\n  FrameManager,\n  Frame\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/puppeteer/lib/FrameManager.js"],"names":["EventEmitter","require","helper","assert","Events","ExecutionContext","EVALUATION_SCRIPT_URL","LifecycleWatcher","DOMWorld","UTILITY_WORLD_NAME","FrameManager","constructor","client","frameTree","page","networkManager","timeoutSettings","_client","_page","_networkManager","_timeoutSettings","_frames","Map","_contextIdToContext","_isolatedWorlds","Set","on","event","_onFrameAttached","frameId","parentFrameId","_onFrameNavigated","frame","_onFrameNavigatedWithinDocument","url","_onFrameDetached","_onFrameStoppedLoading","_onExecutionContextCreated","context","_onExecutionContextDestroyed","executionContextId","_onExecutionContextsCleared","_onLifecycleEvent","_handleFrameTree","navigateFrame","options","assertNoLegacyNavigationOptions","referer","extraHTTPHeaders","waitUntil","timeout","navigationTimeout","watcher","ensureNewDocumentNavigation","error","Promise","race","navigate","_id","timeoutOrTerminationPromise","newDocumentNavigationPromise","sameDocumentNavigationPromise","dispose","navigationResponse","referrer","response","send","loaderId","errorText","Error","waitForFrameNavigation","get","name","emit","LifecycleEvent","_onLoadingStopped","parentId","id","childFrames","child","mainFrame","_mainFrame","frames","Array","from","values","has","parentFrame","Frame","set","FrameAttached","framePayload","isMainFrame","_removeFramesRecursively","delete","_navigated","FrameNavigated","ensureSecondaryDOMWorld","_ensureIsolatedWorld","add","source","worldName","all","map","grantUniveralAccess","_navigatedWithinDocument","FrameNavigatedWithinDocument","contextPayload","auxData","world","_mainWorld","_secondaryWorld","_setContext","_world","clear","executionContextById","contextId","_detach","FrameDetached","frameManager","_frameManager","_parentFrame","_url","_detached","_loaderId","_lifecycleEvents","_childFrames","goto","waitForNavigation","executionContext","evaluateHandle","pageFunction","args","evaluate","$","selector","$x","expression","$eval","$$eval","$$","content","setContent","html","_name","isDetached","addScriptTag","addStyleTag","click","focus","hover","select","tap","type","text","waitFor","selectorOrFunctionOrTimeout","xPathPattern","isString","string","startsWith","waitForXPath","waitForSelector","isNumber","fulfill","setTimeout","waitForFunction","reject","handle","mainExecutionContext","result","_adoptElementHandle","xpath","title","_navigationURL","undefined","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst EventEmitter = require('events');\nconst {helper, assert} = require('./helper');\nconst {Events} = require('./Events');\nconst {ExecutionContext, EVALUATION_SCRIPT_URL} = require('./ExecutionContext');\nconst {LifecycleWatcher} = require('./LifecycleWatcher');\nconst {DOMWorld} = require('./DOMWorld');\n\nconst UTILITY_WORLD_NAME = '__puppeteer_utility_world__';\n\nclass FrameManager extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Page.FrameTree} frameTree\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.NetworkManager} networkManager\n   * @param {!Puppeteer.TimeoutSettings} timeoutSettings\n   */\n  constructor(client, frameTree, page, networkManager, timeoutSettings) {\n    super();\n    this._client = client;\n    this._page = page;\n    this._networkManager = networkManager;\n    this._timeoutSettings = timeoutSettings;\n    /** @type {!Map<string, !Frame>} */\n    this._frames = new Map();\n    /** @type {!Map<number, !ExecutionContext>} */\n    this._contextIdToContext = new Map();\n    /** @type {!Set<string>} */\n    this._isolatedWorlds = new Set();\n\n    this._client.on('Page.frameAttached', event => this._onFrameAttached(event.frameId, event.parentFrameId));\n    this._client.on('Page.frameNavigated', event => this._onFrameNavigated(event.frame));\n    this._client.on('Page.navigatedWithinDocument', event => this._onFrameNavigatedWithinDocument(event.frameId, event.url));\n    this._client.on('Page.frameDetached', event => this._onFrameDetached(event.frameId));\n    this._client.on('Page.frameStoppedLoading', event => this._onFrameStoppedLoading(event.frameId));\n    this._client.on('Runtime.executionContextCreated', event => this._onExecutionContextCreated(event.context));\n    this._client.on('Runtime.executionContextDestroyed', event => this._onExecutionContextDestroyed(event.executionContextId));\n    this._client.on('Runtime.executionContextsCleared', event => this._onExecutionContextsCleared());\n    this._client.on('Page.lifecycleEvent', event => this._onLifecycleEvent(event));\n    this._handleFrameTree(frameTree);\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async navigateFrame(frame, url, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      referer = this._networkManager.extraHTTPHeaders()['referer'],\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout(),\n    } = options;\n\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    let ensureNewDocumentNavigation = false;\n    let error = await Promise.race([\n      navigate(this._client, url, referer, frame._id),\n      watcher.timeoutOrTerminationPromise(),\n    ]);\n    if (!error) {\n      error = await Promise.race([\n        watcher.timeoutOrTerminationPromise(),\n        ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise(),\n      ]);\n    }\n    watcher.dispose();\n    if (error)\n      throw error;\n    return watcher.navigationResponse();\n\n    /**\n     * @param {!Puppeteer.CDPSession} client\n     * @param {string} url\n     * @param {string} referrer\n     * @param {string} frameId\n     * @return {!Promise<?Error>}\n     */\n    async function navigate(client, url, referrer, frameId) {\n      try {\n        const response = await client.send('Page.navigate', {url, referrer, frameId});\n        ensureNewDocumentNavigation = !!response.loaderId;\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        return error;\n      }\n    }\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async waitForFrameNavigation(frame, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout(),\n    } = options;\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    const error = await Promise.race([\n      watcher.timeoutOrTerminationPromise(),\n      watcher.sameDocumentNavigationPromise(),\n      watcher.newDocumentNavigationPromise()\n    ]);\n    watcher.dispose();\n    if (error)\n      throw error;\n    return watcher.navigationResponse();\n  }\n\n  /**\n   * @param {!Protocol.Page.lifecycleEventPayload} event\n   */\n  _onLifecycleEvent(event) {\n    const frame = this._frames.get(event.frameId);\n    if (!frame)\n      return;\n    frame._onLifecycleEvent(event.loaderId, event.name);\n    this.emit(Events.FrameManager.LifecycleEvent, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   */\n  _onFrameStoppedLoading(frameId) {\n    const frame = this._frames.get(frameId);\n    if (!frame)\n      return;\n    frame._onLoadingStopped();\n    this.emit(Events.FrameManager.LifecycleEvent, frame);\n  }\n\n  /**\n   * @param {!Protocol.Page.FrameTree} frameTree\n   */\n  _handleFrameTree(frameTree) {\n    if (frameTree.frame.parentId)\n      this._onFrameAttached(frameTree.frame.id, frameTree.frame.parentId);\n    this._onFrameNavigated(frameTree.frame);\n    if (!frameTree.childFrames)\n      return;\n\n    for (const child of frameTree.childFrames)\n      this._handleFrameTree(child);\n  }\n\n  /**\n   * @return {!Puppeteer.Page}\n   */\n  page() {\n    return this._page;\n  }\n\n  /**\n   * @return {!Frame}\n   */\n  mainFrame() {\n    return this._mainFrame;\n  }\n\n  /**\n   * @return {!Array<!Frame>}\n   */\n  frames() {\n    return Array.from(this._frames.values());\n  }\n\n  /**\n   * @param {!string} frameId\n   * @return {?Frame}\n   */\n  frame(frameId) {\n    return this._frames.get(frameId) || null;\n  }\n\n  /**\n   * @param {string} frameId\n   * @param {?string} parentFrameId\n   */\n  _onFrameAttached(frameId, parentFrameId) {\n    if (this._frames.has(frameId))\n      return;\n    assert(parentFrameId);\n    const parentFrame = this._frames.get(parentFrameId);\n    const frame = new Frame(this, this._client, parentFrame, frameId);\n    this._frames.set(frame._id, frame);\n    this.emit(Events.FrameManager.FrameAttached, frame);\n  }\n\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n  _onFrameNavigated(framePayload) {\n    const isMainFrame = !framePayload.parentId;\n    let frame = isMainFrame ? this._mainFrame : this._frames.get(framePayload.id);\n    assert(isMainFrame || frame, 'We either navigate top level or have old version of the navigated frame');\n\n    // Detach all child frames first.\n    if (frame) {\n      for (const child of frame.childFrames())\n        this._removeFramesRecursively(child);\n    }\n\n    // Update or create main frame.\n    if (isMainFrame) {\n      if (frame) {\n        // Update frame id to retain frame identity on cross-process navigation.\n        this._frames.delete(frame._id);\n        frame._id = framePayload.id;\n      } else {\n        // Initial main frame navigation.\n        frame = new Frame(this, this._client, null, framePayload.id);\n      }\n      this._frames.set(framePayload.id, frame);\n      this._mainFrame = frame;\n    }\n\n    // Update frame payload.\n    frame._navigated(framePayload);\n\n    this.emit(Events.FrameManager.FrameNavigated, frame);\n  }\n\n  async ensureSecondaryDOMWorld() {\n    await this._ensureIsolatedWorld(UTILITY_WORLD_NAME);\n  }\n\n  /**\n   * @param {string} name\n   */\n  async _ensureIsolatedWorld(name) {\n    if (this._isolatedWorlds.has(name))\n      return;\n    this._isolatedWorlds.add(name);\n    await this._client.send('Page.addScriptToEvaluateOnNewDocument', {\n      source: `//# sourceURL=${EVALUATION_SCRIPT_URL}`,\n      worldName: name,\n    }),\n    await Promise.all(this.frames().map(frame => this._client.send('Page.createIsolatedWorld', {\n      frameId: frame._id,\n      grantUniveralAccess: true,\n      worldName: name,\n    })));\n  }\n\n  /**\n   * @param {string} frameId\n   * @param {string} url\n   */\n  _onFrameNavigatedWithinDocument(frameId, url) {\n    const frame = this._frames.get(frameId);\n    if (!frame)\n      return;\n    frame._navigatedWithinDocument(url);\n    this.emit(Events.FrameManager.FrameNavigatedWithinDocument, frame);\n    this.emit(Events.FrameManager.FrameNavigated, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   */\n  _onFrameDetached(frameId) {\n    const frame = this._frames.get(frameId);\n    if (frame)\n      this._removeFramesRecursively(frame);\n  }\n\n  _onExecutionContextCreated(contextPayload) {\n    const frameId = contextPayload.auxData ? contextPayload.auxData.frameId : null;\n    const frame = this._frames.get(frameId) || null;\n    let world = null;\n    if (frame) {\n      if (contextPayload.auxData && !!contextPayload.auxData['isDefault'])\n        world = frame._mainWorld;\n      else if (contextPayload.name === UTILITY_WORLD_NAME)\n        world = frame._secondaryWorld;\n    }\n    if (contextPayload.auxData && contextPayload.auxData['type'] === 'isolated')\n      this._isolatedWorlds.add(contextPayload.name);\n    /** @type {!ExecutionContext} */\n    const context = new ExecutionContext(this._client, contextPayload, world);\n    if (world)\n      world._setContext(context);\n    this._contextIdToContext.set(contextPayload.id, context);\n  }\n\n  /**\n   * @param {number} executionContextId\n   */\n  _onExecutionContextDestroyed(executionContextId) {\n    const context = this._contextIdToContext.get(executionContextId);\n    if (!context)\n      return;\n    this._contextIdToContext.delete(executionContextId);\n    if (context._world)\n      context._world._setContext(null);\n  }\n\n  _onExecutionContextsCleared() {\n    for (const context of this._contextIdToContext.values()) {\n      if (context._world)\n        context._world._setContext(null);\n    }\n    this._contextIdToContext.clear();\n  }\n\n  /**\n   * @param {number} contextId\n   * @return {!ExecutionContext}\n   */\n  executionContextById(contextId) {\n    const context = this._contextIdToContext.get(contextId);\n    assert(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n\n  /**\n   * @param {!Frame} frame\n   */\n  _removeFramesRecursively(frame) {\n    for (const child of frame.childFrames())\n      this._removeFramesRecursively(child);\n    frame._detach();\n    this._frames.delete(frame._id);\n    this.emit(Events.FrameManager.FrameDetached, frame);\n  }\n}\n\n/**\n * @unrestricted\n */\nclass Frame {\n  /**\n   * @param {!FrameManager} frameManager\n   * @param {!Puppeteer.CDPSession} client\n   * @param {?Frame} parentFrame\n   * @param {string} frameId\n   */\n  constructor(frameManager, client, parentFrame, frameId) {\n    this._frameManager = frameManager;\n    this._client = client;\n    this._parentFrame = parentFrame;\n    this._url = '';\n    this._id = frameId;\n    this._detached = false;\n\n    this._loaderId = '';\n    /** @type {!Set<string>} */\n    this._lifecycleEvents = new Set();\n    this._mainWorld = new DOMWorld(frameManager, this, frameManager._timeoutSettings);\n    this._secondaryWorld = new DOMWorld(frameManager, this, frameManager._timeoutSettings);\n\n    /** @type {!Set<!Frame>} */\n    this._childFrames = new Set();\n    if (this._parentFrame)\n      this._parentFrame._childFrames.add(this);\n  }\n\n  /**\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async goto(url, options) {\n    return await this._frameManager.navigateFrame(this, url, options);\n  }\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async waitForNavigation(options) {\n    return await this._frameManager.waitForFrameNavigation(this, options);\n  }\n\n  /**\n   * @return {!Promise<!ExecutionContext>}\n   */\n  executionContext() {\n    return this._mainWorld.executionContext();\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  async evaluateHandle(pageFunction, ...args) {\n    return this._mainWorld.evaluateHandle(pageFunction, ...args);\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n  async evaluate(pageFunction, ...args) {\n    return this._mainWorld.evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  async $(selector) {\n    return this._mainWorld.$(selector);\n  }\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  async $x(expression) {\n    return this._mainWorld.$x(expression);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $eval(selector, pageFunction, ...args) {\n    return this._mainWorld.$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $$eval(selector, pageFunction, ...args) {\n    return this._mainWorld.$$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  async $$(selector) {\n    return this._mainWorld.$$(selector);\n  }\n\n  /**\n   * @return {!Promise<String>}\n   */\n  async content() {\n    return this._secondaryWorld.content();\n  }\n\n  /**\n   * @param {string} html\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   */\n  async setContent(html, options = {}) {\n    return this._secondaryWorld.setContent(html, options);\n  }\n\n  /**\n   * @return {string}\n   */\n  name() {\n    return this._name || '';\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {?Frame}\n   */\n  parentFrame() {\n    return this._parentFrame;\n  }\n\n  /**\n   * @return {!Array.<!Frame>}\n   */\n  childFrames() {\n    return Array.from(this._childFrames);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isDetached() {\n    return this._detached;\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string, type?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async addScriptTag(options) {\n    return this._mainWorld.addScriptTag(options);\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async addStyleTag(options) {\n    return this._mainWorld.addStyleTag(options);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async click(selector, options) {\n    return this._secondaryWorld.click(selector, options);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async focus(selector) {\n    return this._secondaryWorld.focus(selector);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async hover(selector) {\n    return this._secondaryWorld.hover(selector);\n  }\n\n  /**\n  * @param {string} selector\n  * @param {!Array<string>} values\n  * @return {!Promise<!Array<string>>}\n  */\n  select(selector, ...values){\n    return this._secondaryWorld.select(selector, ...values);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async tap(selector) {\n    return this._secondaryWorld.tap(selector);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  async type(selector, text, options) {\n    return this._mainWorld.type(selector, text, options);\n  }\n\n  /**\n   * @param {(string|number|Function)} selectorOrFunctionOrTimeout\n   * @param {!Object=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<?Puppeteer.JSHandle>}\n   */\n  waitFor(selectorOrFunctionOrTimeout, options = {}, ...args) {\n    const xPathPattern = '//';\n\n    if (helper.isString(selectorOrFunctionOrTimeout)) {\n      const string = /** @type {string} */ (selectorOrFunctionOrTimeout);\n      if (string.startsWith(xPathPattern))\n        return this.waitForXPath(string, options);\n      return this.waitForSelector(string, options);\n    }\n    if (helper.isNumber(selectorOrFunctionOrTimeout))\n      return new Promise(fulfill => setTimeout(fulfill, /** @type {number} */ (selectorOrFunctionOrTimeout)));\n    if (typeof selectorOrFunctionOrTimeout === 'function')\n      return this.waitForFunction(selectorOrFunctionOrTimeout, options, ...args);\n    return Promise.reject(new Error('Unsupported target type: ' + (typeof selectorOrFunctionOrTimeout)));\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  async waitForSelector(selector, options) {\n    const handle = await this._secondaryWorld.waitForSelector(selector, options);\n    if (!handle)\n      return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {string} xpath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  async waitForXPath(xpath, options) {\n    const handle = await this._secondaryWorld.waitForXPath(xpath, options);\n    if (!handle)\n      return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!{polling?: string|number, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitForFunction(pageFunction, options = {}, ...args) {\n    return this._mainWorld.waitForFunction(pageFunction, options, ...args);\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async title() {\n    return this._secondaryWorld.title();\n  }\n\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n  _navigated(framePayload) {\n    this._name = framePayload.name;\n    // TODO(lushnikov): remove this once requestInterception has loaderId exposed.\n    this._navigationURL = framePayload.url;\n    this._url = framePayload.url;\n  }\n\n  /**\n   * @param {string} url\n   */\n  _navigatedWithinDocument(url) {\n    this._url = url;\n  }\n\n  /**\n   * @param {string} loaderId\n   * @param {string} name\n   */\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n\n  _detach() {\n    this._detached = true;\n    this._mainWorld._detach();\n    this._secondaryWorld._detach();\n    if (this._parentFrame)\n      this._parentFrame._childFrames.delete(this);\n    this._parentFrame = null;\n  }\n}\n\nfunction assertNoLegacyNavigationOptions(options) {\n  assert(options['networkIdleTimeout'] === undefined, 'ERROR: networkIdleTimeout option is no longer supported.');\n  assert(options['networkIdleInflight'] === undefined, 'ERROR: networkIdleInflight option is no longer supported.');\n  assert(options.waitUntil !== 'networkidle', 'ERROR: \"networkidle\" option is no longer supported. Use \"networkidle2\" instead');\n}\n\nmodule.exports = {FrameManager, Frame};\n"]},"metadata":{},"sourceType":"module"}