{"ast":null,"code":"/**\n * common.js: Internal helper and utility functions for winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nconst {\n  format\n} = require('util');\n/**\n * Set of simple deprecation notices and a way to expose them for a set of\n * properties.\n * @type {Object}\n * @private\n */\n\n\nexports.warn = {\n  deprecated(prop) {\n    return () => {\n      throw new Error(format('{ %s } was removed in winston@3.0.0.', prop));\n    };\n  },\n\n  useFormat(prop) {\n    return () => {\n      throw new Error([format('{ %s } was removed in winston@3.0.0.', prop), 'Use a custom winston.format = winston.format(function) instead.'].join('\\n'));\n    };\n  },\n\n  forFunctions(obj, type, props) {\n    props.forEach(prop => {\n      obj[prop] = exports.warn[type](prop);\n    });\n  },\n\n  moved(obj, movedTo, prop) {\n    function movedNotice() {\n      return () => {\n        throw new Error([format('winston.%s was moved in winston@3.0.0.', prop), format('Use a winston.%s instead.', movedTo)].join('\\n'));\n      };\n    }\n\n    Object.defineProperty(obj, prop, {\n      get: movedNotice,\n      set: movedNotice\n    });\n  },\n\n  forProperties(obj, type, props) {\n    props.forEach(prop => {\n      const notice = exports.warn[type](prop);\n      Object.defineProperty(obj, prop, {\n        get: notice,\n        set: notice\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/winston/lib/winston/common.js"],"names":["format","require","exports","warn","deprecated","prop","Error","useFormat","join","forFunctions","obj","type","props","forEach","moved","movedTo","movedNotice","Object","defineProperty","get","set","forProperties","notice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,MAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAC,OAAO,CAACC,IAAR,GAAe;AACbC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,WAAO,MAAM;AACX,YAAM,IAAIC,KAAJ,CAAUN,MAAM,CAAC,sCAAD,EAAyCK,IAAzC,CAAhB,CAAN;AACD,KAFD;AAGD,GALY;;AAMbE,EAAAA,SAAS,CAACF,IAAD,EAAO;AACd,WAAO,MAAM;AACX,YAAM,IAAIC,KAAJ,CAAU,CACdN,MAAM,CAAC,sCAAD,EAAyCK,IAAzC,CADQ,EAEd,iEAFc,EAGdG,IAHc,CAGT,IAHS,CAAV,CAAN;AAID,KALD;AAMD,GAbY;;AAcbC,EAAAA,YAAY,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmB;AAC7BA,IAAAA,KAAK,CAACC,OAAN,CAAcR,IAAI,IAAI;AACpBK,MAAAA,GAAG,CAACL,IAAD,CAAH,GAAYH,OAAO,CAACC,IAAR,CAAaQ,IAAb,EAAmBN,IAAnB,CAAZ;AACD,KAFD;AAGD,GAlBY;;AAmBbS,EAAAA,KAAK,CAACJ,GAAD,EAAMK,OAAN,EAAeV,IAAf,EAAqB;AACxB,aAASW,WAAT,GAAuB;AACrB,aAAO,MAAM;AACX,cAAM,IAAIV,KAAJ,CAAU,CACdN,MAAM,CAAC,wCAAD,EAA2CK,IAA3C,CADQ,EAEdL,MAAM,CAAC,2BAAD,EAA8Be,OAA9B,CAFQ,EAGdP,IAHc,CAGT,IAHS,CAAV,CAAN;AAID,OALD;AAMD;;AAEDS,IAAAA,MAAM,CAACC,cAAP,CAAsBR,GAAtB,EAA2BL,IAA3B,EAAiC;AAC/Bc,MAAAA,GAAG,EAAEH,WAD0B;AAE/BI,MAAAA,GAAG,EAAEJ;AAF0B,KAAjC;AAID,GAjCY;;AAkCbK,EAAAA,aAAa,CAACX,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmB;AAC9BA,IAAAA,KAAK,CAACC,OAAN,CAAcR,IAAI,IAAI;AACpB,YAAMiB,MAAM,GAAGpB,OAAO,CAACC,IAAR,CAAaQ,IAAb,EAAmBN,IAAnB,CAAf;AACAY,MAAAA,MAAM,CAACC,cAAP,CAAsBR,GAAtB,EAA2BL,IAA3B,EAAiC;AAC/Bc,QAAAA,GAAG,EAAEG,MAD0B;AAE/BF,QAAAA,GAAG,EAAEE;AAF0B,OAAjC;AAID,KAND;AAOD;;AA1CY,CAAf","sourcesContent":["/**\n * common.js: Internal helper and utility functions for winston.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\nconst { format } = require('util');\n\n/**\n * Set of simple deprecation notices and a way to expose them for a set of\n * properties.\n * @type {Object}\n * @private\n */\nexports.warn = {\n  deprecated(prop) {\n    return () => {\n      throw new Error(format('{ %s } was removed in winston@3.0.0.', prop));\n    };\n  },\n  useFormat(prop) {\n    return () => {\n      throw new Error([\n        format('{ %s } was removed in winston@3.0.0.', prop),\n        'Use a custom winston.format = winston.format(function) instead.'\n      ].join('\\n'));\n    };\n  },\n  forFunctions(obj, type, props) {\n    props.forEach(prop => {\n      obj[prop] = exports.warn[type](prop);\n    });\n  },\n  moved(obj, movedTo, prop) {\n    function movedNotice() {\n      return () => {\n        throw new Error([\n          format('winston.%s was moved in winston@3.0.0.', prop),\n          format('Use a winston.%s instead.', movedTo)\n        ].join('\\n'));\n      };\n    }\n\n    Object.defineProperty(obj, prop, {\n      get: movedNotice,\n      set: movedNotice\n    });\n  },\n  forProperties(obj, type, props) {\n    props.forEach(prop => {\n      const notice = exports.warn[type](prop);\n      Object.defineProperty(obj, prop, {\n        get: notice,\n        set: notice\n      });\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}