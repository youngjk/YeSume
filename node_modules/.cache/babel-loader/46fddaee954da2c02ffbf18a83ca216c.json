{"ast":null,"code":"/**\n * profiler.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n/**\n * TODO: add class description.\n * @type {Profiler}\n * @private\n */\n\nmodule.exports = class Profiler {\n  /**\n   * Constructor function for the Profiler instance used by\n   * `Logger.prototype.startTimer`. When done is called the timer will finish\n   * and log the duration.\n   * @param {!Logger} logger - TODO: add param description.\n   * @private\n   */\n  constructor(logger) {\n    if (!logger) {\n      throw new Error('Logger is required for profiling.');\n    }\n\n    this.logger = logger;\n    this.start = Date.now();\n  }\n  /**\n   * Ends the current timer (i.e. Profiler) instance and logs the `msg` along\n   * with the duration since creation.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n\n\n  done(...args) {\n    if (typeof args[args.length - 1] === 'function') {\n      // eslint-disable-next-line no-console\n      console.warn('Callback function no longer supported as of winston@3.0.0');\n      args.pop();\n    }\n\n    const info = typeof args[args.length - 1] === 'object' ? args.pop() : {};\n    info.level = info.level || 'info';\n    info.durationMs = Date.now() - this.start;\n    return this.logger.write(info);\n  }\n\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/winston/lib/winston/profiler.js"],"names":["module","exports","Profiler","constructor","logger","Error","start","Date","now","done","args","length","console","warn","pop","info","level","durationMs","write"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,QAAN,CAAe;AAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,QAAI,CAACA,MAAL,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,KAAL,GAAaC,IAAI,CAACC,GAAL,EAAb;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,IAAI,CAAC,GAAGC,IAAJ,EAAU;AACZ,QAAI,OAAOA,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAX,KAAiC,UAArC,EAAiD;AAC/C;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,2DAAb;AACAH,MAAAA,IAAI,CAACI,GAAL;AACD;;AAED,UAAMC,IAAI,GAAG,OAAOL,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAX,KAAiC,QAAjC,GAA4CD,IAAI,CAACI,GAAL,EAA5C,GAAyD,EAAtE;AACAC,IAAAA,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAL,IAAc,MAA3B;AACAD,IAAAA,IAAI,CAACE,UAAL,GAAmBV,IAAI,CAACC,GAAL,EAAD,GAAe,KAAKF,KAAtC;AAEA,WAAO,KAAKF,MAAL,CAAYc,KAAZ,CAAkBH,IAAlB,CAAP;AACD;;AAnC6B,CAAhC","sourcesContent":["/**\n * profiler.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n\n'use strict';\n\n/**\n * TODO: add class description.\n * @type {Profiler}\n * @private\n */\nmodule.exports = class Profiler {\n  /**\n   * Constructor function for the Profiler instance used by\n   * `Logger.prototype.startTimer`. When done is called the timer will finish\n   * and log the duration.\n   * @param {!Logger} logger - TODO: add param description.\n   * @private\n   */\n  constructor(logger) {\n    if (!logger) {\n      throw new Error('Logger is required for profiling.');\n    }\n\n    this.logger = logger;\n    this.start = Date.now();\n  }\n\n  /**\n   * Ends the current timer (i.e. Profiler) instance and logs the `msg` along\n   * with the duration since creation.\n   * @returns {mixed} - TODO: add return description.\n   * @private\n   */\n  done(...args) {\n    if (typeof args[args.length - 1] === 'function') {\n      // eslint-disable-next-line no-console\n      console.warn('Callback function no longer supported as of winston@3.0.0');\n      args.pop();\n    }\n\n    const info = typeof args[args.length - 1] === 'object' ? args.pop() : {};\n    info.level = info.level || 'info';\n    info.durationMs = (Date.now()) - this.start;\n\n    return this.logger.write(info);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}