{"ast":null,"code":"(function (main) {\n  'use strict';\n  /**\n   * Parse or format dates\n   * @class fecha\n   */\n\n  var fecha = {};\n  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\n  var twoDigits = /\\d\\d?/;\n  var threeDigits = /\\d{3}/;\n  var fourDigits = /\\d{4}/;\n  var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n  var literal = /\\[([^]*?)\\]/gm;\n\n  var noop = function () {};\n\n  function shorten(arr, sLen) {\n    var newArr = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      newArr.push(arr[i].substr(0, sLen));\n    }\n\n    return newArr;\n  }\n\n  function monthUpdate(arrName) {\n    return function (d, v, i18n) {\n      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n\n      if (~index) {\n        d.month = index;\n      }\n    };\n  }\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n\n    while (val.length < len) {\n      val = '0' + val;\n    }\n\n    return val;\n  }\n\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var monthNamesShort = shorten(monthNames, 3);\n  var dayNamesShort = shorten(dayNames, 3);\n  fecha.i18n = {\n    dayNamesShort: dayNamesShort,\n    dayNames: dayNames,\n    monthNamesShort: monthNamesShort,\n    monthNames: monthNames,\n    amPm: ['am', 'pm'],\n    DoFn: function DoFn(D) {\n      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n    }\n  };\n  var formatFlags = {\n    D: function (dateObj) {\n      return dateObj.getDate();\n    },\n    DD: function (dateObj) {\n      return pad(dateObj.getDate());\n    },\n    Do: function (dateObj, i18n) {\n      return i18n.DoFn(dateObj.getDate());\n    },\n    d: function (dateObj) {\n      return dateObj.getDay();\n    },\n    dd: function (dateObj) {\n      return pad(dateObj.getDay());\n    },\n    ddd: function (dateObj, i18n) {\n      return i18n.dayNamesShort[dateObj.getDay()];\n    },\n    dddd: function (dateObj, i18n) {\n      return i18n.dayNames[dateObj.getDay()];\n    },\n    M: function (dateObj) {\n      return dateObj.getMonth() + 1;\n    },\n    MM: function (dateObj) {\n      return pad(dateObj.getMonth() + 1);\n    },\n    MMM: function (dateObj, i18n) {\n      return i18n.monthNamesShort[dateObj.getMonth()];\n    },\n    MMMM: function (dateObj, i18n) {\n      return i18n.monthNames[dateObj.getMonth()];\n    },\n    YY: function (dateObj) {\n      return String(dateObj.getFullYear()).substr(2);\n    },\n    YYYY: function (dateObj) {\n      return pad(dateObj.getFullYear(), 4);\n    },\n    h: function (dateObj) {\n      return dateObj.getHours() % 12 || 12;\n    },\n    hh: function (dateObj) {\n      return pad(dateObj.getHours() % 12 || 12);\n    },\n    H: function (dateObj) {\n      return dateObj.getHours();\n    },\n    HH: function (dateObj) {\n      return pad(dateObj.getHours());\n    },\n    m: function (dateObj) {\n      return dateObj.getMinutes();\n    },\n    mm: function (dateObj) {\n      return pad(dateObj.getMinutes());\n    },\n    s: function (dateObj) {\n      return dateObj.getSeconds();\n    },\n    ss: function (dateObj) {\n      return pad(dateObj.getSeconds());\n    },\n    S: function (dateObj) {\n      return Math.round(dateObj.getMilliseconds() / 100);\n    },\n    SS: function (dateObj) {\n      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n    },\n    SSS: function (dateObj) {\n      return pad(dateObj.getMilliseconds(), 3);\n    },\n    a: function (dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n    },\n    A: function (dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n    },\n    ZZ: function (dateObj) {\n      var o = dateObj.getTimezoneOffset();\n      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n    }\n  };\n  var parseFlags = {\n    D: [twoDigits, function (d, v) {\n      d.day = v;\n    }],\n    Do: [new RegExp(twoDigits.source + word.source), function (d, v) {\n      d.day = parseInt(v, 10);\n    }],\n    M: [twoDigits, function (d, v) {\n      d.month = v - 1;\n    }],\n    YY: [twoDigits, function (d, v) {\n      var da = new Date(),\n          cent = +('' + da.getFullYear()).substr(0, 2);\n      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n    }],\n    h: [twoDigits, function (d, v) {\n      d.hour = v;\n    }],\n    m: [twoDigits, function (d, v) {\n      d.minute = v;\n    }],\n    s: [twoDigits, function (d, v) {\n      d.second = v;\n    }],\n    YYYY: [fourDigits, function (d, v) {\n      d.year = v;\n    }],\n    S: [/\\d/, function (d, v) {\n      d.millisecond = v * 100;\n    }],\n    SS: [/\\d{2}/, function (d, v) {\n      d.millisecond = v * 10;\n    }],\n    SSS: [threeDigits, function (d, v) {\n      d.millisecond = v;\n    }],\n    d: [twoDigits, noop],\n    ddd: [word, noop],\n    MMM: [word, monthUpdate('monthNamesShort')],\n    MMMM: [word, monthUpdate('monthNames')],\n    a: [word, function (d, v, i18n) {\n      var val = v.toLowerCase();\n\n      if (val === i18n.amPm[0]) {\n        d.isPm = false;\n      } else if (val === i18n.amPm[1]) {\n        d.isPm = true;\n      }\n    }],\n    ZZ: [/([\\+\\-]\\d\\d:?\\d\\d|Z)/, function (d, v) {\n      if (v === 'Z') v = '+00:00';\n      var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi),\n          minutes;\n\n      if (parts) {\n        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n      }\n    }]\n  };\n  parseFlags.dd = parseFlags.d;\n  parseFlags.dddd = parseFlags.ddd;\n  parseFlags.DD = parseFlags.D;\n  parseFlags.mm = parseFlags.m;\n  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\n  parseFlags.MM = parseFlags.M;\n  parseFlags.ss = parseFlags.s;\n  parseFlags.A = parseFlags.a; // Some common format strings\n\n  fecha.masks = {\n    default: 'ddd MMM DD YYYY HH:mm:ss',\n    shortDate: 'M/D/YY',\n    mediumDate: 'MMM D, YYYY',\n    longDate: 'MMMM D, YYYY',\n    fullDate: 'dddd, MMMM D, YYYY',\n    shortTime: 'HH:mm',\n    mediumTime: 'HH:mm:ss',\n    longTime: 'HH:mm:ss.SSS'\n  };\n  /***\n   * Format a date\n   * @method format\n   * @param {Date|number} dateObj\n   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n   */\n\n  fecha.format = function (dateObj, mask, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof dateObj === 'number') {\n      dateObj = new Date(dateObj);\n    }\n\n    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n      throw new Error('Invalid Date in fecha.format');\n    }\n\n    mask = fecha.masks[mask] || mask || fecha.masks['default'];\n    var literals = []; // Make literals inactive by replacing them with ??\n\n    mask = mask.replace(literal, function ($0, $1) {\n      literals.push($1);\n      return '??';\n    }); // Apply formatting rules\n\n    mask = mask.replace(token, function ($0) {\n      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n    }); // Inline literal values back into the formatted value\n\n    return mask.replace(/\\?\\?/g, function () {\n      return literals.shift();\n    });\n  };\n  /**\n   * Parse a date string into an object, changes - into /\n   * @method parse\n   * @param {string} dateStr Date string\n   * @param {string} format Date parse format\n   * @returns {Date|boolean}\n   */\n\n\n  fecha.parse = function (dateStr, format, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof format !== 'string') {\n      throw new Error('Invalid format in fecha.parse');\n    }\n\n    format = fecha.masks[format] || format; // Avoid regular expression denial of service, fail early for really long strings\n    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n\n    if (dateStr.length > 1000) {\n      return false;\n    }\n\n    var isValid = true;\n    var dateInfo = {};\n    format.replace(token, function ($0) {\n      if (parseFlags[$0]) {\n        var info = parseFlags[$0];\n        var index = dateStr.search(info[0]);\n\n        if (!~index) {\n          isValid = false;\n        } else {\n          dateStr.replace(info[0], function (result) {\n            info[1](dateInfo, result, i18n);\n            dateStr = dateStr.substr(index + result.length);\n            return result;\n          });\n        }\n      }\n\n      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n    });\n\n    if (!isValid) {\n      return false;\n    }\n\n    var today = new Date();\n\n    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n      dateInfo.hour = +dateInfo.hour + 12;\n    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n      dateInfo.hour = 0;\n    }\n\n    var date;\n\n    if (dateInfo.timezoneOffset != null) {\n      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n    } else {\n      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n    }\n\n    return date;\n  };\n  /* istanbul ignore next */\n\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = fecha;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fecha;\n    });\n  } else {\n    main.fecha = fecha;\n  }\n})(this);","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/fecha/fecha.js"],"names":["main","fecha","token","twoDigits","threeDigits","fourDigits","word","literal","noop","shorten","arr","sLen","newArr","i","len","length","push","substr","monthUpdate","arrName","d","v","i18n","index","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","s","getSeconds","ss","S","Math","round","getMilliseconds","SS","SSS","a","A","ZZ","o","getTimezoneOffset","floor","abs","parseFlags","day","RegExp","source","parseInt","da","Date","cent","year","hour","minute","second","millisecond","isPm","parts","match","minutes","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","Object","prototype","toString","call","isNaN","getTime","Error","literals","replace","$0","$1","slice","shift","parse","dateStr","isValid","dateInfo","info","search","result","today","date","UTC","module","exports","define","amd"],"mappings":"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","sourcesContent":["(function (main) {\n  'use strict';\n\n  /**\n   * Parse or format dates\n   * @class fecha\n   */\n  var fecha = {};\n  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\n  var twoDigits = /\\d\\d?/;\n  var threeDigits = /\\d{3}/;\n  var fourDigits = /\\d{4}/;\n  var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n  var literal = /\\[([^]*?)\\]/gm;\n  var noop = function () {\n  };\n\n  function shorten(arr, sLen) {\n    var newArr = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n      newArr.push(arr[i].substr(0, sLen));\n    }\n    return newArr;\n  }\n\n  function monthUpdate(arrName) {\n    return function (d, v, i18n) {\n      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n      if (~index) {\n        d.month = index;\n      }\n    };\n  }\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n      val = '0' + val;\n    }\n    return val;\n  }\n\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var monthNamesShort = shorten(monthNames, 3);\n  var dayNamesShort = shorten(dayNames, 3);\n  fecha.i18n = {\n    dayNamesShort: dayNamesShort,\n    dayNames: dayNames,\n    monthNamesShort: monthNamesShort,\n    monthNames: monthNames,\n    amPm: ['am', 'pm'],\n    DoFn: function DoFn(D) {\n      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n    }\n  };\n\n  var formatFlags = {\n    D: function(dateObj) {\n      return dateObj.getDate();\n    },\n    DD: function(dateObj) {\n      return pad(dateObj.getDate());\n    },\n    Do: function(dateObj, i18n) {\n      return i18n.DoFn(dateObj.getDate());\n    },\n    d: function(dateObj) {\n      return dateObj.getDay();\n    },\n    dd: function(dateObj) {\n      return pad(dateObj.getDay());\n    },\n    ddd: function(dateObj, i18n) {\n      return i18n.dayNamesShort[dateObj.getDay()];\n    },\n    dddd: function(dateObj, i18n) {\n      return i18n.dayNames[dateObj.getDay()];\n    },\n    M: function(dateObj) {\n      return dateObj.getMonth() + 1;\n    },\n    MM: function(dateObj) {\n      return pad(dateObj.getMonth() + 1);\n    },\n    MMM: function(dateObj, i18n) {\n      return i18n.monthNamesShort[dateObj.getMonth()];\n    },\n    MMMM: function(dateObj, i18n) {\n      return i18n.monthNames[dateObj.getMonth()];\n    },\n    YY: function(dateObj) {\n      return String(dateObj.getFullYear()).substr(2);\n    },\n    YYYY: function(dateObj) {\n      return pad(dateObj.getFullYear(), 4);\n    },\n    h: function(dateObj) {\n      return dateObj.getHours() % 12 || 12;\n    },\n    hh: function(dateObj) {\n      return pad(dateObj.getHours() % 12 || 12);\n    },\n    H: function(dateObj) {\n      return dateObj.getHours();\n    },\n    HH: function(dateObj) {\n      return pad(dateObj.getHours());\n    },\n    m: function(dateObj) {\n      return dateObj.getMinutes();\n    },\n    mm: function(dateObj) {\n      return pad(dateObj.getMinutes());\n    },\n    s: function(dateObj) {\n      return dateObj.getSeconds();\n    },\n    ss: function(dateObj) {\n      return pad(dateObj.getSeconds());\n    },\n    S: function(dateObj) {\n      return Math.round(dateObj.getMilliseconds() / 100);\n    },\n    SS: function(dateObj) {\n      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n    },\n    SSS: function(dateObj) {\n      return pad(dateObj.getMilliseconds(), 3);\n    },\n    a: function(dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n    },\n    A: function(dateObj, i18n) {\n      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n    },\n    ZZ: function(dateObj) {\n      var o = dateObj.getTimezoneOffset();\n      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n    }\n  };\n\n  var parseFlags = {\n    D: [twoDigits, function (d, v) {\n      d.day = v;\n    }],\n    Do: [new RegExp(twoDigits.source + word.source), function (d, v) {\n      d.day = parseInt(v, 10);\n    }],\n    M: [twoDigits, function (d, v) {\n      d.month = v - 1;\n    }],\n    YY: [twoDigits, function (d, v) {\n      var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\n      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n    }],\n    h: [twoDigits, function (d, v) {\n      d.hour = v;\n    }],\n    m: [twoDigits, function (d, v) {\n      d.minute = v;\n    }],\n    s: [twoDigits, function (d, v) {\n      d.second = v;\n    }],\n    YYYY: [fourDigits, function (d, v) {\n      d.year = v;\n    }],\n    S: [/\\d/, function (d, v) {\n      d.millisecond = v * 100;\n    }],\n    SS: [/\\d{2}/, function (d, v) {\n      d.millisecond = v * 10;\n    }],\n    SSS: [threeDigits, function (d, v) {\n      d.millisecond = v;\n    }],\n    d: [twoDigits, noop],\n    ddd: [word, noop],\n    MMM: [word, monthUpdate('monthNamesShort')],\n    MMMM: [word, monthUpdate('monthNames')],\n    a: [word, function (d, v, i18n) {\n      var val = v.toLowerCase();\n      if (val === i18n.amPm[0]) {\n        d.isPm = false;\n      } else if (val === i18n.amPm[1]) {\n        d.isPm = true;\n      }\n    }],\n    ZZ: [/([\\+\\-]\\d\\d:?\\d\\d|Z)/, function (d, v) {\n      if (v === 'Z') v = '+00:00';\n      var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi), minutes;\n\n      if (parts) {\n        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n      }\n    }]\n  };\n  parseFlags.dd = parseFlags.d;\n  parseFlags.dddd = parseFlags.ddd;\n  parseFlags.DD = parseFlags.D;\n  parseFlags.mm = parseFlags.m;\n  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\n  parseFlags.MM = parseFlags.M;\n  parseFlags.ss = parseFlags.s;\n  parseFlags.A = parseFlags.a;\n\n\n  // Some common format strings\n  fecha.masks = {\n    default: 'ddd MMM DD YYYY HH:mm:ss',\n    shortDate: 'M/D/YY',\n    mediumDate: 'MMM D, YYYY',\n    longDate: 'MMMM D, YYYY',\n    fullDate: 'dddd, MMMM D, YYYY',\n    shortTime: 'HH:mm',\n    mediumTime: 'HH:mm:ss',\n    longTime: 'HH:mm:ss.SSS'\n  };\n\n  /***\n   * Format a date\n   * @method format\n   * @param {Date|number} dateObj\n   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n   */\n  fecha.format = function (dateObj, mask, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof dateObj === 'number') {\n      dateObj = new Date(dateObj);\n    }\n\n    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n      throw new Error('Invalid Date in fecha.format');\n    }\n\n    mask = fecha.masks[mask] || mask || fecha.masks['default'];\n\n    var literals = [];\n\n    // Make literals inactive by replacing them with ??\n    mask = mask.replace(literal, function($0, $1) {\n      literals.push($1);\n      return '??';\n    });\n    // Apply formatting rules\n    mask = mask.replace(token, function ($0) {\n      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n    });\n    // Inline literal values back into the formatted value\n    return mask.replace(/\\?\\?/g, function() {\n      return literals.shift();\n    });\n  };\n\n  /**\n   * Parse a date string into an object, changes - into /\n   * @method parse\n   * @param {string} dateStr Date string\n   * @param {string} format Date parse format\n   * @returns {Date|boolean}\n   */\n  fecha.parse = function (dateStr, format, i18nSettings) {\n    var i18n = i18nSettings || fecha.i18n;\n\n    if (typeof format !== 'string') {\n      throw new Error('Invalid format in fecha.parse');\n    }\n\n    format = fecha.masks[format] || format;\n\n    // Avoid regular expression denial of service, fail early for really long strings\n    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n    if (dateStr.length > 1000) {\n      return false;\n    }\n\n    var isValid = true;\n    var dateInfo = {};\n    format.replace(token, function ($0) {\n      if (parseFlags[$0]) {\n        var info = parseFlags[$0];\n        var index = dateStr.search(info[0]);\n        if (!~index) {\n          isValid = false;\n        } else {\n          dateStr.replace(info[0], function (result) {\n            info[1](dateInfo, result, i18n);\n            dateStr = dateStr.substr(index + result.length);\n            return result;\n          });\n        }\n      }\n\n      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\n    });\n\n    if (!isValid) {\n      return false;\n    }\n\n    var today = new Date();\n    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n      dateInfo.hour = +dateInfo.hour + 12;\n    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n      dateInfo.hour = 0;\n    }\n\n    var date;\n    if (dateInfo.timezoneOffset != null) {\n      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n    } else {\n      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n        dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n    }\n    return date;\n  };\n\n  /* istanbul ignore next */\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = fecha;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return fecha;\n    });\n  } else {\n    main.fecha = fecha;\n  }\n})(this);\n"]},"metadata":{},"sourceType":"module"}