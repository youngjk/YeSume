{"ast":null,"code":"/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {\n  helper,\n  assert,\n  debugError\n} = require('./helper');\n\nconst path = require('path');\n\nfunction createJSHandle(context, remoteObject) {\n  const frame = context.frame();\n\n  if (remoteObject.subtype === 'node' && frame) {\n    const frameManager = frame._frameManager;\n    return new ElementHandle(context, context._client, remoteObject, frameManager.page(), frameManager);\n  }\n\n  return new JSHandle(context, context._client, remoteObject);\n}\n\nclass JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   */\n  constructor(context, client, remoteObject) {\n    this._context = context;\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._disposed = false;\n  }\n  /**\n   * @return {!Puppeteer.ExecutionContext}\n   */\n\n\n  executionContext() {\n    return this._context;\n  }\n  /**\n   * @param {string} propertyName\n   * @return {!Promise<?JSHandle>}\n   */\n\n\n  async getProperty(propertyName) {\n    const objectHandle = await this._context.evaluateHandle((object, propertyName) => {\n      const result = {\n        __proto__: null\n      };\n      result[propertyName] = object[propertyName];\n      return result;\n    }, this, propertyName);\n    const properties = await objectHandle.getProperties();\n    const result = properties.get(propertyName) || null;\n    await objectHandle.dispose();\n    return result;\n  }\n  /**\n   * @return {!Promise<!Map<string, !JSHandle>>}\n   */\n\n\n  async getProperties() {\n    const response = await this._client.send('Runtime.getProperties', {\n      objectId: this._remoteObject.objectId,\n      ownProperties: true\n    });\n    const result = new Map();\n\n    for (const property of response.result) {\n      if (!property.enumerable) continue;\n      result.set(property.name, createJSHandle(this._context, property.value));\n    }\n\n    return result;\n  }\n  /**\n   * @return {!Promise<?Object>}\n   */\n\n\n  async jsonValue() {\n    if (this._remoteObject.objectId) {\n      const response = await this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: 'function() { return this; }',\n        objectId: this._remoteObject.objectId,\n        returnByValue: true,\n        awaitPromise: true\n      });\n      return helper.valueFromRemoteObject(response.result);\n    }\n\n    return helper.valueFromRemoteObject(this._remoteObject);\n  }\n  /**\n   * @return {?Puppeteer.ElementHandle}\n   */\n\n\n  asElement() {\n    return null;\n  }\n\n  async dispose() {\n    if (this._disposed) return;\n    this._disposed = true;\n    await helper.releaseObject(this._client, this._remoteObject);\n  }\n  /**\n   * @override\n   * @return {string}\n   */\n\n\n  toString() {\n    if (this._remoteObject.objectId) {\n      const type = this._remoteObject.subtype || this._remoteObject.type;\n      return 'JSHandle@' + type;\n    }\n\n    return 'JSHandle:' + helper.valueFromRemoteObject(this._remoteObject);\n  }\n\n}\n\nclass ElementHandle extends JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.FrameManager} frameManager\n   */\n  constructor(context, client, remoteObject, page, frameManager) {\n    super(context, client, remoteObject);\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._page = page;\n    this._frameManager = frameManager;\n    this._disposed = false;\n  }\n  /**\n   * @override\n   * @return {?ElementHandle}\n   */\n\n\n  asElement() {\n    return this;\n  }\n  /**\n   * @return {!Promise<?Puppeteer.Frame>}\n   */\n\n\n  async contentFrame() {\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: this._remoteObject.objectId\n    });\n    if (typeof nodeInfo.node.frameId !== 'string') return null;\n    return this._frameManager.frame(nodeInfo.node.frameId);\n  }\n\n  async _scrollIntoViewIfNeeded() {\n    const error = await this.executionContext().evaluate(async (element, pageJavascriptEnabled) => {\n      if (!element.isConnected) return 'Node is detached from document';\n      if (element.nodeType !== Node.ELEMENT_NODE) return 'Node is not of type HTMLElement'; // force-scroll if page's javascript is disabled.\n\n      if (!pageJavascriptEnabled) {\n        element.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n          behavior: 'instant'\n        });\n        return false;\n      }\n\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      if (visibleRatio !== 1.0) element.scrollIntoView({\n        block: 'center',\n        inline: 'center',\n        behavior: 'instant'\n      });\n      return false;\n    }, this, this._page._javascriptEnabled);\n    if (error) throw new Error(error);\n  }\n  /**\n   * @return {!Promise<!{x: number, y: number}>}\n   */\n\n\n  async _clickablePoint() {\n    const result = await this._client.send('DOM.getContentQuads', {\n      objectId: this._remoteObject.objectId\n    }).catch(debugError);\n    if (!result || !result.quads.length) throw new Error('Node is either not visible or not an HTMLElement'); // Filter out quads that have too small area to click into.\n\n    const quads = result.quads.map(quad => this._fromProtocolQuad(quad)).filter(quad => computeQuadArea(quad) > 1);\n    if (!quads.length) throw new Error('Node is either not visible or not an HTMLElement'); // Return the middle point of the first quad.\n\n    const quad = quads[0];\n    let x = 0;\n    let y = 0;\n\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  }\n  /**\n   * @return {!Promise<void|Protocol.DOM.getBoxModelReturnValue>}\n   */\n\n\n  _getBoxModel() {\n    return this._client.send('DOM.getBoxModel', {\n      objectId: this._remoteObject.objectId\n    }).catch(error => debugError(error));\n  }\n  /**\n   * @param {!Array<number>} quad\n   * @return {!Array<{x: number, y: number}>}\n   */\n\n\n  _fromProtocolQuad(quad) {\n    return [{\n      x: quad[0],\n      y: quad[1]\n    }, {\n      x: quad[2],\n      y: quad[3]\n    }, {\n      x: quad[4],\n      y: quad[5]\n    }, {\n      x: quad[6],\n      y: quad[7]\n    }];\n  }\n\n  async hover() {\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this._clickablePoint();\n    await this._page.mouse.move(x, y);\n  }\n  /**\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n\n\n  async click(options) {\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this._clickablePoint();\n    await this._page.mouse.click(x, y, options);\n  }\n  /**\n   * @param {!Array<string>} filePaths\n   */\n\n\n  async uploadFile(...filePaths) {\n    const files = filePaths.map(filePath => path.resolve(filePath));\n    const objectId = this._remoteObject.objectId;\n    await this._client.send('DOM.setFileInputFiles', {\n      objectId,\n      files\n    });\n  }\n\n  async tap() {\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this._clickablePoint();\n    await this._page.touchscreen.tap(x, y);\n  }\n\n  async focus() {\n    await this.executionContext().evaluate(element => element.focus(), this);\n  }\n  /**\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n\n\n  async type(text, options) {\n    await this.focus();\n    await this._page.keyboard.type(text, options);\n  }\n  /**\n   * @param {string} key\n   * @param {!{delay?: number, text?: string}=} options\n   */\n\n\n  async press(key, options) {\n    await this.focus();\n    await this._page.keyboard.press(key, options);\n  }\n  /**\n   * @return {!Promise<?{x: number, y: number, width: number, height: number}>}\n   */\n\n\n  async boundingBox() {\n    const result = await this._getBoxModel();\n    if (!result) return null;\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n    return {\n      x,\n      y,\n      width,\n      height\n    };\n  }\n  /**\n   * @return {!Promise<?BoxModel>}\n   */\n\n\n  async boxModel() {\n    const result = await this._getBoxModel();\n    if (!result) return null;\n    const {\n      content,\n      padding,\n      border,\n      margin,\n      width,\n      height\n    } = result.model;\n    return {\n      content: this._fromProtocolQuad(content),\n      padding: this._fromProtocolQuad(padding),\n      border: this._fromProtocolQuad(border),\n      margin: this._fromProtocolQuad(margin),\n      width,\n      height\n    };\n  }\n  /**\n   *\n   * @param {!Object=} options\n   * @returns {!Promise<string|!Buffer>}\n   */\n\n\n  async screenshot(options = {}) {\n    let needsViewportReset = false;\n    let boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const viewport = this._page.viewport();\n\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height))\n      };\n      await this._page.setViewport(Object.assign({}, viewport, newViewport));\n      needsViewportReset = true;\n    }\n\n    await this._scrollIntoViewIfNeeded();\n    boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n    assert(boundingBox.width !== 0, 'Node has 0 width.');\n    assert(boundingBox.height !== 0, 'Node has 0 height.');\n    const {\n      layoutViewport: {\n        pageX,\n        pageY\n      }\n    } = await this._client.send('Page.getLayoutMetrics');\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n    const imageData = await this._page.screenshot(Object.assign({}, {\n      clip\n    }, options));\n    if (needsViewportReset) await this._page.setViewport(viewport);\n    return imageData;\n  }\n  /**\n   * @param {string} selector\n   * @return {!Promise<?ElementHandle>}\n   */\n\n\n  async $(selector) {\n    const handle = await this.executionContext().evaluateHandle((element, selector) => element.querySelector(selector), this, selector);\n    const element = handle.asElement();\n    if (element) return element;\n    await handle.dispose();\n    return null;\n  }\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n\n\n  async $$(selector) {\n    const arrayHandle = await this.executionContext().evaluateHandle((element, selector) => element.querySelectorAll(selector), this, selector);\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle) result.push(elementHandle);\n    }\n\n    return result;\n  }\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async $eval(selector, pageFunction, ...args) {\n    const elementHandle = await this.$(selector);\n    if (!elementHandle) throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n    const result = await this.executionContext().evaluate(pageFunction, elementHandle, ...args);\n    await elementHandle.dispose();\n    return result;\n  }\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async $$eval(selector, pageFunction, ...args) {\n    const arrayHandle = await this.executionContext().evaluateHandle((element, selector) => Array.from(element.querySelectorAll(selector)), this, selector);\n    const result = await this.executionContext().evaluate(pageFunction, arrayHandle, ...args);\n    await arrayHandle.dispose();\n    return result;\n  }\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n\n\n  async $x(expression) {\n    const arrayHandle = await this.executionContext().evaluateHandle((element, expression) => {\n      const document = element.ownerDocument || element;\n      const iterator = document.evaluate(expression, element, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n      const array = [];\n      let item;\n\n      while (item = iterator.iterateNext()) array.push(item);\n\n      return array;\n    }, this, expression);\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle) result.push(elementHandle);\n    }\n\n    return result;\n  }\n  /**\n   * @returns {!Promise<boolean>}\n   */\n\n\n  isIntersectingViewport() {\n    return this.executionContext().evaluate(async element => {\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      return visibleRatio > 0;\n    }, this);\n  }\n\n}\n\nfunction computeQuadArea(quad) {\n  // Compute sum of all directed areas of adjacent triangles\n  // https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n  let area = 0;\n\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n\n  return Math.abs(area);\n}\n/**\n * @typedef {Object} BoxModel\n * @property {!Array<!{x: number, y: number}>} content\n * @property {!Array<!{x: number, y: number}>} padding\n * @property {!Array<!{x: number, y: number}>} border\n * @property {!Array<!{x: number, y: number}>} margin\n * @property {number} width\n * @property {number} height\n */\n\n\nmodule.exports = {\n  createJSHandle,\n  JSHandle,\n  ElementHandle\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/node_modules/puppeteer/lib/JSHandle.js"],"names":["helper","assert","debugError","require","path","createJSHandle","context","remoteObject","frame","subtype","frameManager","_frameManager","ElementHandle","_client","page","JSHandle","constructor","client","_context","_remoteObject","_disposed","executionContext","getProperty","propertyName","objectHandle","evaluateHandle","object","result","__proto__","properties","getProperties","get","dispose","response","send","objectId","ownProperties","Map","property","enumerable","set","name","value","jsonValue","functionDeclaration","returnByValue","awaitPromise","valueFromRemoteObject","asElement","releaseObject","toString","type","_page","contentFrame","nodeInfo","node","frameId","_scrollIntoViewIfNeeded","error","evaluate","element","pageJavascriptEnabled","isConnected","nodeType","Node","ELEMENT_NODE","scrollIntoView","block","inline","behavior","visibleRatio","Promise","resolve","observer","IntersectionObserver","entries","intersectionRatio","disconnect","observe","_javascriptEnabled","Error","_clickablePoint","catch","quads","length","map","quad","_fromProtocolQuad","filter","computeQuadArea","x","y","point","_getBoxModel","hover","mouse","move","click","options","uploadFile","filePaths","files","filePath","tap","touchscreen","focus","text","keyboard","press","key","boundingBox","model","border","Math","min","width","max","height","boxModel","content","padding","margin","screenshot","needsViewportReset","viewport","newViewport","ceil","setViewport","Object","assign","layoutViewport","pageX","pageY","clip","imageData","$","selector","handle","querySelector","$$","arrayHandle","querySelectorAll","values","elementHandle","push","$eval","pageFunction","args","$$eval","Array","from","$x","expression","document","ownerDocument","iterator","XPathResult","ORDERED_NODE_ITERATOR_TYPE","array","item","iterateNext","isIntersectingViewport","area","i","p1","p2","abs","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert, debugError} = require('./helper');\nconst path = require('path');\n\nfunction createJSHandle(context, remoteObject) {\n  const frame = context.frame();\n  if (remoteObject.subtype === 'node' && frame) {\n    const frameManager = frame._frameManager;\n    return new ElementHandle(context, context._client, remoteObject, frameManager.page(), frameManager);\n  }\n  return new JSHandle(context, context._client, remoteObject);\n}\n\nclass JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   */\n  constructor(context, client, remoteObject) {\n    this._context = context;\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._disposed = false;\n  }\n\n  /**\n   * @return {!Puppeteer.ExecutionContext}\n   */\n  executionContext() {\n    return this._context;\n  }\n\n  /**\n   * @param {string} propertyName\n   * @return {!Promise<?JSHandle>}\n   */\n  async getProperty(propertyName) {\n    const objectHandle = await this._context.evaluateHandle((object, propertyName) => {\n      const result = {__proto__: null};\n      result[propertyName] = object[propertyName];\n      return result;\n    }, this, propertyName);\n    const properties = await objectHandle.getProperties();\n    const result = properties.get(propertyName) || null;\n    await objectHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @return {!Promise<!Map<string, !JSHandle>>}\n   */\n  async getProperties() {\n    const response = await this._client.send('Runtime.getProperties', {\n      objectId: this._remoteObject.objectId,\n      ownProperties: true\n    });\n    const result = new Map();\n    for (const property of response.result) {\n      if (!property.enumerable)\n        continue;\n      result.set(property.name, createJSHandle(this._context, property.value));\n    }\n    return result;\n  }\n\n  /**\n   * @return {!Promise<?Object>}\n   */\n  async jsonValue() {\n    if (this._remoteObject.objectId) {\n      const response = await this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: 'function() { return this; }',\n        objectId: this._remoteObject.objectId,\n        returnByValue: true,\n        awaitPromise: true,\n      });\n      return helper.valueFromRemoteObject(response.result);\n    }\n    return helper.valueFromRemoteObject(this._remoteObject);\n  }\n\n  /**\n   * @return {?Puppeteer.ElementHandle}\n   */\n  asElement() {\n    return null;\n  }\n\n  async dispose() {\n    if (this._disposed)\n      return;\n    this._disposed = true;\n    await helper.releaseObject(this._client, this._remoteObject);\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  toString() {\n    if (this._remoteObject.objectId) {\n      const type =  this._remoteObject.subtype || this._remoteObject.type;\n      return 'JSHandle@' + type;\n    }\n    return 'JSHandle:' + helper.valueFromRemoteObject(this._remoteObject);\n  }\n}\n\nclass ElementHandle extends JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.FrameManager} frameManager\n   */\n  constructor(context, client, remoteObject, page, frameManager) {\n    super(context, client, remoteObject);\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._page = page;\n    this._frameManager = frameManager;\n    this._disposed = false;\n  }\n\n  /**\n   * @override\n   * @return {?ElementHandle}\n   */\n  asElement() {\n    return this;\n  }\n\n  /**\n   * @return {!Promise<?Puppeteer.Frame>}\n   */\n  async contentFrame() {\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: this._remoteObject.objectId\n    });\n    if (typeof nodeInfo.node.frameId !== 'string')\n      return null;\n    return this._frameManager.frame(nodeInfo.node.frameId);\n  }\n\n  async _scrollIntoViewIfNeeded() {\n    const error = await this.executionContext().evaluate(async(element, pageJavascriptEnabled) => {\n      if (!element.isConnected)\n        return 'Node is detached from document';\n      if (element.nodeType !== Node.ELEMENT_NODE)\n        return 'Node is not of type HTMLElement';\n      // force-scroll if page's javascript is disabled.\n      if (!pageJavascriptEnabled) {\n        element.scrollIntoView({block: 'center', inline: 'center', behavior: 'instant'});\n        return false;\n      }\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      if (visibleRatio !== 1.0)\n        element.scrollIntoView({block: 'center', inline: 'center', behavior: 'instant'});\n      return false;\n    }, this, this._page._javascriptEnabled);\n    if (error)\n      throw new Error(error);\n  }\n\n  /**\n   * @return {!Promise<!{x: number, y: number}>}\n   */\n  async _clickablePoint() {\n    const result = await this._client.send('DOM.getContentQuads', {\n      objectId: this._remoteObject.objectId\n    }).catch(debugError);\n    if (!result || !result.quads.length)\n      throw new Error('Node is either not visible or not an HTMLElement');\n    // Filter out quads that have too small area to click into.\n    const quads = result.quads.map(quad => this._fromProtocolQuad(quad)).filter(quad => computeQuadArea(quad) > 1);\n    if (!quads.length)\n      throw new Error('Node is either not visible or not an HTMLElement');\n    // Return the middle point of the first quad.\n    const quad = quads[0];\n    let x = 0;\n    let y = 0;\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  }\n\n  /**\n   * @return {!Promise<void|Protocol.DOM.getBoxModelReturnValue>}\n   */\n  _getBoxModel() {\n    return this._client.send('DOM.getBoxModel', {\n      objectId: this._remoteObject.objectId\n    }).catch(error => debugError(error));\n  }\n\n  /**\n   * @param {!Array<number>} quad\n   * @return {!Array<{x: number, y: number}>}\n   */\n  _fromProtocolQuad(quad) {\n    return [\n      {x: quad[0], y: quad[1]},\n      {x: quad[2], y: quad[3]},\n      {x: quad[4], y: quad[5]},\n      {x: quad[6], y: quad[7]}\n    ];\n  }\n\n  async hover() {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.mouse.move(x, y);\n  }\n\n  /**\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async click(options) {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.mouse.click(x, y, options);\n  }\n\n  /**\n   * @param {!Array<string>} filePaths\n   */\n  async uploadFile(...filePaths) {\n    const files = filePaths.map(filePath => path.resolve(filePath));\n    const objectId = this._remoteObject.objectId;\n    await this._client.send('DOM.setFileInputFiles', { objectId, files });\n  }\n\n  async tap() {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.touchscreen.tap(x, y);\n  }\n\n  async focus() {\n    await this.executionContext().evaluate(element => element.focus(), this);\n  }\n\n  /**\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  async type(text, options) {\n    await this.focus();\n    await this._page.keyboard.type(text, options);\n  }\n\n  /**\n   * @param {string} key\n   * @param {!{delay?: number, text?: string}=} options\n   */\n  async press(key, options) {\n    await this.focus();\n    await this._page.keyboard.press(key, options);\n  }\n\n  /**\n   * @return {!Promise<?{x: number, y: number, width: number, height: number}>}\n   */\n  async boundingBox() {\n    const result = await this._getBoxModel();\n\n    if (!result)\n      return null;\n\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n\n    return {x, y, width, height};\n  }\n\n  /**\n   * @return {!Promise<?BoxModel>}\n   */\n  async boxModel() {\n    const result = await this._getBoxModel();\n\n    if (!result)\n      return null;\n\n    const {content, padding, border, margin, width, height} = result.model;\n    return {\n      content: this._fromProtocolQuad(content),\n      padding: this._fromProtocolQuad(padding),\n      border: this._fromProtocolQuad(border),\n      margin: this._fromProtocolQuad(margin),\n      width,\n      height\n    };\n  }\n\n  /**\n   *\n   * @param {!Object=} options\n   * @returns {!Promise<string|!Buffer>}\n   */\n  async screenshot(options = {}) {\n    let needsViewportReset = false;\n\n    let boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const viewport = this._page.viewport();\n\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height)),\n      };\n      await this._page.setViewport(Object.assign({}, viewport, newViewport));\n\n      needsViewportReset = true;\n    }\n\n    await this._scrollIntoViewIfNeeded();\n\n    boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n    assert(boundingBox.width !== 0, 'Node has 0 width.');\n    assert(boundingBox.height !== 0, 'Node has 0 height.');\n\n    const { layoutViewport: { pageX, pageY } } = await this._client.send('Page.getLayoutMetrics');\n\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n\n    const imageData = await this._page.screenshot(Object.assign({}, {\n      clip\n    }, options));\n\n    if (needsViewportReset)\n      await this._page.setViewport(viewport);\n\n    return imageData;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?ElementHandle>}\n   */\n  async $(selector) {\n    const handle = await this.executionContext().evaluateHandle(\n        (element, selector) => element.querySelector(selector),\n        this, selector\n    );\n    const element = handle.asElement();\n    if (element)\n      return element;\n    await handle.dispose();\n    return null;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n  async $$(selector) {\n    const arrayHandle = await this.executionContext().evaluateHandle(\n        (element, selector) => element.querySelectorAll(selector),\n        this, selector\n    );\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle)\n        result.push(elementHandle);\n    }\n    return result;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $eval(selector, pageFunction, ...args) {\n    const elementHandle = await this.$(selector);\n    if (!elementHandle)\n      throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n    const result = await this.executionContext().evaluate(pageFunction, elementHandle, ...args);\n    await elementHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $$eval(selector, pageFunction, ...args) {\n    const arrayHandle = await this.executionContext().evaluateHandle(\n        (element, selector) => Array.from(element.querySelectorAll(selector)),\n        this, selector\n    );\n\n    const result = await this.executionContext().evaluate(pageFunction, arrayHandle, ...args);\n    await arrayHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n  async $x(expression) {\n    const arrayHandle = await this.executionContext().evaluateHandle(\n        (element, expression) => {\n          const document = element.ownerDocument || element;\n          const iterator = document.evaluate(expression, element, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n          const array = [];\n          let item;\n          while ((item = iterator.iterateNext()))\n            array.push(item);\n          return array;\n        },\n        this, expression\n    );\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle)\n        result.push(elementHandle);\n    }\n    return result;\n  }\n\n  /**\n   * @returns {!Promise<boolean>}\n   */\n  isIntersectingViewport() {\n    return this.executionContext().evaluate(async element => {\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      return visibleRatio > 0;\n    }, this);\n  }\n}\n\nfunction computeQuadArea(quad) {\n  // Compute sum of all directed areas of adjacent triangles\n  // https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n  let area = 0;\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n  return Math.abs(area);\n}\n\n/**\n * @typedef {Object} BoxModel\n * @property {!Array<!{x: number, y: number}>} content\n * @property {!Array<!{x: number, y: number}>} padding\n * @property {!Array<!{x: number, y: number}>} border\n * @property {!Array<!{x: number, y: number}>} margin\n * @property {number} width\n * @property {number} height\n */\n\nmodule.exports = {createJSHandle, JSHandle, ElementHandle};\n"]},"metadata":{},"sourceType":"script"}