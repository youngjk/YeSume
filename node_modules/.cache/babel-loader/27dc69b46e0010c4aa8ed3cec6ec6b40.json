{"ast":null,"code":"const openPage = require('./openPage');\n\nconst logger = require('./logger')(__filename);\n\nconst pkg = require('./package');\n\nmodule.exports = async (browser, email, password) => {\n  const url = 'https://www.linkedin.com/login';\n  const page = await openPage({\n    browser,\n    url\n  });\n  logger.info(`logging at: ${url}`);\n  await page.goto(url);\n  await page.waitFor('#username');\n  await page.$('#username').then(emailElement => emailElement.type(email));\n  await page.$('#password').then(passwordElement => passwordElement.type(password));\n  await page.$x(\"//button[contains(text(), 'Sign in')]\").then(button => button[0].click());\n  return page.waitFor('input[role=combobox]', {\n    timeout: 15000\n  }).then(async () => {\n    logger.info('logged feed page selector found');\n    await page.close();\n  }).catch(async () => {\n    logger.warn('successful login element was not found');\n    const emailError = await page.evaluate(() => {\n      const e = document.querySelector('div[error-for=username]');\n\n      if (!e) {\n        return false;\n      }\n\n      const style = window.getComputedStyle(e);\n      return style && style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0';\n    });\n    const passwordError = await page.evaluate(() => {\n      const e = document.querySelector('div[error-for=password]');\n\n      if (!e) {\n        return false;\n      }\n\n      const style = window.getComputedStyle(e);\n      return style && style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0';\n    });\n    const manualChallengeRequested = await page.evaluate(() => {\n      const e = document.querySelector('.flow-challenge-content');\n\n      if (!e) {\n        return false;\n      }\n\n      const style = window.getComputedStyle(e);\n      return style && style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0';\n    });\n\n    if (emailError) {\n      logger.info('wrong username element found');\n      return Promise.reject(new Error(`linkedin: invalid username: ${email}`));\n    }\n\n    if (passwordError) {\n      logger.info('wrong password element found');\n      return Promise.reject(new Error('linkedin: invalid password'));\n    }\n\n    if (page.$(manualChallengeRequested)) {\n      logger.warn('manual check was required');\n      return Promise.reject(new Error(`linkedin: manual check was required, verify if your login is properly working manually or report this issue: ${pkg.name} ${pkg.version} ${pkg.bugs.url}`));\n    }\n\n    logger.error('could not find any element to retrieve a proper error');\n    return Promise.reject(new Error(`${pkg.name} ${pkg.version} login is not working, please report: ${pkg.bugs.url}`));\n  });\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/scrapedin/src/login.js"],"names":["openPage","require","logger","__filename","pkg","module","exports","browser","email","password","url","page","info","goto","waitFor","$","then","emailElement","type","passwordElement","$x","button","click","timeout","close","catch","warn","emailError","evaluate","e","document","querySelector","style","window","getComputedStyle","display","visibility","opacity","passwordError","manualChallengeRequested","Promise","reject","Error","name","version","bugs","error"],"mappings":"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","sourcesContent":["const openPage = require('./openPage')\nconst logger = require('./logger')(__filename)\nconst pkg = require('./package')\n\nmodule.exports = async (browser, email, password) => {\n  const url = 'https://www.linkedin.com/login'\n  const page = await openPage({ browser, url })\n  logger.info(`logging at: ${url}`)\n\n  await page.goto(url)\n  await page.waitFor('#username')\n\n  await page.$('#username')\n    .then((emailElement) => emailElement.type(email))\n  await page.$('#password')\n    .then((passwordElement) => passwordElement.type(password))\n\n  await page.$x(\"//button[contains(text(), 'Sign in')]\")\n    .then((button) => button[0].click())\n\n  return page.waitFor('input[role=combobox]', {\n    timeout: 15000\n  })\n    .then(async () => {\n      logger.info('logged feed page selector found')\n      await page.close()\n    })\n    .catch(async () => {\n      logger.warn('successful login element was not found')\n      const emailError = await page.evaluate(() => {\n        const e = document.querySelector('div[error-for=username]')\n        if (!e) { return false }\n        const style = window.getComputedStyle(e)\n        return style && style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0'\n      })\n\n      const passwordError = await page.evaluate(() => {\n        const e = document.querySelector('div[error-for=password]')\n        if (!e) { return false }\n        const style = window.getComputedStyle(e)\n        return style && style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0'\n      })\n\n      const manualChallengeRequested = await page.evaluate(() => {\n        const e = document.querySelector('.flow-challenge-content')\n        if (!e) { return false }\n        const style = window.getComputedStyle(e)\n        return style && style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0'\n      })\n\n      if (emailError) {\n        logger.info('wrong username element found')\n        return Promise.reject(new Error(`linkedin: invalid username: ${email}`))\n      }\n\n      if (passwordError) {\n        logger.info('wrong password element found')\n        return Promise.reject(new Error('linkedin: invalid password'))\n      }\n\n      if (page.$(manualChallengeRequested)) {\n        logger.warn('manual check was required')\n        return Promise.reject(new Error(`linkedin: manual check was required, verify if your login is properly working manually or report this issue: ${pkg.name} ${pkg.version} ${pkg.bugs.url}`))\n      }\n\n      logger.error('could not find any element to retrieve a proper error')\n      return Promise.reject(new Error(`${pkg.name} ${pkg.version} login is not working, please report: ${pkg.bugs.url}`))\n    })\n}\n"]},"metadata":{},"sourceType":"module"}