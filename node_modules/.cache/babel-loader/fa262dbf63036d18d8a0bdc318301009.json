{"ast":null,"code":"'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Gather environment variables from various locations.\n *\n * @param {Object} environment The default environment variables.\n * @returns {Object} environment.\n * @api public\n */\n\nfunction env(environment) {\n  environment = environment || {};\n\n  if ('object' === typeof process && 'object' === typeof process.env) {\n    env.merge(environment, process.env);\n  }\n\n  if ('undefined' !== typeof window) {\n    if ('string' === window.name && window.name.length) {\n      env.merge(environment, env.parse(window.name));\n    }\n\n    try {\n      if (window.localStorage) {\n        env.merge(environment, env.parse(window.localStorage.env || window.localStorage.debug));\n      }\n    } catch (e) {}\n\n    if ('object' === typeof window.location && 'string' === typeof window.location.hash && window.location.hash.length) {\n      env.merge(environment, env.parse(window.location.hash.charAt(0) === '#' ? window.location.hash.slice(1) : window.location.hash));\n    }\n  } //\n  // Also add lower case variants to the object for easy access.\n  //\n\n\n  var key, lower;\n\n  for (key in environment) {\n    lower = key.toLowerCase();\n\n    if (!(lower in environment)) {\n      environment[lower] = environment[key];\n    }\n  }\n\n  return environment;\n}\n/**\n * A poor man's merge utility.\n *\n * @param {Object} base Object where the add object is merged in.\n * @param {Object} add Object that needs to be added to the base object.\n * @returns {Object} base\n * @api private\n */\n\n\nenv.merge = function merge(base, add) {\n  for (var key in add) {\n    if (has.call(add, key)) {\n      base[key] = add[key];\n    }\n  }\n\n  return base;\n};\n/**\n * A poor man's query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object} Key value mapped query string.\n * @api private\n */\n\n\nenv.parse = function parse(query) {\n  var parser = /([^=?&]+)=([^&]*)/g,\n      result = {},\n      part;\n  if (!query) return result;\n\n  for (; part = parser.exec(query); result[decodeURIComponent(part[1])] = decodeURIComponent(part[2]));\n\n  return result.env || result;\n}; //\n// Expose the module\n//\n\n\nmodule.exports = env;","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/node_modules/env-variable/index.js"],"names":["has","Object","prototype","hasOwnProperty","env","environment","process","merge","window","name","length","parse","localStorage","debug","e","location","hash","charAt","slice","key","lower","toLowerCase","base","add","call","query","parser","result","part","exec","decodeURIComponent","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Gather environment variables from various locations.\n *\n * @param {Object} environment The default environment variables.\n * @returns {Object} environment.\n * @api public\n */\nfunction env(environment) {\n  environment = environment || {};\n\n  if ('object' === typeof process && 'object' === typeof process.env) {\n    env.merge(environment, process.env);\n  }\n\n  if ('undefined' !== typeof window) {\n    if ('string' === window.name && window.name.length) {\n      env.merge(environment, env.parse(window.name));\n    }\n\n    try {\n      if (window.localStorage) {\n        env.merge(environment, env.parse(window.localStorage.env || window.localStorage.debug));\n      }\n    } catch (e) {}\n\n    if (\n         'object' === typeof window.location\n      && 'string' === typeof window.location.hash\n      && window.location.hash.length\n    ) {\n      env.merge(environment, env.parse(window.location.hash.charAt(0) === '#'\n        ? window.location.hash.slice(1)\n        : window.location.hash\n      ));\n    }\n  }\n\n  //\n  // Also add lower case variants to the object for easy access.\n  //\n  var key, lower;\n  for (key in environment) {\n    lower = key.toLowerCase();\n\n    if (!(lower in environment)) {\n      environment[lower] = environment[key];\n    }\n  }\n\n  return environment;\n}\n\n/**\n * A poor man's merge utility.\n *\n * @param {Object} base Object where the add object is merged in.\n * @param {Object} add Object that needs to be added to the base object.\n * @returns {Object} base\n * @api private\n */\nenv.merge = function merge(base, add) {\n  for (var key in add) {\n    if (has.call(add, key)) {\n      base[key] = add[key];\n    }\n  }\n\n  return base;\n};\n\n/**\n * A poor man's query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object} Key value mapped query string.\n * @api private\n */\nenv.parse = function parse(query) {\n  var parser = /([^=?&]+)=([^&]*)/g\n    , result = {}\n    , part;\n\n  if (!query) return result;\n\n  for (;\n    part = parser.exec(query);\n    result[decodeURIComponent(part[1])] = decodeURIComponent(part[2])\n  );\n\n  return result.env || result;\n};\n\n//\n// Expose the module\n//\nmodule.exports = env;\n"]},"metadata":{},"sourceType":"script"}