{"ast":null,"code":"/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {\n  Events\n} = require('./Events');\n\nconst {\n  Page\n} = require('./Page');\n\nclass Target {\n  /**\n   * @param {!Protocol.Target.TargetInfo} targetInfo\n   * @param {!Puppeteer.BrowserContext} browserContext\n   * @param {!function():!Promise<!Puppeteer.CDPSession>} sessionFactory\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {!Puppeteer.TaskQueue} screenshotTaskQueue\n   */\n  constructor(targetInfo, browserContext, sessionFactory, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {\n    this._targetInfo = targetInfo;\n    this._browserContext = browserContext;\n    this._targetId = targetInfo.targetId;\n    this._sessionFactory = sessionFactory;\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._screenshotTaskQueue = screenshotTaskQueue;\n    /** @type {?Promise<!Puppeteer.Page>} */\n\n    this._pagePromise = null;\n    this._initializedPromise = new Promise(fulfill => this._initializedCallback = fulfill).then(async success => {\n      if (!success) return false;\n      const opener = this.opener();\n      if (!opener || !opener._pagePromise || this.type() !== 'page') return true;\n      const openerPage = await opener._pagePromise;\n      if (!openerPage.listenerCount(Events.Page.Popup)) return true;\n      const popupPage = await this.page();\n      openerPage.emit(Events.Page.Popup, popupPage);\n      return true;\n    });\n    this._isClosedPromise = new Promise(fulfill => this._closedCallback = fulfill);\n    this._isInitialized = this._targetInfo.type !== 'page' || this._targetInfo.url !== '';\n    if (this._isInitialized) this._initializedCallback(true);\n  }\n  /**\n   * @return {!Promise<!Puppeteer.CDPSession>}\n   */\n\n\n  createCDPSession() {\n    return this._sessionFactory();\n  }\n  /**\n   * @return {!Promise<?Page>}\n   */\n\n\n  async page() {\n    if ((this._targetInfo.type === 'page' || this._targetInfo.type === 'background_page') && !this._pagePromise) {\n      this._pagePromise = this._sessionFactory().then(client => Page.create(client, this, this._ignoreHTTPSErrors, this._defaultViewport, this._screenshotTaskQueue));\n    }\n\n    return this._pagePromise;\n  }\n  /**\n   * @return {string}\n   */\n\n\n  url() {\n    return this._targetInfo.url;\n  }\n  /**\n   * @return {\"page\"|\"background_page\"|\"service_worker\"|\"other\"|\"browser\"}\n   */\n\n\n  type() {\n    const type = this._targetInfo.type;\n    if (type === 'page' || type === 'background_page' || type === 'service_worker' || type === 'browser') return type;\n    return 'other';\n  }\n  /**\n   * @return {!Puppeteer.Browser}\n   */\n\n\n  browser() {\n    return this._browserContext.browser();\n  }\n  /**\n   * @return {!Puppeteer.BrowserContext}\n   */\n\n\n  browserContext() {\n    return this._browserContext;\n  }\n  /**\n   * @return {?Puppeteer.Target}\n   */\n\n\n  opener() {\n    const {\n      openerId\n    } = this._targetInfo;\n    if (!openerId) return null;\n    return this.browser()._targets.get(openerId);\n  }\n  /**\n   * @param {!Protocol.Target.TargetInfo} targetInfo\n   */\n\n\n  _targetInfoChanged(targetInfo) {\n    this._targetInfo = targetInfo;\n\n    if (!this._isInitialized && (this._targetInfo.type !== 'page' || this._targetInfo.url !== '')) {\n      this._isInitialized = true;\n\n      this._initializedCallback(true);\n\n      return;\n    }\n  }\n\n}\n\nmodule.exports = {\n  Target\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/node_modules/puppeteer/lib/Target.js"],"names":["Events","require","Page","Target","constructor","targetInfo","browserContext","sessionFactory","ignoreHTTPSErrors","defaultViewport","screenshotTaskQueue","_targetInfo","_browserContext","_targetId","targetId","_sessionFactory","_ignoreHTTPSErrors","_defaultViewport","_screenshotTaskQueue","_pagePromise","_initializedPromise","Promise","fulfill","_initializedCallback","then","success","opener","type","openerPage","listenerCount","Popup","popupPage","page","emit","_isClosedPromise","_closedCallback","_isInitialized","url","createCDPSession","client","create","browser","openerId","_targets","get","_targetInfoChanged","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {Events} = require('./Events');\nconst {Page} = require('./Page');\n\nclass Target {\n  /**\n   * @param {!Protocol.Target.TargetInfo} targetInfo\n   * @param {!Puppeteer.BrowserContext} browserContext\n   * @param {!function():!Promise<!Puppeteer.CDPSession>} sessionFactory\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {!Puppeteer.TaskQueue} screenshotTaskQueue\n   */\n  constructor(targetInfo, browserContext, sessionFactory, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {\n    this._targetInfo = targetInfo;\n    this._browserContext = browserContext;\n    this._targetId = targetInfo.targetId;\n    this._sessionFactory = sessionFactory;\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._screenshotTaskQueue = screenshotTaskQueue;\n    /** @type {?Promise<!Puppeteer.Page>} */\n    this._pagePromise = null;\n    this._initializedPromise = new Promise(fulfill => this._initializedCallback = fulfill).then(async success => {\n      if (!success)\n        return false;\n      const opener = this.opener();\n      if (!opener || !opener._pagePromise || this.type() !== 'page')\n        return true;\n      const openerPage = await opener._pagePromise;\n      if (!openerPage.listenerCount(Events.Page.Popup))\n        return true;\n      const popupPage = await this.page();\n      openerPage.emit(Events.Page.Popup, popupPage);\n      return true;\n    });\n    this._isClosedPromise = new Promise(fulfill => this._closedCallback = fulfill);\n    this._isInitialized = this._targetInfo.type !== 'page' || this._targetInfo.url !== '';\n    if (this._isInitialized)\n      this._initializedCallback(true);\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.CDPSession>}\n   */\n  createCDPSession() {\n    return this._sessionFactory();\n  }\n\n  /**\n   * @return {!Promise<?Page>}\n   */\n  async page() {\n    if ((this._targetInfo.type === 'page' || this._targetInfo.type === 'background_page') && !this._pagePromise) {\n      this._pagePromise = this._sessionFactory()\n          .then(client => Page.create(client, this, this._ignoreHTTPSErrors, this._defaultViewport, this._screenshotTaskQueue));\n    }\n    return this._pagePromise;\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._targetInfo.url;\n  }\n\n  /**\n   * @return {\"page\"|\"background_page\"|\"service_worker\"|\"other\"|\"browser\"}\n   */\n  type() {\n    const type = this._targetInfo.type;\n    if (type === 'page' || type === 'background_page' || type === 'service_worker' || type === 'browser')\n      return type;\n    return 'other';\n  }\n\n  /**\n   * @return {!Puppeteer.Browser}\n   */\n  browser() {\n    return this._browserContext.browser();\n  }\n\n  /**\n   * @return {!Puppeteer.BrowserContext}\n   */\n  browserContext() {\n    return this._browserContext;\n  }\n\n  /**\n   * @return {?Puppeteer.Target}\n   */\n  opener() {\n    const { openerId } = this._targetInfo;\n    if (!openerId)\n      return null;\n    return this.browser()._targets.get(openerId);\n  }\n\n  /**\n   * @param {!Protocol.Target.TargetInfo} targetInfo\n   */\n  _targetInfoChanged(targetInfo) {\n    this._targetInfo = targetInfo;\n\n    if (!this._isInitialized && (this._targetInfo.type !== 'page' || this._targetInfo.url !== '')) {\n      this._isInitialized = true;\n      this._initializedCallback(true);\n      return;\n    }\n  }\n}\n\nmodule.exports = {Target};\n"]},"metadata":{},"sourceType":"script"}