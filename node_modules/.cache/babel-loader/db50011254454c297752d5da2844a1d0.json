{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass EmulationManager {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._emulatingMobile = false;\n    this._hasTouch = false;\n  }\n  /**\n   * @param {!Puppeteer.Viewport} viewport\n   * @return {Promise<boolean>}\n   */\n\n\n  async emulateViewport(viewport) {\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor || 1;\n    /** @type {Protocol.Emulation.ScreenOrientation} */\n\n    const screenOrientation = viewport.isLandscape ? {\n      angle: 90,\n      type: 'landscapePrimary'\n    } : {\n      angle: 0,\n      type: 'portraitPrimary'\n    };\n    const hasTouch = viewport.hasTouch || false;\n    await Promise.all([this._client.send('Emulation.setDeviceMetricsOverride', {\n      mobile,\n      width,\n      height,\n      deviceScaleFactor,\n      screenOrientation\n    }), this._client.send('Emulation.setTouchEmulationEnabled', {\n      enabled: hasTouch\n    })]);\n    const reloadNeeded = this._emulatingMobile !== mobile || this._hasTouch !== hasTouch;\n    this._emulatingMobile = mobile;\n    this._hasTouch = hasTouch;\n    return reloadNeeded;\n  }\n\n}\n\nmodule.exports = {\n  EmulationManager\n};","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/node_modules/puppeteer/lib/EmulationManager.js"],"names":["EmulationManager","constructor","client","_client","_emulatingMobile","_hasTouch","emulateViewport","viewport","mobile","isMobile","width","height","deviceScaleFactor","screenOrientation","isLandscape","angle","type","hasTouch","Promise","all","send","enabled","reloadNeeded","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,gBAAN,CAAuB;AACrB;AACF;AACA;AACEC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKE,gBAAL,GAAwB,KAAxB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACD;AAED;AACF;AACA;AACA;;;AACuB,QAAfC,eAAe,CAACC,QAAD,EAAW;AAC9B,UAAMC,MAAM,GAAGD,QAAQ,CAACE,QAAT,IAAqB,KAApC;AACA,UAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAvB;AACA,UAAMC,MAAM,GAAGJ,QAAQ,CAACI,MAAxB;AACA,UAAMC,iBAAiB,GAAGL,QAAQ,CAACK,iBAAT,IAA8B,CAAxD;AACA;;AACA,UAAMC,iBAAiB,GAAGN,QAAQ,CAACO,WAAT,GAAuB;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KAAvB,GAAiE;AAAED,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KAA3F;AACA,UAAMC,QAAQ,GAAGV,QAAQ,CAACU,QAAT,IAAqB,KAAtC;AAEA,UAAMC,OAAO,CAACC,GAAR,CAAY,CAChB,KAAKhB,OAAL,CAAaiB,IAAb,CAAkB,oCAAlB,EAAwD;AAAEZ,MAAAA,MAAF;AAAUE,MAAAA,KAAV;AAAiBC,MAAAA,MAAjB;AAAyBC,MAAAA,iBAAzB;AAA4CC,MAAAA;AAA5C,KAAxD,CADgB,EAEhB,KAAKV,OAAL,CAAaiB,IAAb,CAAkB,oCAAlB,EAAwD;AACtDC,MAAAA,OAAO,EAAEJ;AAD6C,KAAxD,CAFgB,CAAZ,CAAN;AAOA,UAAMK,YAAY,GAAG,KAAKlB,gBAAL,KAA0BI,MAA1B,IAAoC,KAAKH,SAAL,KAAmBY,QAA5E;AACA,SAAKb,gBAAL,GAAwBI,MAAxB;AACA,SAAKH,SAAL,GAAiBY,QAAjB;AACA,WAAOK,YAAP;AACD;;AAlCoB;;AAqCvBC,MAAM,CAACC,OAAP,GAAiB;AAACxB,EAAAA;AAAD,CAAjB","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass EmulationManager {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._emulatingMobile = false;\n    this._hasTouch = false;\n  }\n\n  /**\n   * @param {!Puppeteer.Viewport} viewport\n   * @return {Promise<boolean>}\n   */\n  async emulateViewport(viewport) {\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor || 1;\n    /** @type {Protocol.Emulation.ScreenOrientation} */\n    const screenOrientation = viewport.isLandscape ? { angle: 90, type: 'landscapePrimary' } : { angle: 0, type: 'portraitPrimary' };\n    const hasTouch = viewport.hasTouch || false;\n\n    await Promise.all([\n      this._client.send('Emulation.setDeviceMetricsOverride', { mobile, width, height, deviceScaleFactor, screenOrientation }),\n      this._client.send('Emulation.setTouchEmulationEnabled', {\n        enabled: hasTouch\n      })\n    ]);\n\n    const reloadNeeded = this._emulatingMobile !== mobile || this._hasTouch !== hasTouch;\n    this._emulatingMobile = mobile;\n    this._hasTouch = hasTouch;\n    return reloadNeeded;\n  }\n}\n\nmodule.exports = {EmulationManager};\n"]},"metadata":{},"sourceType":"script"}