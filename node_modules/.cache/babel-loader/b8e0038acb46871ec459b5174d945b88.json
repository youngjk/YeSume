{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst os = require('os');\n\nconst path = require('path');\n\nconst http = require('http');\n\nconst URL = require('url');\n\nconst removeFolder = require('rimraf');\n\nconst childProcess = require('child_process');\n\nconst BrowserFetcher = require('./BrowserFetcher');\n\nconst {\n  Connection\n} = require('./Connection');\n\nconst {\n  Browser\n} = require('./Browser');\n\nconst readline = require('readline');\n\nconst fs = require('fs');\n\nconst {\n  helper,\n  assert,\n  debugError\n} = require('./helper');\n\nconst {\n  TimeoutError\n} = require('./Errors');\n\nconst WebSocketTransport = require('./WebSocketTransport');\n\nconst PipeTransport = require('./PipeTransport');\n\nconst mkdtempAsync = helper.promisify(fs.mkdtemp);\nconst removeFolderAsync = helper.promisify(removeFolder);\nconst CHROME_PROFILE_PATH = path.join(os.tmpdir(), 'puppeteer_dev_profile-');\nconst DEFAULT_ARGS = ['--disable-background-networking', '--enable-features=NetworkService,NetworkServiceInProcess', '--disable-background-timer-throttling', '--disable-backgrounding-occluded-windows', '--disable-breakpad', '--disable-client-side-phishing-detection', '--disable-default-apps', '--disable-dev-shm-usage', '--disable-extensions', // TODO: Support OOOPIF. @see https://github.com/GoogleChrome/puppeteer/issues/2548\n// BlinkGenPropertyTrees disabled due to crbug.com/937609\n'--disable-features=site-per-process,TranslateUI,BlinkGenPropertyTrees', '--disable-hang-monitor', '--disable-ipc-flooding-protection', '--disable-popup-blocking', '--disable-prompt-on-repost', '--disable-renderer-backgrounding', '--disable-sync', '--force-color-profile=srgb', '--metrics-recording-only', '--no-first-run', '--safebrowsing-disable-auto-update', '--enable-automation', '--password-store=basic', '--use-mock-keychain'];\n\nclass Launcher {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Browser>}\n   */\n\n\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {\n        width: 800,\n        height: 600\n      },\n      slowMo = 0,\n      timeout = 30000\n    } = options;\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs) chromeArguments.push(...this.defaultArgs(options));else if (Array.isArray(ignoreDefaultArgs)) chromeArguments.push(...this.defaultArgs(options).filter(arg => ignoreDefaultArgs.indexOf(arg) === -1));else chromeArguments.push(...args);\n    let temporaryUserDataDir = null;\n    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-'))) chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n\n    if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {\n      temporaryUserDataDir = await mkdtempAsync(CHROME_PROFILE_PATH);\n      chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n    }\n\n    let chromeExecutable = executablePath;\n\n    if (!executablePath) {\n      const {\n        missingText,\n        executablePath\n      } = this._resolveExecutablePath();\n\n      if (missingText) throw new Error(missingText);\n      chromeExecutable = executablePath;\n    }\n\n    const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n    /** @type {!Array<\"ignore\"|\"pipe\">} */\n\n    const stdio = usePipe ? ['ignore', 'ignore', 'ignore', 'pipe', 'pipe'] : ['pipe', 'pipe', 'pipe'];\n    const chromeProcess = childProcess.spawn(chromeExecutable, chromeArguments, {\n      // On non-windows platforms, `detached: false` makes child process a leader of a new\n      // process group, making it possible to kill child process tree with `.kill(-pid)` command.\n      // @see https://nodejs.org/api/child_process.html#child_process_options_detached\n      detached: process.platform !== 'win32',\n      env,\n      stdio\n    });\n\n    if (dumpio) {\n      chromeProcess.stderr.pipe(process.stderr);\n      chromeProcess.stdout.pipe(process.stdout);\n    }\n\n    let chromeClosed = false;\n    const waitForChromeToClose = new Promise((fulfill, reject) => {\n      chromeProcess.once('exit', () => {\n        chromeClosed = true; // Cleanup as processes exit.\n\n        if (temporaryUserDataDir) {\n          removeFolderAsync(temporaryUserDataDir).then(() => fulfill()).catch(err => console.error(err));\n        } else {\n          fulfill();\n        }\n      });\n    });\n    const listeners = [helper.addEventListener(process, 'exit', killChrome)];\n    if (handleSIGINT) listeners.push(helper.addEventListener(process, 'SIGINT', () => {\n      killChrome();\n      process.exit(130);\n    }));\n    if (handleSIGTERM) listeners.push(helper.addEventListener(process, 'SIGTERM', gracefullyCloseChrome));\n    if (handleSIGHUP) listeners.push(helper.addEventListener(process, 'SIGHUP', gracefullyCloseChrome));\n    /** @type {?Connection} */\n\n    let connection = null;\n\n    try {\n      if (!usePipe) {\n        const browserWSEndpoint = await waitForWSEndpoint(chromeProcess, timeout, this._preferredRevision);\n        const transport = await WebSocketTransport.create(browserWSEndpoint);\n        connection = new Connection(browserWSEndpoint, transport, slowMo);\n      } else {\n        const transport = new PipeTransport(\n        /** @type {!NodeJS.WritableStream} */\n        chromeProcess.stdio[3],\n        /** @type {!NodeJS.ReadableStream} */\n        chromeProcess.stdio[4]);\n        connection = new Connection('', transport, slowMo);\n      }\n\n      const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, chromeProcess, gracefullyCloseChrome);\n      await browser.waitForTarget(t => t.type() === 'page');\n      return browser;\n    } catch (e) {\n      killChrome();\n      throw e;\n    }\n    /**\n     * @return {Promise}\n     */\n\n\n    function gracefullyCloseChrome() {\n      helper.removeEventListeners(listeners);\n\n      if (temporaryUserDataDir) {\n        killChrome();\n      } else if (connection) {\n        // Attempt to close chrome gracefully\n        connection.send('Browser.close').catch(error => {\n          debugError(error);\n          killChrome();\n        });\n      }\n\n      return waitForChromeToClose;\n    } // This method has to be sync to be used as 'exit' event handler.\n\n\n    function killChrome() {\n      helper.removeEventListeners(listeners);\n\n      if (chromeProcess.pid && !chromeProcess.killed && !chromeClosed) {\n        // Force kill chrome.\n        try {\n          if (process.platform === 'win32') childProcess.execSync(`taskkill /pid ${chromeProcess.pid} /T /F`);else process.kill(-chromeProcess.pid, 'SIGKILL');\n        } catch (e) {// the process might have already stopped\n        }\n      } // Attempt to remove temporary profile directory to avoid littering.\n\n\n      try {\n        removeFolder.sync(temporaryUserDataDir);\n      } catch (e) {}\n    }\n  }\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n\n\n  defaultArgs(options = {}) {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    const chromeArguments = [...DEFAULT_ARGS];\n    if (userDataDir) chromeArguments.push(`--user-data-dir=${userDataDir}`);\n    if (devtools) chromeArguments.push('--auto-open-devtools-for-tabs');\n\n    if (headless) {\n      chromeArguments.push('--headless', '--hide-scrollbars', '--mute-audio');\n      if (os.platform() === 'win32') chromeArguments.push('--disable-gpu');\n    }\n\n    if (args.every(arg => arg.startsWith('-'))) chromeArguments.push('about:blank');\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n  /**\n   * @return {string}\n   */\n\n\n  executablePath() {\n    return this._resolveExecutablePath().executablePath;\n  }\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint?: string, browserURL?: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Browser>}\n   */\n\n\n  async connect(options) {\n    const {\n      browserWSEndpoint,\n      browserURL,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {\n        width: 800,\n        height: 600\n      },\n      transport,\n      slowMo = 0\n    } = options;\n    assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) === 1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n    let connection = null;\n\n    if (transport) {\n      connection = new Connection('', transport, slowMo);\n    } else if (browserWSEndpoint) {\n      const connectionTransport = await WebSocketTransport.create(browserWSEndpoint);\n      connection = new Connection(browserWSEndpoint, connectionTransport, slowMo);\n    } else if (browserURL) {\n      const connectionURL = await getWSEndpoint(browserURL);\n      const connectionTransport = await WebSocketTransport.create(connectionURL);\n      connection = new Connection(connectionURL, connectionTransport, slowMo);\n    }\n\n    const {\n      browserContextIds\n    } = await connection.send('Target.getBrowserContexts');\n    return Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(debugError));\n  }\n  /**\n   * @return {{executablePath: string, missingText: ?string}}\n   */\n\n\n  _resolveExecutablePath() {\n    const browserFetcher = new BrowserFetcher(this._projectRoot); // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n\n    if (!this._isPuppeteerCore) {\n      const executablePath = process.env['PUPPETEER_EXECUTABLE_PATH'];\n\n      if (executablePath) {\n        const missingText = !fs.existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : null;\n        return {\n          executablePath,\n          missingText\n        };\n      }\n\n      const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n\n      if (revision) {\n        const revisionInfo = browserFetcher.revisionInfo(revision);\n        const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : null;\n        return {\n          executablePath: revisionInfo.executablePath,\n          missingText\n        };\n      }\n    }\n\n    const revisionInfo = browserFetcher.revisionInfo(this._preferredRevision);\n    const missingText = !revisionInfo.local ? `Chromium revision is not downloaded. Run \"npm install\" or \"yarn install\"` : null;\n    return {\n      executablePath: revisionInfo.executablePath,\n      missingText\n    };\n  }\n\n}\n/**\n * @param {!Puppeteer.ChildProcess} chromeProcess\n * @param {number} timeout\n * @param {string} preferredRevision\n * @return {!Promise<string>}\n */\n\n\nfunction waitForWSEndpoint(chromeProcess, timeout, preferredRevision) {\n  return new Promise((resolve, reject) => {\n    const rl = readline.createInterface({\n      input: chromeProcess.stderr\n    });\n    let stderr = '';\n    const listeners = [helper.addEventListener(rl, 'line', onLine), helper.addEventListener(rl, 'close', () => onClose()), helper.addEventListener(chromeProcess, 'exit', () => onClose()), helper.addEventListener(chromeProcess, 'error', error => onClose(error))];\n    const timeoutId = timeout ? setTimeout(onTimeout, timeout) : 0;\n    /**\n     * @param {!Error=} error\n     */\n\n    function onClose(error) {\n      cleanup();\n      reject(new Error(['Failed to launch chrome!' + (error ? ' ' + error.message : ''), stderr, '', 'TROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md', ''].join('\\n')));\n    }\n\n    function onTimeout() {\n      cleanup();\n      reject(new TimeoutError(`Timed out after ${timeout} ms while trying to connect to Chrome! The only Chrome revision guaranteed to work is r${preferredRevision}`));\n    }\n    /**\n     * @param {string} line\n     */\n\n\n    function onLine(line) {\n      stderr += line + '\\n';\n      const match = line.match(/^DevTools listening on (ws:\\/\\/.*)$/);\n      if (!match) return;\n      cleanup();\n      resolve(match[1]);\n    }\n\n    function cleanup() {\n      if (timeoutId) clearTimeout(timeoutId);\n      helper.removeEventListeners(listeners);\n    }\n  });\n}\n/**\n * @param {string} browserURL\n * @return {!Promise<string>}\n */\n\n\nfunction getWSEndpoint(browserURL) {\n  let resolve, reject;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  const endpointURL = URL.resolve(browserURL, '/json/version');\n  const requestOptions = Object.assign(URL.parse(endpointURL), {\n    method: 'GET'\n  });\n  const request = http.request(requestOptions, res => {\n    let data = '';\n\n    if (res.statusCode !== 200) {\n      // Consume response data to free up memory.\n      res.resume();\n      reject(new Error('HTTP ' + res.statusCode));\n      return;\n    }\n\n    res.setEncoding('utf8');\n    res.on('data', chunk => data += chunk);\n    res.on('end', () => resolve(JSON.parse(data).webSocketDebuggerUrl));\n  });\n  request.on('error', reject);\n  request.end();\n  return promise.catch(e => {\n    e.message = `Failed to fetch browser webSocket url from ${endpointURL}: ` + e.message;\n    throw e;\n  });\n}\n/**\n * @typedef {Object} Launcher.ChromeArgOptions\n * @property {boolean=} headless\n * @property {Array<string>=} args\n * @property {string=} userDataDir\n * @property {boolean=} devtools\n */\n\n/**\n * @typedef {Object} Launcher.LaunchOptions\n * @property {string=} executablePath\n * @property {boolean|Array<string>=} ignoreDefaultArgs\n * @property {boolean=} handleSIGINT\n * @property {boolean=} handleSIGTERM\n * @property {boolean=} handleSIGHUP\n * @property {number=} timeout\n * @property {boolean=} dumpio\n * @property {!Object<string, string | undefined>=} env\n * @property {boolean=} pipe\n */\n\n/**\n * @typedef {Object} Launcher.BrowserOptions\n * @property {boolean=} ignoreHTTPSErrors\n * @property {(?Puppeteer.Viewport)=} defaultViewport\n * @property {number=} slowMo\n */\n\n\nmodule.exports = Launcher;","map":{"version":3,"sources":["/Users/pro/Desktop/Projects/yesume/src/node_test/node_modules/puppeteer/lib/Launcher.js"],"names":["os","require","path","http","URL","removeFolder","childProcess","BrowserFetcher","Connection","Browser","readline","fs","helper","assert","debugError","TimeoutError","WebSocketTransport","PipeTransport","mkdtempAsync","promisify","mkdtemp","removeFolderAsync","CHROME_PROFILE_PATH","join","tmpdir","DEFAULT_ARGS","Launcher","constructor","projectRoot","preferredRevision","isPuppeteerCore","_projectRoot","_preferredRevision","_isPuppeteerCore","launch","options","ignoreDefaultArgs","args","dumpio","executablePath","pipe","env","process","handleSIGINT","handleSIGTERM","handleSIGHUP","ignoreHTTPSErrors","defaultViewport","width","height","slowMo","timeout","chromeArguments","push","defaultArgs","Array","isArray","filter","arg","indexOf","temporaryUserDataDir","some","argument","startsWith","chromeExecutable","missingText","_resolveExecutablePath","Error","usePipe","includes","stdio","chromeProcess","spawn","detached","platform","stderr","stdout","chromeClosed","waitForChromeToClose","Promise","fulfill","reject","once","then","catch","err","console","error","listeners","addEventListener","killChrome","exit","gracefullyCloseChrome","connection","browserWSEndpoint","waitForWSEndpoint","transport","create","browser","waitForTarget","t","type","e","removeEventListeners","send","pid","killed","execSync","kill","sync","devtools","headless","userDataDir","every","connect","browserURL","Number","connectionTransport","connectionURL","getWSEndpoint","browserContextIds","browserFetcher","existsSync","revision","revisionInfo","local","resolve","rl","createInterface","input","onLine","onClose","timeoutId","setTimeout","onTimeout","cleanup","message","line","match","clearTimeout","promise","res","rej","endpointURL","requestOptions","Object","assign","parse","method","request","data","statusCode","resume","setEncoding","on","chunk","JSON","webSocketDebuggerUrl","end","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst os = require('os');\nconst path = require('path');\nconst http = require('http');\nconst URL = require('url');\nconst removeFolder = require('rimraf');\nconst childProcess = require('child_process');\nconst BrowserFetcher = require('./BrowserFetcher');\nconst {Connection} = require('./Connection');\nconst {Browser} = require('./Browser');\nconst readline = require('readline');\nconst fs = require('fs');\nconst {helper, assert, debugError} = require('./helper');\nconst {TimeoutError} = require('./Errors');\nconst WebSocketTransport = require('./WebSocketTransport');\nconst PipeTransport = require('./PipeTransport');\n\nconst mkdtempAsync = helper.promisify(fs.mkdtemp);\nconst removeFolderAsync = helper.promisify(removeFolder);\n\nconst CHROME_PROFILE_PATH = path.join(os.tmpdir(), 'puppeteer_dev_profile-');\n\nconst DEFAULT_ARGS = [\n  '--disable-background-networking',\n  '--enable-features=NetworkService,NetworkServiceInProcess',\n  '--disable-background-timer-throttling',\n  '--disable-backgrounding-occluded-windows',\n  '--disable-breakpad',\n  '--disable-client-side-phishing-detection',\n  '--disable-default-apps',\n  '--disable-dev-shm-usage',\n  '--disable-extensions',\n  // TODO: Support OOOPIF. @see https://github.com/GoogleChrome/puppeteer/issues/2548\n  // BlinkGenPropertyTrees disabled due to crbug.com/937609\n  '--disable-features=site-per-process,TranslateUI,BlinkGenPropertyTrees',\n  '--disable-hang-monitor',\n  '--disable-ipc-flooding-protection',\n  '--disable-popup-blocking',\n  '--disable-prompt-on-repost',\n  '--disable-renderer-backgrounding',\n  '--disable-sync',\n  '--force-color-profile=srgb',\n  '--metrics-recording-only',\n  '--no-first-run',\n  '--safebrowsing-disable-auto-update',\n  '--enable-automation',\n  '--password-store=basic',\n  '--use-mock-keychain',\n];\n\nclass Launcher {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Browser>}\n   */\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      slowMo = 0,\n      timeout = 30000\n    } = options;\n\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs)\n      chromeArguments.push(...this.defaultArgs(options));\n    else if (Array.isArray(ignoreDefaultArgs))\n      chromeArguments.push(...this.defaultArgs(options).filter(arg => ignoreDefaultArgs.indexOf(arg) === -1));\n    else\n      chromeArguments.push(...args);\n\n    let temporaryUserDataDir = null;\n\n    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-')))\n      chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n    if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {\n      temporaryUserDataDir = await mkdtempAsync(CHROME_PROFILE_PATH);\n      chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n    }\n\n    let chromeExecutable = executablePath;\n    if (!executablePath) {\n      const {missingText, executablePath} = this._resolveExecutablePath();\n      if (missingText)\n        throw new Error(missingText);\n      chromeExecutable = executablePath;\n    }\n\n    const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n    /** @type {!Array<\"ignore\"|\"pipe\">} */\n    const stdio = usePipe ? ['ignore', 'ignore', 'ignore', 'pipe', 'pipe'] : ['pipe', 'pipe', 'pipe'];\n    const chromeProcess = childProcess.spawn(\n        chromeExecutable,\n        chromeArguments,\n        {\n          // On non-windows platforms, `detached: false` makes child process a leader of a new\n          // process group, making it possible to kill child process tree with `.kill(-pid)` command.\n          // @see https://nodejs.org/api/child_process.html#child_process_options_detached\n          detached: process.platform !== 'win32',\n          env,\n          stdio\n        }\n    );\n\n    if (dumpio) {\n      chromeProcess.stderr.pipe(process.stderr);\n      chromeProcess.stdout.pipe(process.stdout);\n    }\n\n    let chromeClosed = false;\n    const waitForChromeToClose = new Promise((fulfill, reject) => {\n      chromeProcess.once('exit', () => {\n        chromeClosed = true;\n        // Cleanup as processes exit.\n        if (temporaryUserDataDir) {\n          removeFolderAsync(temporaryUserDataDir)\n              .then(() => fulfill())\n              .catch(err => console.error(err));\n        } else {\n          fulfill();\n        }\n      });\n    });\n\n    const listeners = [ helper.addEventListener(process, 'exit', killChrome) ];\n    if (handleSIGINT)\n      listeners.push(helper.addEventListener(process, 'SIGINT', () => { killChrome(); process.exit(130); }));\n    if (handleSIGTERM)\n      listeners.push(helper.addEventListener(process, 'SIGTERM', gracefullyCloseChrome));\n    if (handleSIGHUP)\n      listeners.push(helper.addEventListener(process, 'SIGHUP', gracefullyCloseChrome));\n    /** @type {?Connection} */\n    let connection = null;\n    try {\n      if (!usePipe) {\n        const browserWSEndpoint = await waitForWSEndpoint(chromeProcess, timeout, this._preferredRevision);\n        const transport = await WebSocketTransport.create(browserWSEndpoint);\n        connection = new Connection(browserWSEndpoint, transport, slowMo);\n      } else {\n        const transport = new PipeTransport(/** @type {!NodeJS.WritableStream} */(chromeProcess.stdio[3]), /** @type {!NodeJS.ReadableStream} */ (chromeProcess.stdio[4]));\n        connection = new Connection('', transport, slowMo);\n      }\n      const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, chromeProcess, gracefullyCloseChrome);\n      await browser.waitForTarget(t => t.type() === 'page');\n      return browser;\n    } catch (e) {\n      killChrome();\n      throw e;\n    }\n\n    /**\n     * @return {Promise}\n     */\n    function gracefullyCloseChrome() {\n      helper.removeEventListeners(listeners);\n      if (temporaryUserDataDir) {\n        killChrome();\n      } else if (connection) {\n        // Attempt to close chrome gracefully\n        connection.send('Browser.close').catch(error => {\n          debugError(error);\n          killChrome();\n        });\n      }\n      return waitForChromeToClose;\n    }\n\n    // This method has to be sync to be used as 'exit' event handler.\n    function killChrome() {\n      helper.removeEventListeners(listeners);\n      if (chromeProcess.pid && !chromeProcess.killed && !chromeClosed) {\n        // Force kill chrome.\n        try {\n          if (process.platform === 'win32')\n            childProcess.execSync(`taskkill /pid ${chromeProcess.pid} /T /F`);\n          else\n            process.kill(-chromeProcess.pid, 'SIGKILL');\n        } catch (e) {\n          // the process might have already stopped\n        }\n      }\n      // Attempt to remove temporary profile directory to avoid littering.\n      try {\n        removeFolder.sync(temporaryUserDataDir);\n      } catch (e) { }\n    }\n  }\n\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n  defaultArgs(options = {}) {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    const chromeArguments = [...DEFAULT_ARGS];\n    if (userDataDir)\n      chromeArguments.push(`--user-data-dir=${userDataDir}`);\n    if (devtools)\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    if (headless) {\n      chromeArguments.push(\n          '--headless',\n          '--hide-scrollbars',\n          '--mute-audio'\n      );\n      if (os.platform() === 'win32')\n        chromeArguments.push('--disable-gpu');\n    }\n    if (args.every(arg => arg.startsWith('-')))\n      chromeArguments.push('about:blank');\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n\n  /**\n   * @return {string}\n   */\n  executablePath() {\n    return this._resolveExecutablePath().executablePath;\n  }\n\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint?: string, browserURL?: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Browser>}\n   */\n  async connect(options) {\n    const {\n      browserWSEndpoint,\n      browserURL,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      transport,\n      slowMo = 0,\n    } = options;\n\n    assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) === 1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n\n    let connection = null;\n    if (transport) {\n      connection = new Connection('', transport, slowMo);\n    } else if (browserWSEndpoint) {\n      const connectionTransport = await WebSocketTransport.create(browserWSEndpoint);\n      connection = new Connection(browserWSEndpoint, connectionTransport, slowMo);\n    } else if (browserURL) {\n      const connectionURL = await getWSEndpoint(browserURL);\n      const connectionTransport = await WebSocketTransport.create(connectionURL);\n      connection = new Connection(connectionURL, connectionTransport, slowMo);\n    }\n\n    const {browserContextIds} = await connection.send('Target.getBrowserContexts');\n    return Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(debugError));\n  }\n\n  /**\n   * @return {{executablePath: string, missingText: ?string}}\n   */\n  _resolveExecutablePath() {\n    const browserFetcher = new BrowserFetcher(this._projectRoot);\n    // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n    if (!this._isPuppeteerCore) {\n      const executablePath = process.env['PUPPETEER_EXECUTABLE_PATH'];\n      if (executablePath) {\n        const missingText = !fs.existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : null;\n        return { executablePath, missingText };\n      }\n      const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n      if (revision) {\n        const revisionInfo = browserFetcher.revisionInfo(revision);\n        const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : null;\n        return {executablePath: revisionInfo.executablePath, missingText};\n      }\n    }\n    const revisionInfo = browserFetcher.revisionInfo(this._preferredRevision);\n    const missingText = !revisionInfo.local ? `Chromium revision is not downloaded. Run \"npm install\" or \"yarn install\"` : null;\n    return {executablePath: revisionInfo.executablePath, missingText};\n  }\n\n}\n\n/**\n * @param {!Puppeteer.ChildProcess} chromeProcess\n * @param {number} timeout\n * @param {string} preferredRevision\n * @return {!Promise<string>}\n */\nfunction waitForWSEndpoint(chromeProcess, timeout, preferredRevision) {\n  return new Promise((resolve, reject) => {\n    const rl = readline.createInterface({ input: chromeProcess.stderr });\n    let stderr = '';\n    const listeners = [\n      helper.addEventListener(rl, 'line', onLine),\n      helper.addEventListener(rl, 'close', () => onClose()),\n      helper.addEventListener(chromeProcess, 'exit', () => onClose()),\n      helper.addEventListener(chromeProcess, 'error', error => onClose(error))\n    ];\n    const timeoutId = timeout ? setTimeout(onTimeout, timeout) : 0;\n\n    /**\n     * @param {!Error=} error\n     */\n    function onClose(error) {\n      cleanup();\n      reject(new Error([\n        'Failed to launch chrome!' + (error ? ' ' + error.message : ''),\n        stderr,\n        '',\n        'TROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md',\n        '',\n      ].join('\\n')));\n    }\n\n    function onTimeout() {\n      cleanup();\n      reject(new TimeoutError(`Timed out after ${timeout} ms while trying to connect to Chrome! The only Chrome revision guaranteed to work is r${preferredRevision}`));\n    }\n\n    /**\n     * @param {string} line\n     */\n    function onLine(line) {\n      stderr += line + '\\n';\n      const match = line.match(/^DevTools listening on (ws:\\/\\/.*)$/);\n      if (!match)\n        return;\n      cleanup();\n      resolve(match[1]);\n    }\n\n    function cleanup() {\n      if (timeoutId)\n        clearTimeout(timeoutId);\n      helper.removeEventListeners(listeners);\n    }\n  });\n}\n\n/**\n * @param {string} browserURL\n * @return {!Promise<string>}\n */\nfunction getWSEndpoint(browserURL) {\n  let resolve, reject;\n  const promise = new Promise((res, rej) => { resolve = res; reject = rej; });\n\n  const endpointURL = URL.resolve(browserURL, '/json/version');\n  const requestOptions = Object.assign(URL.parse(endpointURL), { method: 'GET' });\n  const request = http.request(requestOptions, res => {\n    let data = '';\n    if (res.statusCode !== 200) {\n      // Consume response data to free up memory.\n      res.resume();\n      reject(new Error('HTTP ' + res.statusCode));\n      return;\n    }\n    res.setEncoding('utf8');\n    res.on('data', chunk => data += chunk);\n    res.on('end', () => resolve(JSON.parse(data).webSocketDebuggerUrl));\n  });\n\n  request.on('error', reject);\n  request.end();\n\n  return promise.catch(e => {\n    e.message = `Failed to fetch browser webSocket url from ${endpointURL}: ` + e.message;\n    throw e;\n  });\n}\n\n/**\n * @typedef {Object} Launcher.ChromeArgOptions\n * @property {boolean=} headless\n * @property {Array<string>=} args\n * @property {string=} userDataDir\n * @property {boolean=} devtools\n */\n\n/**\n * @typedef {Object} Launcher.LaunchOptions\n * @property {string=} executablePath\n * @property {boolean|Array<string>=} ignoreDefaultArgs\n * @property {boolean=} handleSIGINT\n * @property {boolean=} handleSIGTERM\n * @property {boolean=} handleSIGHUP\n * @property {number=} timeout\n * @property {boolean=} dumpio\n * @property {!Object<string, string | undefined>=} env\n * @property {boolean=} pipe\n */\n\n/**\n * @typedef {Object} Launcher.BrowserOptions\n * @property {boolean=} ignoreHTTPSErrors\n * @property {(?Puppeteer.Viewport)=} defaultViewport\n * @property {number=} slowMo\n */\n\n\nmodule.exports = Launcher;\n"]},"metadata":{},"sourceType":"module"}